{
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _typedef = _interopRequireDefault(require(\"./graphql/typedef\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./graphql/resolvers\"));\n\nvar _db = _interopRequireDefault(require(\"./mongodb/db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import schema, { graphql } from \"./schema\";\n// import graphql from 'graphql';\n// import { makeExecutableSchema } from 'graphql-tools';\n_mongoose[\"default\"].connect(_db[\"default\"], {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].connection.once('open', function () {\n  console.log('connected to MongoDB');\n})[\"catch\"](function (err) {\n  return console.error('error MongoDb', err);\n}); // create server\n\n\nvar app = (0, _express[\"default\"])();\nvar port = 8000;\napp.use(_bodyParser[\"default\"].json());\nvar server = new _apolloServerExpress.ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs: _typedef[\"default\"],\n  resolvers: _resolvers[\"default\"],\n  formatError: function formatError(error) {\n    return error;\n  },\n  context: function context(_ref) {\n    var req = _ref.req,\n        res = _ref.res;\n    return {\n      req: req,\n      res: res\n    };\n  }\n});\nserver.applyMiddleware({\n  app: app,\n  path: '/graphql'\n});\napp.listen(port, function () {\n  console.log(\"app server listening on port: \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiY29ubmVjdCIsInVyaSIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImNvbm5lY3Rpb24iLCJvbmNlIiwiY29uc29sZSIsImxvZyIsImVyciIsImVycm9yIiwiYXBwIiwicG9ydCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwic2VydmVyIiwiQXBvbGxvU2VydmVyIiwiaW50cm9zcGVjdGlvbiIsInR5cGVEZWZzIiwicmVzb2x2ZXJzIiwiZm9ybWF0RXJyb3IiLCJjb250ZXh0IiwicmVxIiwicmVzIiwiYXBwbHlNaWRkbGV3YXJlIiwicGF0aCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFJQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQVBBO0FBQ0E7QUFDQTtBQU9BQSxxQkFBU0MsT0FBVCxDQUFpQkMsY0FBakIsRUFBc0I7QUFBRUMsRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUE3QyxDQUF0Qjs7QUFFQUoscUJBQVNLLFVBQVQsQ0FBb0JDLElBQXBCLENBQXlCLE1BQXpCLEVBQWlDLFlBQU07QUFDckNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBQ0QsQ0FGRCxXQUVTLFVBQUNDLEdBQUQ7QUFBQSxTQUFTRixPQUFPLENBQUNHLEtBQVIsQ0FBYyxlQUFkLEVBQStCRCxHQUEvQixDQUFUO0FBQUEsQ0FGVCxFLENBS0E7OztBQUNBLElBQU1FLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBRUFELEdBQUcsQ0FBQ0UsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBRUEsSUFBTUMsTUFBTSxHQUFHLElBQUlDLGlDQUFKLENBQWlCO0FBQzlCQyxFQUFBQSxhQUFhLEVBQUUsSUFEZTtBQUU5QjtBQUNBQyxFQUFBQSxRQUFRLEVBQVJBLG1CQUg4QjtBQUk5QkMsRUFBQUEsU0FBUyxFQUFUQSxxQkFKOEI7QUFLOUJDLEVBQUFBLFdBQVcsRUFBRSxxQkFBQ1gsS0FBRDtBQUFBLFdBQVdBLEtBQVg7QUFBQSxHQUxpQjtBQU05QlksRUFBQUEsT0FBTyxFQUFFO0FBQUEsUUFBR0MsR0FBSCxRQUFHQSxHQUFIO0FBQUEsUUFBUUMsR0FBUixRQUFRQSxHQUFSO0FBQUEsV0FBbUI7QUFDMUJELE1BQUFBLEdBQUcsRUFBSEEsR0FEMEI7QUFDckJDLE1BQUFBLEdBQUcsRUFBSEE7QUFEcUIsS0FBbkI7QUFBQTtBQU5xQixDQUFqQixDQUFmO0FBV0FSLE1BQU0sQ0FBQ1MsZUFBUCxDQUF1QjtBQUFFZCxFQUFBQSxHQUFHLEVBQUhBLEdBQUY7QUFBT2UsRUFBQUEsSUFBSSxFQUFFO0FBQWIsQ0FBdkI7QUFFQWYsR0FBRyxDQUFDZ0IsTUFBSixDQUFXZixJQUFYLEVBQWlCLFlBQU07QUFDckJMLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix5Q0FBNkNJLElBQTdDO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiIvbWVkaWEvbjJfM1RCL0VEVS9HcmFwaFFML2NydWRhcHAvYmFja2VuZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbi8vIGltcG9ydCBzY2hlbWEsIHsgZ3JhcGhxbCB9IGZyb20gXCIuL3NjaGVtYVwiO1xuLy8gaW1wb3J0IGdyYXBocWwgZnJvbSAnZ3JhcGhxbCc7XG4vLyBpbXBvcnQgeyBtYWtlRXhlY3V0YWJsZVNjaGVtYSB9IGZyb20gJ2dyYXBocWwtdG9vbHMnO1xuaW1wb3J0IHsgQXBvbGxvU2VydmVyIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCB0eXBlRGVmcyBmcm9tICcuL2dyYXBocWwvdHlwZWRlZic7XG5pbXBvcnQgcmVzb2x2ZXJzIGZyb20gJy4vZ3JhcGhxbC9yZXNvbHZlcnMnO1xuaW1wb3J0IHVyaSBmcm9tICcuL21vbmdvZGIvZGInO1xuXG5tb25nb29zZS5jb25uZWN0KHVyaSwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcblxubW9uZ29vc2UuY29ubmVjdGlvbi5vbmNlKCdvcGVuJywgKCkgPT4ge1xuICBjb25zb2xlLmxvZygnY29ubmVjdGVkIHRvIE1vbmdvREInKTtcbn0pLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoJ2Vycm9yIE1vbmdvRGInLCBlcnIpKTtcblxuXG4vLyBjcmVhdGUgc2VydmVyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gODAwMDtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoe1xuICBpbnRyb3NwZWN0aW9uOiB0cnVlLFxuICAvLyBzY2hlbWEsXG4gIHR5cGVEZWZzLFxuICByZXNvbHZlcnMsXG4gIGZvcm1hdEVycm9yOiAoZXJyb3IpID0+IGVycm9yLFxuICBjb250ZXh0OiAoeyByZXEsIHJlcyB9KSA9PiAoe1xuICAgIHJlcSwgcmVzLFxuICB9KSxcbn0pO1xuXG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwLCBwYXRoOiAnL2dyYXBocWwnIH0pO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYGFwcCBzZXJ2ZXIgbGlzdGVuaW5nIG9uIHBvcnQ6ICR7cG9ydH1gKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "connect",
        "uri",
        "useNewUrlParser",
        "useUnifiedTopology",
        "connection",
        "once",
        "console",
        "log",
        "err",
        "error",
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "server",
        "ApolloServer",
        "introspection",
        "typeDefs",
        "resolvers",
        "formatError",
        "context",
        "req",
        "res",
        "applyMiddleware",
        "path",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;;;AAPA;AACA;AACA;AAOAA,qBAASC,OAAT,CAAiBC,cAAjB,EAAsB;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAAtB;;AAEAJ,qBAASK,UAAT,CAAoBC,IAApB,CAAyB,MAAzB,EAAiC,YAAM;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,CAFD,WAES,UAACC,GAAD;AAAA,SAASF,OAAO,CAACG,KAAR,CAAc,eAAd,EAA+BD,GAA/B,CAAT;AAAA,CAFT,E,CAKA;;;AACA,IAAME,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEA,IAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9BC,EAAAA,aAAa,EAAE,IADe;AAE9B;AACAC,EAAAA,QAAQ,EAARA,mBAH8B;AAI9BC,EAAAA,SAAS,EAATA,qBAJ8B;AAK9BC,EAAAA,WAAW,EAAE,qBAACX,KAAD;AAAA,WAAWA,KAAX;AAAA,GALiB;AAM9BY,EAAAA,OAAO,EAAE;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,QAAQC,GAAR,QAAQA,GAAR;AAAA,WAAmB;AAC1BD,MAAAA,GAAG,EAAHA,GAD0B;AACrBC,MAAAA,GAAG,EAAHA;AADqB,KAAnB;AAAA;AANqB,CAAjB,CAAf;AAWAR,MAAM,CAACS,eAAP,CAAuB;AAAEd,EAAAA,GAAG,EAAHA,GAAF;AAAOe,EAAAA,IAAI,EAAE;AAAb,CAAvB;AAEAf,GAAG,CAACgB,MAAJ,CAAWf,IAAX,EAAiB,YAAM;AACrBL,EAAAA,OAAO,CAACC,GAAR,yCAA6CI,IAA7C;AACD,CAFD",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourcesContent": [
        "import express from 'express';\nimport mongoose from 'mongoose';\n// import schema, { graphql } from \"./schema\";\n// import graphql from 'graphql';\n// import { makeExecutableSchema } from 'graphql-tools';\nimport { ApolloServer } from 'apollo-server-express';\nimport bodyParser from 'body-parser';\nimport typeDefs from './graphql/typedef';\nimport resolvers from './graphql/resolvers';\nimport uri from './mongodb/db';\n\nmongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n\nmongoose.connection.once('open', () => {\n  console.log('connected to MongoDB');\n}).catch((err) => console.error('error MongoDb', err));\n\n\n// create server\nconst app = express();\nconst port = 8000;\n\napp.use(bodyParser.json());\n\nconst server = new ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs,\n  resolvers,\n  formatError: (error) => error,\n  context: ({ req, res }) => ({\n    req, res,\n  }),\n});\n\nserver.applyMiddleware({ app, path: '/graphql' });\n\napp.listen(port, () => {\n  console.log(`app server listening on port: ${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572004772187
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
        "sourceFileName": "typedef.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\ntype User {\\n  id: String!\\n  firstName: String\\n  lastName: String\\n  posts: [Post]!\\n}\\n\\ntype Post {\\n  id: String!\\n  title: String!\\n  userId: String!\\n  content: String\\n  comments: [Comment]!\\n}\\n\\ntype Comment {\\n  id: String!\\n  userId: String!\\n  content: String\\n  postId: String!\\n}\\n\\n# input PostData {\\n#   id: String!\\n#   title: String\\n#   userId: String\\n#   votes: Int\\n# }\\n\\n# type Response {\\n#   success: Boolean\\n# }\\n\\ntype Query {\\n  user(id: String!): User\\n  users: [User]!\\n  post(id: String!): Post\\n  posts: [Post]!\\n  postsByUser(id: String!): [Post]!\\n  comments: [Comment]!\\n  commentsByPost(id: String!): [Comment]!\\n}\\n\\ntype Mutation {\\n  createPost(userId: String!, title: String!, content: String!): Post\\n  createComment(userId: String!, postId: String!, content: String!): Comment\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar typeDefs = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = typeDefs;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVkZWYuanMiXSwibmFtZXMiOlsidHlwZURlZnMiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxRQUFRLE9BQUdDLHdCQUFILG9CQUFkO2VBbURlRCxRIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcblxudHlwZSBVc2VyIHtcbiAgaWQ6IFN0cmluZyFcbiAgZmlyc3ROYW1lOiBTdHJpbmdcbiAgbGFzdE5hbWU6IFN0cmluZ1xuICBwb3N0czogW1Bvc3RdIVxufVxuXG50eXBlIFBvc3Qge1xuICBpZDogU3RyaW5nIVxuICB0aXRsZTogU3RyaW5nIVxuICB1c2VySWQ6IFN0cmluZyFcbiAgY29udGVudDogU3RyaW5nXG4gIGNvbW1lbnRzOiBbQ29tbWVudF0hXG59XG5cbnR5cGUgQ29tbWVudCB7XG4gIGlkOiBTdHJpbmchXG4gIHVzZXJJZDogU3RyaW5nIVxuICBjb250ZW50OiBTdHJpbmdcbiAgcG9zdElkOiBTdHJpbmchXG59XG5cbiMgaW5wdXQgUG9zdERhdGEge1xuIyAgIGlkOiBTdHJpbmchXG4jICAgdGl0bGU6IFN0cmluZ1xuIyAgIHVzZXJJZDogU3RyaW5nXG4jICAgdm90ZXM6IEludFxuIyB9XG5cbiMgdHlwZSBSZXNwb25zZSB7XG4jICAgc3VjY2VzczogQm9vbGVhblxuIyB9XG5cbnR5cGUgUXVlcnkge1xuICB1c2VyKGlkOiBTdHJpbmchKTogVXNlclxuICB1c2VyczogW1VzZXJdIVxuICBwb3N0KGlkOiBTdHJpbmchKTogUG9zdFxuICBwb3N0czogW1Bvc3RdIVxuICBwb3N0c0J5VXNlcihpZDogU3RyaW5nISk6IFtQb3N0XSFcbiAgY29tbWVudHM6IFtDb21tZW50XSFcbiAgY29tbWVudHNCeVBvc3QoaWQ6IFN0cmluZyEpOiBbQ29tbWVudF0hXG59XG5cbnR5cGUgTXV0YXRpb24ge1xuICBjcmVhdGVQb3N0KHVzZXJJZDogU3RyaW5nISwgdGl0bGU6IFN0cmluZyEsIGNvbnRlbnQ6IFN0cmluZyEpOiBQb3N0XG4gIGNyZWF0ZUNvbW1lbnQodXNlcklkOiBTdHJpbmchLCBwb3N0SWQ6IFN0cmluZyEsIGNvbnRlbnQ6IFN0cmluZyEpOiBDb21tZW50XG59XG5gO1xuXG5leHBvcnQgZGVmYXVsdCB0eXBlRGVmcztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "typedef.js"
      ],
      "names": [
        "typeDefs",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,OAAGC,wBAAH,oBAAd;eAmDeD,Q",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst typeDefs = gql`\n\ntype User {\n  id: String!\n  firstName: String\n  lastName: String\n  posts: [Post]!\n}\n\ntype Post {\n  id: String!\n  title: String!\n  userId: String!\n  content: String\n  comments: [Comment]!\n}\n\ntype Comment {\n  id: String!\n  userId: String!\n  content: String\n  postId: String!\n}\n\n# input PostData {\n#   id: String!\n#   title: String\n#   userId: String\n#   votes: Int\n# }\n\n# type Response {\n#   success: Boolean\n# }\n\ntype Query {\n  user(id: String!): User\n  users: [User]!\n  post(id: String!): Post\n  posts: [Post]!\n  postsByUser(id: String!): [Post]!\n  comments: [Comment]!\n  commentsByPost(id: String!): [Comment]!\n}\n\ntype Mutation {\n  createPost(userId: String!, title: String!, content: String!): Post\n  createComment(userId: String!, postId: String!, content: String!): Comment\n}\n`;\n\nexport default typeDefs;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572012415446
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar usersMock = [{\n  id: '1',\n  firstName: 'Tom',\n  lastName: 'Coleman'\n}, {\n  id: '2',\n  firstName: 'Sashko',\n  lastName: 'Stubailo'\n}, {\n  id: '3',\n  firstName: 'Mikhail',\n  lastName: 'Novikov'\n}];\nvar postsMock = [{\n  id: '1',\n  userId: '1',\n  title: 'Introduction to GraphQL',\n  content: 'content Introduction to GraphQL'\n}, {\n  id: '2',\n  userId: '2',\n  title: 'Welcome to Meteor',\n  content: 'content Welcome to Meteor'\n}, {\n  id: '3',\n  userId: '2',\n  title: 'Advanced GraphQL',\n  content: 'content Advanced GraphQL'\n}, {\n  id: '4',\n  userId: '3',\n  title: 'Launchpad is Cool',\n  content: 'content Launchpad is Cool'\n}];\nvar commentsMock = [{\n  id: '1',\n  userId: '1',\n  postId: '1',\n  content: 'Comment Introduction to GraphQL'\n}, {\n  id: '2',\n  userId: '2',\n  postId: '2',\n  content: 'Comment Welcome to Meteor'\n}, {\n  id: '3',\n  userId: '2',\n  postId: '2',\n  content: 'Comment Advanced GraphQL'\n}, {\n  id: '4',\n  userId: '3',\n  postId: '3',\n  content: 'Comment Launchpad is Cool'\n}];\nvar resolvers = {\n  Query: {\n    user: function user(_, _ref) {\n      var id = _ref.id;\n      var userReq = usersMock.filter(function (user) {\n        return user.id === id;\n      });\n      console.log(\"query UserReq: \".concat(userReq, \", id: \").concat(id));\n      return userReq[0];\n    },\n    users: function users() {\n      console.log('query users', usersMock);\n      return usersMock;\n    },\n    post: function post(_, _ref2) {\n      var id = _ref2.id;\n      var postReq = postsMock.filter(function (post) {\n        return post.id === id;\n      });\n      console.log(\"query PostReq: \".concat(postReq, \", id: \").concat(id));\n\n      if (!postReq[0]) {\n        return null;\n      }\n\n      postReq[0].comments = commentsMock.filter(function (comment) {\n        return comment.postId === postReq[0].id;\n      });\n      console.log(\"query post PostReq: \".concat(JSON.stringify(postReq)));\n      return postReq[0];\n    },\n    posts: function posts() {\n      var postsMockReq = postsMock.map(function (post) {\n        var newItem = _objectSpread({}, post);\n\n        newItem.comments = commentsMock.filter(function (comment) {\n          return comment.postId === post.id;\n        });\n        console.log('query posts');\n        return newItem;\n      });\n      return postsMockReq;\n    },\n    postsByUser: function postsByUser(_, _ref3) {\n      var id = _ref3.id;\n      var postsReq = postsMock.filter(function (post) {\n        return post.userId === id;\n      }); // console.log('query users.filter', comments.id);\n\n      console.log(\"query PostsReq: \".concat(postsReq, \", id: \").concat(id));\n      return postsReq;\n    },\n    comments: function comments() {\n      console.log('query comments', commentsMock);\n      return commentsMock;\n    },\n    commentsByPost: function commentsByPost(_, _ref4) {\n      var id = _ref4.id;\n      var commentsReq = commentsMock.filter(function (comment) {\n        return comment.postId === id;\n      }); // console.log('query users.filter', comments.id);\n\n      console.log(\"query CommentsReq: \".concat(commentsReq, \", id: \").concat(id));\n      return commentsReq;\n    }\n  },\n  Mutation: {\n    createPost: function createPost(_, _ref5) {\n      var title = _ref5.title,\n          userId = _ref5.userId,\n          content = _ref5.content;\n      var id = (0, _v[\"default\"])();\n      var newPost = {\n        id: id,\n        title: title,\n        userId: userId,\n        content: content\n      };\n      console.log(\"m createPost newPost: \".concat(JSON.stringify(newPost))); // return new Promise((resolve, reject) => {\n      // const len = postsMock.length;\n      // const newLen = postsMock.push(newPost);\n\n      postsMock.push(newPost);\n      console.log(\"m createPost postsMock len: \".concat(postsMock.length));\n      var newPostReq = postsMock.filter(function (post) {\n        return post.id === id;\n      });\n      console.log(\"m createPost newPostReq: \".concat(JSON.stringify(newPostReq[0])));\n\n      if (!newPostReq[0]) {\n        // return reject('error');\n        return null;\n      } // return resolve(postsMock[len - 1]);\n\n\n      return newPostReq[0]; // });\n    },\n    createComment: function createComment(_, _ref6) {\n      var userId = _ref6.userId,\n          postId = _ref6.postId,\n          content = _ref6.content;\n      var id = (0, _v[\"default\"])();\n      var newComment = {\n        id: id,\n        userId: userId,\n        postId: postId,\n        content: content\n      }; // const len = commentsMock.length;\n      // const newLen = commentsMock.push(newComment);\n\n      commentsMock.push(newComment); // if (newLen === len) {\n      //   return null;\n      // }\n\n      var newCommentReq = commentsMock.filter(function (comment) {\n        return comment.id === id;\n      });\n      console.log(\"m createPost newPostReq: \".concat(JSON.stringify(newCommentReq[0])));\n\n      if (!newCommentReq[0]) {\n        // return reject('error');\n        return null;\n      }\n\n      return newCommentReq[0];\n    }\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJ1c2Vyc01vY2siLCJpZCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicG9zdHNNb2NrIiwidXNlcklkIiwidGl0bGUiLCJjb250ZW50IiwiY29tbWVudHNNb2NrIiwicG9zdElkIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJ1c2VyIiwiXyIsInVzZXJSZXEiLCJmaWx0ZXIiLCJjb25zb2xlIiwibG9nIiwidXNlcnMiLCJwb3N0IiwicG9zdFJlcSIsImNvbW1lbnRzIiwiY29tbWVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJwb3N0cyIsInBvc3RzTW9ja1JlcSIsIm1hcCIsIm5ld0l0ZW0iLCJwb3N0c0J5VXNlciIsInBvc3RzUmVxIiwiY29tbWVudHNCeVBvc3QiLCJjb21tZW50c1JlcSIsIk11dGF0aW9uIiwiY3JlYXRlUG9zdCIsIm5ld1Bvc3QiLCJwdXNoIiwibGVuZ3RoIiwibmV3UG9zdFJlcSIsImNyZWF0ZUNvbW1lbnQiLCJuZXdDb21tZW50IiwibmV3Q29tbWVudFJlcSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLENBQ2hCO0FBQUVDLEVBQUFBLEVBQUUsRUFBRSxHQUFOO0FBQVdDLEVBQUFBLFNBQVMsRUFBRSxLQUF0QjtBQUE2QkMsRUFBQUEsUUFBUSxFQUFFO0FBQXZDLENBRGdCLEVBRWhCO0FBQUVGLEVBQUFBLEVBQUUsRUFBRSxHQUFOO0FBQVdDLEVBQUFBLFNBQVMsRUFBRSxRQUF0QjtBQUFnQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQTFDLENBRmdCLEVBR2hCO0FBQUVGLEVBQUFBLEVBQUUsRUFBRSxHQUFOO0FBQVdDLEVBQUFBLFNBQVMsRUFBRSxTQUF0QjtBQUFpQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQTNDLENBSGdCLENBQWxCO0FBTUEsSUFBTUMsU0FBUyxHQUFHLENBQ2hCO0FBQ0VILEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBQ1dJLEVBQUFB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SUFBUDtBQUNEOztBQUNELGFBQU9BLGFBQWEsQ0FBQyxDQUFELENBQXBCO0FBQ0Q7QUE1Q087QUFoRE0sQ0FBbEI7ZUFrR2UvQixTIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXVpZHY0IGZyb20gJ3V1aWQvdjQnO1xuXG5jb25zdCB1c2Vyc01vY2sgPSBbXG4gIHsgaWQ6ICcxJywgZmlyc3ROYW1lOiAnVG9tJywgbGFzdE5hbWU6ICdDb2xlbWFuJyB9LFxuICB7IGlkOiAnMicsIGZpcnN0TmFtZTogJ1Nhc2hrbycsIGxhc3ROYW1lOiAnU3R1YmFpbG8nIH0sXG4gIHsgaWQ6ICczJywgZmlyc3ROYW1lOiAnTWlraGFpbCcsIGxhc3ROYW1lOiAnTm92aWtvdicgfSxcbl07XG5cbmNvbnN0IHBvc3RzTW9jayA9IFtcbiAge1xuICAgIGlkOiAnMScsIHVzZXJJZDogJzEnLCB0aXRsZTogJ0ludHJvZHVjdGlvbiB0byBHcmFwaFFMJywgY29udGVudDogJ2NvbnRlbnQgSW50cm9kdWN0aW9uIHRvIEdyYXBoUUwnLFxuICB9LFxuICB7XG4gICAgaWQ6ICcyJywgdXNlcklkOiAnMicsIHRpdGxlOiAnV2VsY29tZSB0byBNZXRlb3InLCBjb250ZW50OiAnY29udGVudCBXZWxjb21lIHRvIE1ldGVvcicsXG4gIH0sXG4gIHtcbiAgICBpZDogJzMnLCB1c2VySWQ6ICcyJywgdGl0bGU6ICdBZHZhbmNlZCBHcmFwaFFMJywgY29udGVudDogJ2NvbnRlbnQgQWR2YW5jZWQgR3JhcGhRTCcsXG4gIH0sXG4gIHtcbiAgICBpZDogJzQnLCB1c2VySWQ6ICczJywgdGl0bGU6ICdMYXVuY2hwYWQgaXMgQ29vbCcsIGNvbnRlbnQ6ICdjb250ZW50IExhdW5jaHBhZCBpcyBDb29sJyxcbiAgfSxcbl07XG5cbmNvbnN0IGNvbW1lbnRzTW9jayA9IFtcbiAge1xuICAgIGlkOiAnMScsIHVzZXJJZDogJzEnLCBwb3N0SWQ6ICcxJywgY29udGVudDogJ0NvbW1lbnQgSW50cm9kdWN0aW9uIHRvIEdyYXBoUUwnLFxuICB9LFxuICB7XG4gICAgaWQ6ICcyJywgdXNlcklkOiAnMicsIHBvc3RJZDogJzInLCBjb250ZW50OiAnQ29tbWVudCBXZWxjb21lIHRvIE1ldGVvcicsXG4gIH0sXG4gIHtcbiAgICBpZDogJzMnLCB1c2VySWQ6ICcyJywgcG9zdElkOiAnMicsIGNvbnRlbnQ6ICdDb21tZW50IEFkdmFuY2VkIEdyYXBoUUwnLFxuICB9LFxuICB7XG4gICAgaWQ6ICc0JywgdXNlcklkOiAnMycsIHBvc3RJZDogJzMnLCBjb250ZW50OiAnQ29tbWVudCBMYXVuY2hwYWQgaXMgQ29vbCcsXG4gIH0sXG5dO1xuXG5jb25zdCByZXNvbHZlcnMgPSB7XG4gIFF1ZXJ5OiB7XG4gICAgdXNlcjogKF8sIHsgaWQgfSkgPT4ge1xuICAgICAgY29uc3QgdXNlclJlcSA9IHVzZXJzTW9jay5maWx0ZXIoKHVzZXIpID0+IHVzZXIuaWQgPT09IGlkKTtcbiAgICAgIGNvbnNvbGUubG9nKGBxdWVyeSBVc2VyUmVxOiAke3VzZXJSZXF9LCBpZDogJHtpZH1gKTtcbiAgICAgIHJldHVybiB1c2VyUmVxWzBdO1xuICAgIH0sXG4gICAgdXNlcnM6ICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdxdWVyeSB1c2VycycsIHVzZXJzTW9jayk7XG4gICAgICByZXR1cm4gdXNlcnNNb2NrO1xuICAgIH0sXG4gICAgcG9zdDogKF8sIHsgaWQgfSkgPT4ge1xuICAgICAgY29uc3QgcG9zdFJlcSA9IHBvc3RzTW9jay5maWx0ZXIoKHBvc3QpID0+IHBvc3QuaWQgPT09IGlkKTtcbiAgICAgIGNvbnNvbGUubG9nKGBxdWVyeSBQb3N0UmVxOiAke3Bvc3RSZXF9LCBpZDogJHtpZH1gKTtcbiAgICAgIGlmICghcG9zdFJlcVswXSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIHBvc3RSZXFbMF0uY29tbWVudHMgPSBjb21tZW50c01vY2suZmlsdGVyKChjb21tZW50KSA9PiBjb21tZW50LnBvc3RJZCA9PT0gcG9zdFJlcVswXS5pZCk7XG4gICAgICBjb25zb2xlLmxvZyhgcXVlcnkgcG9zdCBQb3N0UmVxOiAke0pTT04uc3RyaW5naWZ5KHBvc3RSZXEpfWApO1xuICAgICAgcmV0dXJuIHBvc3RSZXFbMF07XG4gICAgfSxcbiAgICBwb3N0czogKCkgPT4ge1xuICAgICAgY29uc3QgcG9zdHNNb2NrUmVxID0gcG9zdHNNb2NrLm1hcCgocG9zdCkgPT4ge1xuICAgICAgICBjb25zdCBuZXdJdGVtID0geyAuLi5wb3N0IH07XG4gICAgICAgIG5ld0l0ZW0uY29tbWVudHMgPSBjb21tZW50c01vY2suZmlsdGVyKChjb21tZW50KSA9PiBjb21tZW50LnBvc3RJZCA9PT0gcG9zdC5pZCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdxdWVyeSBwb3N0cycpO1xuICAgICAgICByZXR1cm4gbmV3SXRlbTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHBvc3RzTW9ja1JlcTtcbiAgICB9LFxuICAgIHBvc3RzQnlVc2VyOiAoXywgeyBpZCB9KSA9PiB7XG4gICAgICBjb25zdCBwb3N0c1JlcSA9IHBvc3RzTW9jay5maWx0ZXIoKHBvc3QpID0+IHBvc3QudXNlcklkID09PSBpZCk7XG4gICAgICAvLyBjb25zb2xlLmxvZygncXVlcnkgdXNlcnMuZmlsdGVyJywgY29tbWVudHMuaWQpO1xuICAgICAgY29uc29sZS5sb2coYHF1ZXJ5IFBvc3RzUmVxOiAke3Bvc3RzUmVxfSwgaWQ6ICR7aWR9YCk7XG4gICAgICByZXR1cm4gcG9zdHNSZXE7XG4gICAgfSxcbiAgICBjb21tZW50czogKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ3F1ZXJ5IGNvbW1lbnRzJywgY29tbWVudHNNb2NrKTtcbiAgICAgIHJldHVybiBjb21tZW50c01vY2s7XG4gICAgfSxcbiAgICBjb21tZW50c0J5UG9zdDogKF8sIHsgaWQgfSkgPT4ge1xuICAgICAgY29uc3QgY29tbWVudHNSZXEgPSBjb21tZW50c01vY2suZmlsdGVyKChjb21tZW50KSA9PiBjb21tZW50LnBvc3RJZCA9PT0gaWQpO1xuICAgICAgLy8gY29uc29sZS5sb2coJ3F1ZXJ5IHVzZXJzLmZpbHRlcicsIGNvbW1lbnRzLmlkKTtcbiAgICAgIGNvbnNvbGUubG9nKGBxdWVyeSBDb21tZW50c1JlcTogJHtjb21tZW50c1JlcX0sIGlkOiAke2lkfWApO1xuICAgICAgcmV0dXJuIGNvbW1lbnRzUmVxO1xuICAgIH0sXG4gIH0sXG5cbiAgTXV0YXRpb246IHtcbiAgICBjcmVhdGVQb3N0OiAoXywge1xuICAgICAgdGl0bGUsIHVzZXJJZCwgY29udGVudCxcbiAgICB9KSA9PiB7XG4gICAgICBjb25zdCBpZCA9IHV1aWR2NCgpO1xuICAgICAgY29uc3QgbmV3UG9zdCA9IHtcbiAgICAgICAgaWQsIHRpdGxlLCB1c2VySWQsIGNvbnRlbnQsXG4gICAgICB9O1xuICAgICAgY29uc29sZS5sb2coYG0gY3JlYXRlUG9zdCBuZXdQb3N0OiAke0pTT04uc3RyaW5naWZ5KG5ld1Bvc3QpfWApO1xuICAgICAgLy8gcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIC8vIGNvbnN0IGxlbiA9IHBvc3RzTW9jay5sZW5ndGg7XG4gICAgICAvLyBjb25zdCBuZXdMZW4gPSBwb3N0c01vY2sucHVzaChuZXdQb3N0KTtcbiAgICAgIHBvc3RzTW9jay5wdXNoKG5ld1Bvc3QpO1xuICAgICAgY29uc29sZS5sb2coYG0gY3JlYXRlUG9zdCBwb3N0c01vY2sgbGVuOiAke3Bvc3RzTW9jay5sZW5ndGh9YCk7XG4gICAgICBjb25zdCBuZXdQb3N0UmVxID0gcG9zdHNNb2NrLmZpbHRlcigocG9zdCkgPT4gcG9zdC5pZCA9PT0gaWQpO1xuICAgICAgY29uc29sZS5sb2coYG0gY3JlYXRlUG9zdCBuZXdQb3N0UmVxOiAke0pTT04uc3RyaW5naWZ5KG5ld1Bvc3RSZXFbMF0pfWApO1xuICAgICAgaWYgKCFuZXdQb3N0UmVxWzBdKSB7XG4gICAgICAgIC8vIHJldHVybiByZWplY3QoJ2Vycm9yJyk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgLy8gcmV0dXJuIHJlc29sdmUocG9zdHNNb2NrW2xlbiAtIDFdKTtcbiAgICAgIHJldHVybiBuZXdQb3N0UmVxWzBdO1xuICAgICAgLy8gfSk7XG4gICAgfSxcbiAgICBjcmVhdGVDb21tZW50OiAoXywge1xuICAgICAgdXNlcklkLCBwb3N0SWQsIGNvbnRlbnQsXG4gICAgfSkgPT4ge1xuICAgICAgY29uc3QgaWQgPSB1dWlkdjQoKTtcbiAgICAgIGNvbnN0IG5ld0NvbW1lbnQgPSB7XG4gICAgICAgIGlkLCB1c2VySWQsIHBvc3RJZCwgY29udGVudCxcbiAgICAgIH07XG4gICAgICAvLyBjb25zdCBsZW4gPSBjb21tZW50c01vY2subGVuZ3RoO1xuICAgICAgLy8gY29uc3QgbmV3TGVuID0gY29tbWVudHNNb2NrLnB1c2gobmV3Q29tbWVudCk7XG4gICAgICBjb21tZW50c01vY2sucHVzaChuZXdDb21tZW50KTtcbiAgICAgIC8vIGlmIChuZXdMZW4gPT09IGxlbikge1xuICAgICAgLy8gICByZXR1cm4gbnVsbDtcbiAgICAgIC8vIH1cbiAgICAgIGNvbnN0IG5ld0NvbW1lbnRSZXEgPSBjb21tZW50c01vY2suZmlsdGVyKChjb21tZW50KSA9PiBjb21tZW50LmlkID09PSBpZCk7XG4gICAgICBjb25zb2xlLmxvZyhgbSBjcmVhdGVQb3N0IG5ld1Bvc3RSZXE6ICR7SlNPTi5zdHJpbmdpZnkobmV3Q29tbWVudFJlcVswXSl9YCk7XG4gICAgICBpZiAoIW5ld0NvbW1lbnRSZXFbMF0pIHtcbiAgICAgICAgLy8gcmV0dXJuIHJlamVjdCgnZXJyb3InKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3Q29tbWVudFJlcVswXTtcbiAgICB9LFxuICB9LFxuXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVycztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "usersMock",
        "id",
        "firstName",
        "lastName",
        "postsMock",
        "userId",
        "title",
        "content",
        "commentsMock",
        "postId",
        "resolvers",
        "Query",
        "user",
        "_",
        "userReq",
        "filter",
        "console",
        "log",
        "users",
        "post",
        "postReq",
        "comments",
        "comment",
        "JSON",
        "stringify",
        "posts",
        "postsMockReq",
        "map",
        "newItem",
        "postsByUser",
        "postsReq",
        "commentsByPost",
        "commentsReq",
        "Mutation",
        "createPost",
        "newPost",
        "push",
        "length",
        "newPostReq",
        "createComment",
        "newComment",
        "newCommentReq"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "sourcesContent": [
        "import uuidv4 from 'uuid/v4';\n\nconst usersMock = [\n  { id: '1', firstName: 'Tom', lastName: 'Coleman' },\n  { id: '2', firstName: 'Sashko', lastName: 'Stubailo' },\n  { id: '3', firstName: 'Mikhail', lastName: 'Novikov' },\n];\n\nconst postsMock = [\n  {\n    id: '1', userId: '1', title: 'Introduction to GraphQL', content: 'content Introduction to GraphQL',\n  },\n  {\n    id: '2', userId: '2', title: 'Welcome to Meteor', content: 'content Welcome to Meteor',\n  },\n  {\n    id: '3', userId: '2', title: 'Advanced GraphQL', content: 'content Advanced GraphQL',\n  },\n  {\n    id: '4', userId: '3', title: 'Launchpad is Cool', content: 'content Launchpad is Cool',\n  },\n];\n\nconst commentsMock = [\n  {\n    id: '1', userId: '1', postId: '1', content: 'Comment Introduction to GraphQL',\n  },\n  {\n    id: '2', userId: '2', postId: '2', content: 'Comment Welcome to Meteor',\n  },\n  {\n    id: '3', userId: '2', postId: '2', content: 'Comment Advanced GraphQL',\n  },\n  {\n    id: '4', userId: '3', postId: '3', content: 'Comment Launchpad is Cool',\n  },\n];\n\nconst resolvers = {\n  Query: {\n    user: (_, { id }) => {\n      const userReq = usersMock.filter((user) => user.id === id);\n      console.log(`query UserReq: ${userReq}, id: ${id}`);\n      return userReq[0];\n    },\n    users: () => {\n      console.log('query users', usersMock);\n      return usersMock;\n    },\n    post: (_, { id }) => {\n      const postReq = postsMock.filter((post) => post.id === id);\n      console.log(`query PostReq: ${postReq}, id: ${id}`);\n      if (!postReq[0]) {\n        return null;\n      }\n      postReq[0].comments = commentsMock.filter((comment) => comment.postId === postReq[0].id);\n      console.log(`query post PostReq: ${JSON.stringify(postReq)}`);\n      return postReq[0];\n    },\n    posts: () => {\n      const postsMockReq = postsMock.map((post) => {\n        const newItem = { ...post };\n        newItem.comments = commentsMock.filter((comment) => comment.postId === post.id);\n        console.log('query posts');\n        return newItem;\n      });\n      return postsMockReq;\n    },\n    postsByUser: (_, { id }) => {\n      const postsReq = postsMock.filter((post) => post.userId === id);\n      // console.log('query users.filter', comments.id);\n      console.log(`query PostsReq: ${postsReq}, id: ${id}`);\n      return postsReq;\n    },\n    comments: () => {\n      console.log('query comments', commentsMock);\n      return commentsMock;\n    },\n    commentsByPost: (_, { id }) => {\n      const commentsReq = commentsMock.filter((comment) => comment.postId === id);\n      // console.log('query users.filter', comments.id);\n      console.log(`query CommentsReq: ${commentsReq}, id: ${id}`);\n      return commentsReq;\n    },\n  },\n\n  Mutation: {\n    createPost: (_, {\n      title, userId, content,\n    }) => {\n      const id = uuidv4();\n      const newPost = {\n        id, title, userId, content,\n      };\n      console.log(`m createPost newPost: ${JSON.stringify(newPost)}`);\n      // return new Promise((resolve, reject) => {\n      // const len = postsMock.length;\n      // const newLen = postsMock.push(newPost);\n      postsMock.push(newPost);\n      console.log(`m createPost postsMock len: ${postsMock.length}`);\n      const newPostReq = postsMock.filter((post) => post.id === id);\n      console.log(`m createPost newPostReq: ${JSON.stringify(newPostReq[0])}`);\n      if (!newPostReq[0]) {\n        // return reject('error');\n        return null;\n      }\n      // return resolve(postsMock[len - 1]);\n      return newPostReq[0];\n      // });\n    },\n    createComment: (_, {\n      userId, postId, content,\n    }) => {\n      const id = uuidv4();\n      const newComment = {\n        id, userId, postId, content,\n      };\n      // const len = commentsMock.length;\n      // const newLen = commentsMock.push(newComment);\n      commentsMock.push(newComment);\n      // if (newLen === len) {\n      //   return null;\n      // }\n      const newCommentReq = commentsMock.filter((comment) => comment.id === id);\n      console.log(`m createPost newPostReq: ${JSON.stringify(newCommentReq[0])}`);\n      if (!newCommentReq[0]) {\n        // return reject('error');\n        return null;\n      }\n      return newCommentReq[0];\n    },\n  },\n\n};\n\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572016443014
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire('dotenv').config({\n  path: 'variables.env'\n});\n\nvar password = process.env.DBUSER_PASS;\nvar mongoDBurl = process.env.MONGODB_URL;\nvar uri = \"mongodb+srv://dbprog:\".concat(password, \"@\").concat(mongoDBurl);\nvar _default = uri;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJwYXRoIiwicGFzc3dvcmQiLCJwcm9jZXNzIiwiZW52IiwiREJVU0VSX1BBU1MiLCJtb25nb0RCdXJsIiwiTU9OR09EQl9VUkwiLCJ1cmkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEIsQ0FBeUI7QUFBRUMsRUFBQUEsSUFBSSxFQUFFO0FBQVIsQ0FBekI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBN0I7QUFFQSxJQUFNQyxVQUFVLEdBQUdILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxXQUEvQjtBQUVBLElBQU1DLEdBQUcsa0NBQTJCTixRQUEzQixjQUF1Q0ksVUFBdkMsQ0FBVDtlQUVlRSxHIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL21vbmdvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoeyBwYXRoOiAndmFyaWFibGVzLmVudicgfSk7XG5cbmNvbnN0IHBhc3N3b3JkID0gcHJvY2Vzcy5lbnYuREJVU0VSX1BBU1M7XG5cbmNvbnN0IG1vbmdvREJ1cmwgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSTDtcblxuY29uc3QgdXJpID0gYG1vbmdvZGIrc3J2Oi8vZGJwcm9nOiR7cGFzc3dvcmR9QCR7bW9uZ29EQnVybH1gO1xuXG5leHBvcnQgZGVmYXVsdCB1cmk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "require",
        "config",
        "path",
        "password",
        "process",
        "env",
        "DBUSER_PASS",
        "mongoDBurl",
        "MONGODB_URL",
        "uri"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAzB;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA7B;AAEA,IAAMC,UAAU,GAAGH,OAAO,CAACC,GAAR,CAAYG,WAA/B;AAEA,IAAMC,GAAG,kCAA2BN,QAA3B,cAAuCI,UAAvC,CAAT;eAEeE,G",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "require('dotenv').config({ path: 'variables.env' });\n\nconst password = process.env.DBUSER_PASS;\n\nconst mongoDBurl = process.env.MONGODB_URL;\n\nconst uri = `mongodb+srv://dbprog:${password}@${mongoDBurl}`;\n\nexport default uri;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572004772187
  }
}