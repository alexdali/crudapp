{
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _typedef = _interopRequireDefault(require(\"./graphql/typedef\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./graphql/resolvers\"));\n\nvar _db = _interopRequireDefault(require(\"./mongodb/db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import schema, { graphql } from \"./schema\";\n// import graphql from 'graphql';\n// import { makeExecutableSchema } from 'graphql-tools';\n_mongoose[\"default\"].connect(_db[\"default\"], {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].connection.once('open', function () {\n  console.log('connected to MongoDB');\n})[\"catch\"](function (err) {\n  return console.error('error MongoDb', err);\n}); // create server\n\n\nvar app = (0, _express[\"default\"])();\nvar port = 8000;\napp.use(_bodyParser[\"default\"].json());\nvar server = new _apolloServerExpress.ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs: _typedef[\"default\"],\n  resolvers: _resolvers[\"default\"],\n  formatError: function formatError(error) {\n    return error;\n  },\n  context: function context(_ref) {\n    var req = _ref.req,\n        res = _ref.res;\n    return {\n      req: req,\n      res: res\n    };\n  }\n});\nserver.applyMiddleware({\n  app: app,\n  path: '/graphql'\n});\napp.listen(port, function () {\n  console.log(\"app server listening on port: \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiY29ubmVjdCIsInVyaSIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImNvbm5lY3Rpb24iLCJvbmNlIiwiY29uc29sZSIsImxvZyIsImVyciIsImVycm9yIiwiYXBwIiwicG9ydCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwic2VydmVyIiwiQXBvbGxvU2VydmVyIiwiaW50cm9zcGVjdGlvbiIsInR5cGVEZWZzIiwicmVzb2x2ZXJzIiwiZm9ybWF0RXJyb3IiLCJjb250ZXh0IiwicmVxIiwicmVzIiwiYXBwbHlNaWRkbGV3YXJlIiwicGF0aCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFJQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQVBBO0FBQ0E7QUFDQTtBQU9BQSxxQkFBU0MsT0FBVCxDQUFpQkMsY0FBakIsRUFBc0I7QUFBRUMsRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUE3QyxDQUF0Qjs7QUFFQUoscUJBQVNLLFVBQVQsQ0FBb0JDLElBQXBCLENBQXlCLE1BQXpCLEVBQWlDLFlBQU07QUFDckNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBQ0QsQ0FGRCxXQUVTLFVBQUNDLEdBQUQ7QUFBQSxTQUFTRixPQUFPLENBQUNHLEtBQVIsQ0FBYyxlQUFkLEVBQStCRCxHQUEvQixDQUFUO0FBQUEsQ0FGVCxFLENBS0E7OztBQUNBLElBQU1FLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBRUFELEdBQUcsQ0FBQ0UsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBRUEsSUFBTUMsTUFBTSxHQUFHLElBQUlDLGlDQUFKLENBQWlCO0FBQzlCQyxFQUFBQSxhQUFhLEVBQUUsSUFEZTtBQUU5QjtBQUNBQyxFQUFBQSxRQUFRLEVBQVJBLG1CQUg4QjtBQUk5QkMsRUFBQUEsU0FBUyxFQUFUQSxxQkFKOEI7QUFLOUJDLEVBQUFBLFdBQVcsRUFBRSxxQkFBQ1gsS0FBRDtBQUFBLFdBQVdBLEtBQVg7QUFBQSxHQUxpQjtBQU05QlksRUFBQUEsT0FBTyxFQUFFO0FBQUEsUUFBR0MsR0FBSCxRQUFHQSxHQUFIO0FBQUEsUUFBUUMsR0FBUixRQUFRQSxHQUFSO0FBQUEsV0FBbUI7QUFDMUJELE1BQUFBLEdBQUcsRUFBSEEsR0FEMEI7QUFDckJDLE1BQUFBLEdBQUcsRUFBSEE7QUFEcUIsS0FBbkI7QUFBQTtBQU5xQixDQUFqQixDQUFmO0FBV0FSLE1BQU0sQ0FBQ1MsZUFBUCxDQUF1QjtBQUFFZCxFQUFBQSxHQUFHLEVBQUhBLEdBQUY7QUFBT2UsRUFBQUEsSUFBSSxFQUFFO0FBQWIsQ0FBdkI7QUFFQWYsR0FBRyxDQUFDZ0IsTUFBSixDQUFXZixJQUFYLEVBQWlCLFlBQU07QUFDckJMLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix5Q0FBNkNJLElBQTdDO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiIvbWVkaWEvbjJfM1RCL0VEVS9HcmFwaFFML2NydWRhcHAvYmFja2VuZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbi8vIGltcG9ydCBzY2hlbWEsIHsgZ3JhcGhxbCB9IGZyb20gXCIuL3NjaGVtYVwiO1xuLy8gaW1wb3J0IGdyYXBocWwgZnJvbSAnZ3JhcGhxbCc7XG4vLyBpbXBvcnQgeyBtYWtlRXhlY3V0YWJsZVNjaGVtYSB9IGZyb20gJ2dyYXBocWwtdG9vbHMnO1xuaW1wb3J0IHsgQXBvbGxvU2VydmVyIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCB0eXBlRGVmcyBmcm9tICcuL2dyYXBocWwvdHlwZWRlZic7XG5pbXBvcnQgcmVzb2x2ZXJzIGZyb20gJy4vZ3JhcGhxbC9yZXNvbHZlcnMnO1xuaW1wb3J0IHVyaSBmcm9tICcuL21vbmdvZGIvZGInO1xuXG5tb25nb29zZS5jb25uZWN0KHVyaSwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcblxubW9uZ29vc2UuY29ubmVjdGlvbi5vbmNlKCdvcGVuJywgKCkgPT4ge1xuICBjb25zb2xlLmxvZygnY29ubmVjdGVkIHRvIE1vbmdvREInKTtcbn0pLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoJ2Vycm9yIE1vbmdvRGInLCBlcnIpKTtcblxuXG4vLyBjcmVhdGUgc2VydmVyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gODAwMDtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoe1xuICBpbnRyb3NwZWN0aW9uOiB0cnVlLFxuICAvLyBzY2hlbWEsXG4gIHR5cGVEZWZzLFxuICByZXNvbHZlcnMsXG4gIGZvcm1hdEVycm9yOiAoZXJyb3IpID0+IGVycm9yLFxuICBjb250ZXh0OiAoeyByZXEsIHJlcyB9KSA9PiAoe1xuICAgIHJlcSwgcmVzLFxuICB9KSxcbn0pO1xuXG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwLCBwYXRoOiAnL2dyYXBocWwnIH0pO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYGFwcCBzZXJ2ZXIgbGlzdGVuaW5nIG9uIHBvcnQ6ICR7cG9ydH1gKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "connect",
        "uri",
        "useNewUrlParser",
        "useUnifiedTopology",
        "connection",
        "once",
        "console",
        "log",
        "err",
        "error",
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "server",
        "ApolloServer",
        "introspection",
        "typeDefs",
        "resolvers",
        "formatError",
        "context",
        "req",
        "res",
        "applyMiddleware",
        "path",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;;;AAPA;AACA;AACA;AAOAA,qBAASC,OAAT,CAAiBC,cAAjB,EAAsB;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAAtB;;AAEAJ,qBAASK,UAAT,CAAoBC,IAApB,CAAyB,MAAzB,EAAiC,YAAM;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,CAFD,WAES,UAACC,GAAD;AAAA,SAASF,OAAO,CAACG,KAAR,CAAc,eAAd,EAA+BD,GAA/B,CAAT;AAAA,CAFT,E,CAKA;;;AACA,IAAME,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEA,IAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9BC,EAAAA,aAAa,EAAE,IADe;AAE9B;AACAC,EAAAA,QAAQ,EAARA,mBAH8B;AAI9BC,EAAAA,SAAS,EAATA,qBAJ8B;AAK9BC,EAAAA,WAAW,EAAE,qBAACX,KAAD;AAAA,WAAWA,KAAX;AAAA,GALiB;AAM9BY,EAAAA,OAAO,EAAE;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,QAAQC,GAAR,QAAQA,GAAR;AAAA,WAAmB;AAC1BD,MAAAA,GAAG,EAAHA,GAD0B;AACrBC,MAAAA,GAAG,EAAHA;AADqB,KAAnB;AAAA;AANqB,CAAjB,CAAf;AAWAR,MAAM,CAACS,eAAP,CAAuB;AAAEd,EAAAA,GAAG,EAAHA,GAAF;AAAOe,EAAAA,IAAI,EAAE;AAAb,CAAvB;AAEAf,GAAG,CAACgB,MAAJ,CAAWf,IAAX,EAAiB,YAAM;AACrBL,EAAAA,OAAO,CAACC,GAAR,yCAA6CI,IAA7C;AACD,CAFD",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourcesContent": [
        "import express from 'express';\nimport mongoose from 'mongoose';\n// import schema, { graphql } from \"./schema\";\n// import graphql from 'graphql';\n// import { makeExecutableSchema } from 'graphql-tools';\nimport { ApolloServer } from 'apollo-server-express';\nimport bodyParser from 'body-parser';\nimport typeDefs from './graphql/typedef';\nimport resolvers from './graphql/resolvers';\nimport uri from './mongodb/db';\n\nmongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n\nmongoose.connection.once('open', () => {\n  console.log('connected to MongoDB');\n}).catch((err) => console.error('error MongoDb', err));\n\n\n// create server\nconst app = express();\nconst port = 8000;\n\napp.use(bodyParser.json());\n\nconst server = new ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs,\n  resolvers,\n  formatError: (error) => error,\n  context: ({ req, res }) => ({\n    req, res,\n  }),\n});\n\nserver.applyMiddleware({ app, path: '/graphql' });\n\napp.listen(port, () => {\n  console.log(`app server listening on port: ${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572004772187
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
        "sourceFileName": "typedef.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nscalar DateTime\\ntype User {\\n  id: String!\\n  firstName: String!\\n  lastName: String\\n  posts: [Post]\\n}\\n\\ntype Post {\\n  id: String!\\n  title: String!\\n  userId: String!\\n  content: String\\n  createdDate: DateTime!\\n  # commentsByPost: [Comment]!\\n}\\n\\ntype Comment {\\n  id: String!\\n  userId: String!\\n  content: String\\n  createdDate: DateTime!\\n  postId: String!\\n}\\n\\ntype Query {\\n  user(id: String!): User\\n  users: [User]!\\n  post(id: String!): Post\\n  posts: [Post]!\\n  postsByUser(id: String!): [Post]!\\n  commentsByPost(id: String!): [Comment]!\\n  commentsByUser(id: String!): [Comment]!\\n}\\n\\ntype Mutation {\\n  createUser(firstName: String, lastName: String): User\\n  createPost(userId: String!, title: String!, content: String!): Post\\n  createComment(userId: String!, postId: String!, content: String!): Comment\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar typeDefs = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = typeDefs;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVkZWYuanMiXSwibmFtZXMiOlsidHlwZURlZnMiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFNQSxRQUFRLE9BQUdDLHdCQUFILG9CQUFkO2VBMkNlRCxRIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cblxuY29uc3QgdHlwZURlZnMgPSBncWxgXG5zY2FsYXIgRGF0ZVRpbWVcbnR5cGUgVXNlciB7XG4gIGlkOiBTdHJpbmchXG4gIGZpcnN0TmFtZTogU3RyaW5nIVxuICBsYXN0TmFtZTogU3RyaW5nXG4gIHBvc3RzOiBbUG9zdF1cbn1cblxudHlwZSBQb3N0IHtcbiAgaWQ6IFN0cmluZyFcbiAgdGl0bGU6IFN0cmluZyFcbiAgdXNlcklkOiBTdHJpbmchXG4gIGNvbnRlbnQ6IFN0cmluZ1xuICBjcmVhdGVkRGF0ZTogRGF0ZVRpbWUhXG4gICMgY29tbWVudHNCeVBvc3Q6IFtDb21tZW50XSFcbn1cblxudHlwZSBDb21tZW50IHtcbiAgaWQ6IFN0cmluZyFcbiAgdXNlcklkOiBTdHJpbmchXG4gIGNvbnRlbnQ6IFN0cmluZ1xuICBjcmVhdGVkRGF0ZTogRGF0ZVRpbWUhXG4gIHBvc3RJZDogU3RyaW5nIVxufVxuXG50eXBlIFF1ZXJ5IHtcbiAgdXNlcihpZDogU3RyaW5nISk6IFVzZXJcbiAgdXNlcnM6IFtVc2VyXSFcbiAgcG9zdChpZDogU3RyaW5nISk6IFBvc3RcbiAgcG9zdHM6IFtQb3N0XSFcbiAgcG9zdHNCeVVzZXIoaWQ6IFN0cmluZyEpOiBbUG9zdF0hXG4gIGNvbW1lbnRzQnlQb3N0KGlkOiBTdHJpbmchKTogW0NvbW1lbnRdIVxuICBjb21tZW50c0J5VXNlcihpZDogU3RyaW5nISk6IFtDb21tZW50XSFcbn1cblxudHlwZSBNdXRhdGlvbiB7XG4gIGNyZWF0ZVVzZXIoZmlyc3ROYW1lOiBTdHJpbmcsIGxhc3ROYW1lOiBTdHJpbmcpOiBVc2VyXG4gIGNyZWF0ZVBvc3QodXNlcklkOiBTdHJpbmchLCB0aXRsZTogU3RyaW5nISwgY29udGVudDogU3RyaW5nISk6IFBvc3RcbiAgY3JlYXRlQ29tbWVudCh1c2VySWQ6IFN0cmluZyEsIHBvc3RJZDogU3RyaW5nISwgY29udGVudDogU3RyaW5nISk6IENvbW1lbnRcbn1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVEZWZzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "typedef.js"
      ],
      "names": [
        "typeDefs",
        "gql"
      ],
      "mappings": ";;;;;;;AACA;;;;;;;;;;;;;;AAGA,IAAMA,QAAQ,OAAGC,wBAAH,oBAAd;eA2CeD,Q",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "sourcesContent": [
        "\nimport { gql } from 'apollo-server-express';\n\n\nconst typeDefs = gql`\nscalar DateTime\ntype User {\n  id: String!\n  firstName: String!\n  lastName: String\n  posts: [Post]\n}\n\ntype Post {\n  id: String!\n  title: String!\n  userId: String!\n  content: String\n  createdDate: DateTime!\n  # commentsByPost: [Comment]!\n}\n\ntype Comment {\n  id: String!\n  userId: String!\n  content: String\n  createdDate: DateTime!\n  postId: String!\n}\n\ntype Query {\n  user(id: String!): User\n  users: [User]!\n  post(id: String!): Post\n  posts: [Post]!\n  postsByUser(id: String!): [Post]!\n  commentsByPost(id: String!): [Comment]!\n  commentsByUser(id: String!): [Comment]!\n}\n\ntype Mutation {\n  createUser(firstName: String, lastName: String): User\n  createPost(userId: String!, title: String!, content: String!): Post\n  createComment(userId: String!, postId: String!, content: String!): Comment\n}\n`;\n\nexport default typeDefs;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572097509311
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nvar _graphqlIsoDate = require(\"graphql-iso-date\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _models = require(\"../mongodb/models\");\n\nvar _controllersGet = require(\"../mongodb/controllersGet\");\n\nvar _controllersSet = require(\"../mongodb/controllersSet\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\nvar usersMock = [{\n  id: '1',\n  firstName: 'Tom',\n  lastName: 'Coleman'\n}, {\n  id: '2',\n  firstName: 'Sashko',\n  lastName: 'Stubailo'\n}, {\n  id: '3',\n  firstName: 'Mikhail',\n  lastName: 'Novikov'\n}];\nvar postsMock = [{\n  id: '1',\n  userId: '1',\n  title: 'Introduction to GraphQL',\n  content: 'content Introduction to GraphQL'\n}, {\n  id: '2',\n  userId: '2',\n  title: 'Welcome to Meteor',\n  content: 'content Welcome to Meteor'\n}, {\n  id: '3',\n  userId: '2',\n  title: 'Advanced GraphQL',\n  content: 'content Advanced GraphQL'\n}, {\n  id: '4',\n  userId: '3',\n  title: 'Launchpad is Cool',\n  content: 'content Launchpad is Cool'\n}];\nvar commentsMock = [{\n  id: '1',\n  userId: '1',\n  postId: '1',\n  content: 'Comment Introduction to GraphQL'\n}, {\n  id: '2',\n  userId: '2',\n  postId: '2',\n  content: 'Comment Welcome to Meteor'\n}, {\n  id: '3',\n  userId: '2',\n  postId: '2',\n  content: 'Comment Advanced GraphQL'\n}, {\n  id: '4',\n  userId: '3',\n  postId: '3',\n  content: 'Comment Launchpad is Cool'\n}];\nvar resolvers = {\n  DateTime: _graphqlIsoDate.GraphQLDateTime,\n  Query: {\n    user: function () {\n      var _user = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_, _ref) {\n        var id, result, posts, comments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _ref.id;\n                _context.next = 3;\n                return (0, _controllersGet.getUser)(id);\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return (0, _controllersGet.getPostsByUser)({\n                  userId: result.id\n                });\n\n              case 6:\n                posts = _context.sent;\n                _context.next = 9;\n                return (0, _controllersGet.getCommentsByUser)({\n                  userId: result.id\n                });\n\n              case 9:\n                comments = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, result, {\n                  posts: posts,\n                  comments: comments\n                }));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function user(_x, _x2) {\n        return _user.apply(this, arguments);\n      }\n\n      return user;\n    }(),\n    // const userReq = usersMock.filter((user) => user.id === id);\n    // console.log(`query UserReq: ${userReq}, id: ${id}`);\n    // return userReq[0];\n    users: function () {\n      var _users = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", (0, _controllersGet.getUsers)());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function users() {\n        return _users.apply(this, arguments);\n      }\n\n      return users;\n    }(),\n    // console.log('query users', usersMock);\n    // return usersMock;\n    post: function () {\n      var _post = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_, _ref2) {\n        var id, resPost, commentsByPost;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = _ref2.id;\n                _context3.next = 3;\n                return (0, _controllersGet.getPost)(id);\n\n              case 3:\n                resPost = _context3.sent;\n                console.log(\"query post resPost: \".concat(JSON.stringify(resPost)));\n                _context3.next = 7;\n                return (0, _controllersGet.getCommentsByPost)({\n                  postId: resPost.id\n                });\n\n              case 7:\n                commentsByPost = _context3.sent;\n                // return resPost;\n                console.log(\"query post comments: \".concat(JSON.stringify(commentsByPost)));\n                return _context3.abrupt(\"return\", _objectSpread({}, resPost, {\n                  commentsByPost: commentsByPost\n                }));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function post(_x3, _x4) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }(),\n    // comment: async (_, { id }) => {\n    //   const resComment = await getComment(id);\n    //   console.log(`query comment resComment: ${JSON.stringify(resComment)}`);\n    //   return resComment;\n    // },\n    // comments: async (_, { postId, userId }) => {\n    //   if (!postId === '') {\n    //     const resCommentsByPost = await getCommentsByPost(postId);\n    //     console.log(`query comments resCommentsByPost: ${JSON.stringify(resCommentsByPost)}`);\n    //     return resComment;\n    //   }\n    // },\n    // const postReq = postsMock.filter((post) => post.id === id);\n    // console.log(`query PostReq: ${postReq}, id: ${id}`);\n    // if (!postReq[0]) {\n    //   return null;\n    // }\n    // postReq[0].comments = commentsMock.filter((comment) => comment.postId === postReq[0].id);\n    // console.log(`query post PostReq: ${JSON.stringify(postReq)}`);\n    // return postReq[0];\n    posts: function () {\n      var _posts = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _controllersGet.getPosts)();\n\n              case 2:\n                result = _context5.sent;\n\n                if (!(!result === [])) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", result.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee4(resPost) {\n                    var comments;\n                    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return (0, _controllersGet.getCommentsByPost)({\n                              postId: resPost.id\n                            });\n\n                          case 2:\n                            comments = _context4.sent;\n                            return _context4.abrupt(\"return\", _objectSpread({}, resPost, {\n                              comments: comments\n                            }));\n\n                          case 4:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x5) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()));\n\n              case 5:\n                return _context5.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function posts() {\n        return _posts.apply(this, arguments);\n      }\n\n      return posts;\n    }(),\n    // {\n    //   const postsMockReq = postsMock.map((post) => {\n    //     const newItem = { ...post };\n    //     newItem.comments = commentsMock.filter((comment) => comment.postId === newItem.id);\n    //     console.log('query posts');\n    //     return newItem;\n    //   });\n    //   return postsMockReq;\n    // },\n    postsByUser: function () {\n      var _postsByUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(_, _ref4) {\n        var id, result;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                id = _ref4.id;\n                _context7.next = 3;\n                return (0, _controllersGet.getPostsByUser)({\n                  userId: id\n                });\n\n              case 3:\n                result = _context7.sent;\n\n                if (!(!result === [])) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", result.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref5 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee6(resPost) {\n                    var comments;\n                    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.next = 2;\n                            return (0, _controllersGet.getCommentsByPost)({\n                              postId: resPost.id\n                            });\n\n                          case 2:\n                            comments = _context6.sent;\n                            return _context6.abrupt(\"return\", _objectSpread({}, resPost, {\n                              comments: comments\n                            }));\n\n                          case 4:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function (_x8) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }()));\n\n              case 6:\n                return _context7.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function postsByUser(_x6, _x7) {\n        return _postsByUser.apply(this, arguments);\n      }\n\n      return postsByUser;\n    }(),\n    // {\n    //   const postsReq = postsMock.filter((post) => post.userId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query PostsReq: ${postsReq}, id: ${id}`);\n    //   return postsReq;\n    // },\n    // comments: () => getComments(),\n    commentsByPost: function () {\n      var _commentsByPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(_, _ref6) {\n        var id;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                id = _ref6.id;\n                return _context8.abrupt(\"return\", (0, _controllersGet.getCommentsByPost)({\n                  postId: id\n                }));\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function commentsByPost(_x9, _x10) {\n        return _commentsByPost.apply(this, arguments);\n      }\n\n      return commentsByPost;\n    }(),\n    // {\n    // const result = getCommentsByPost({ postId: id });\n    // return result.map((comment) => ({\n    //   id: comment._id,\n    //   userId: comment.userId,\n    //   postId: comment.postId,\n    //   content: comment.content,\n    //   createdDate: comment.createdDate,\n    // }));\n    // return resComments;\n    // }\n    // {\n    //   const commentsReq = commentsMock.filter((comment) => comment.postId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query CommentsReq: ${commentsReq}, id: ${id}`);\n    //   return commentsReq;\n    // },\n    commentsByUser: function () {\n      var _commentsByUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(_, _ref7) {\n        var id;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                id = _ref7.id;\n                return _context9.abrupt(\"return\", (0, _controllersGet.getCommentsByUser)({\n                  userId: id\n                }));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function commentsByUser(_x11, _x12) {\n        return _commentsByUser.apply(this, arguments);\n      }\n\n      return commentsByUser;\n    }()\n  },\n  Mutation: {\n    createUser: function () {\n      var _createUser2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(_, _ref8) {\n        var firstName, lastName, id, newUserData, newUser;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                firstName = _ref8.firstName, lastName = _ref8.lastName;\n                id = (0, _v[\"default\"])();\n                newUserData = {\n                  id: id,\n                  firstName: firstName,\n                  lastName: lastName\n                };\n                console.log(\"m createUser dataNewUser: \".concat(JSON.stringify(newUserData)));\n                _context10.next = 6;\n                return (0, _controllersSet.createUser)(newUserData);\n\n              case 6:\n                newUser = _context10.sent;\n                return _context10.abrupt(\"return\", _objectSpread({}, newUser, {\n                  posts: []\n                }));\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function createUser(_x13, _x14) {\n        return _createUser2.apply(this, arguments);\n      }\n\n      return createUser;\n    }(),\n    createPost: function () {\n      var _createPost2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(_, _ref9) {\n        var userId, title, content, id, createdDate, newPostData, newPost;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                userId = _ref9.userId, title = _ref9.title, content = _ref9.content;\n                id = (0, _v[\"default\"])(); // const createdDate = new Date().toISOString;\n\n                createdDate = _moment[\"default\"].utc().format();\n                console.log(\"m createPost createdDate: \".concat(createdDate));\n                newPostData = {\n                  id: id,\n                  title: title,\n                  userId: userId,\n                  content: content,\n                  createdDate: createdDate\n                };\n                console.log(\"m createPost newPost: \".concat(JSON.stringify(newPostData))); // return new Promise((resolve, reject) => {\n                // const len = postsMock.length;\n                // const newLen = postsMock.push(newPost);\n                // return createPost(newPost);\n\n                _context11.next = 8;\n                return (0, _controllersSet.createPost)(newPostData);\n\n              case 8:\n                newPost = _context11.sent;\n                return _context11.abrupt(\"return\", _objectSpread({}, newPost, {\n                  comments: []\n                }));\n\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function createPost(_x15, _x16) {\n        return _createPost2.apply(this, arguments);\n      }\n\n      return createPost;\n    }(),\n    createComment: function () {\n      var _createComment2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(_, _ref10) {\n        var userId, postId, content, id, createdDate, newComment;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                userId = _ref10.userId, postId = _ref10.postId, content = _ref10.content;\n                id = (0, _v[\"default\"])(); // const createdDate = new Date().toISOString;\n\n                createdDate = _moment[\"default\"].utc().format();\n                console.log(\"m createPost createdDate: \".concat(createdDate));\n                newComment = {\n                  id: id,\n                  userId: userId,\n                  postId: postId,\n                  content: content,\n                  createdDate: createdDate\n                }; // const len = commentsMock.length;\n                // const newLen = commentsMock.push(newComment);\n\n                return _context12.abrupt(\"return\", (0, _controllersSet.createComment)(newComment));\n\n              case 6:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function createComment(_x17, _x18) {\n        return _createComment2.apply(this, arguments);\n      }\n\n      return createComment;\n    }()\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "usersMock",
        "id",
        "firstName",
        "lastName",
        "postsMock",
        "userId",
        "title",
        "content",
        "commentsMock",
        "postId",
        "resolvers",
        "DateTime",
        "GraphQLDateTime",
        "Query",
        "user",
        "_",
        "result",
        "posts",
        "comments",
        "users",
        "post",
        "resPost",
        "console",
        "log",
        "JSON",
        "stringify",
        "commentsByPost",
        "map",
        "postsByUser",
        "commentsByUser",
        "Mutation",
        "createUser",
        "newUserData",
        "newUser",
        "createPost",
        "createdDate",
        "moment",
        "utc",
        "format",
        "newPostData",
        "newPost",
        "createComment",
        "newComment"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "sourcesContent": [
        "import uuidv4 from 'uuid/v4';\nimport {\n  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n} from 'graphql-iso-date';\nimport moment from 'moment';\nimport { User, Post, Comment } from '../mongodb/models';\nimport {\n  getUsers, getUser, getPosts, getPost, getComment, getPostsByUser, getCommentsByPost, getCommentsByUser,\n} from '../mongodb/controllersGet';\nimport {\n  createUser, createPost, createComment,\n} from '../mongodb/controllersSet';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n\nconst usersMock = [\n  { id: '1', firstName: 'Tom', lastName: 'Coleman' },\n  { id: '2', firstName: 'Sashko', lastName: 'Stubailo' },\n  { id: '3', firstName: 'Mikhail', lastName: 'Novikov' },\n];\n\nconst postsMock = [\n  {\n    id: '1', userId: '1', title: 'Introduction to GraphQL', content: 'content Introduction to GraphQL',\n  },\n  {\n    id: '2', userId: '2', title: 'Welcome to Meteor', content: 'content Welcome to Meteor',\n  },\n  {\n    id: '3', userId: '2', title: 'Advanced GraphQL', content: 'content Advanced GraphQL',\n  },\n  {\n    id: '4', userId: '3', title: 'Launchpad is Cool', content: 'content Launchpad is Cool',\n  },\n];\n\nconst commentsMock = [\n  {\n    id: '1', userId: '1', postId: '1', content: 'Comment Introduction to GraphQL',\n  },\n  {\n    id: '2', userId: '2', postId: '2', content: 'Comment Welcome to Meteor',\n  },\n  {\n    id: '3', userId: '2', postId: '2', content: 'Comment Advanced GraphQL',\n  },\n  {\n    id: '4', userId: '3', postId: '3', content: 'Comment Launchpad is Cool',\n  },\n];\n\nconst resolvers = {\n  DateTime: GraphQLDateTime,\n  Query: {\n    user: async (_, { id }) => {\n      const result = await getUser(id);\n      const posts = await getPostsByUser({ userId: result.id });\n      const comments = await getCommentsByUser({ userId: result.id });\n      return {\n        ...result,\n        posts,\n        comments,\n      };\n    },\n    // const userReq = usersMock.filter((user) => user.id === id);\n    // console.log(`query UserReq: ${userReq}, id: ${id}`);\n    // return userReq[0];\n    users: async () => getUsers(), // console.log('query users', usersMock);\n    // return usersMock;\n    post: async (_, { id }) => {\n      const resPost = await getPost(id);\n      console.log(`query post resPost: ${JSON.stringify(resPost)}`);\n      const commentsByPost = await getCommentsByPost({ postId: resPost.id });\n      // return resPost;\n      console.log(`query post comments: ${JSON.stringify(commentsByPost)}`);\n      return {\n        ...resPost,\n        commentsByPost,\n      };\n    },\n    // comment: async (_, { id }) => {\n    //   const resComment = await getComment(id);\n    //   console.log(`query comment resComment: ${JSON.stringify(resComment)}`);\n    //   return resComment;\n    // },\n    // comments: async (_, { postId, userId }) => {\n    //   if (!postId === '') {\n    //     const resCommentsByPost = await getCommentsByPost(postId);\n    //     console.log(`query comments resCommentsByPost: ${JSON.stringify(resCommentsByPost)}`);\n    //     return resComment;\n    //   }\n    // },\n    // const postReq = postsMock.filter((post) => post.id === id);\n    // console.log(`query PostReq: ${postReq}, id: ${id}`);\n    // if (!postReq[0]) {\n    //   return null;\n    // }\n    // postReq[0].comments = commentsMock.filter((comment) => comment.postId === postReq[0].id);\n    // console.log(`query post PostReq: ${JSON.stringify(postReq)}`);\n    // return postReq[0];\n\n    posts: async () => {\n      const result = await getPosts();\n      // const resPostsByUser = result;\n      if (!result === []) {\n        return result.map(async (resPost) => {\n        // const res = resPost;\n          const comments = await getCommentsByPost({ postId: resPost.id });\n          return {\n            ...resPost,\n            comments,\n          };\n        });\n      }\n      return result;\n    },\n    // {\n    //   const postsMockReq = postsMock.map((post) => {\n    //     const newItem = { ...post };\n    //     newItem.comments = commentsMock.filter((comment) => comment.postId === newItem.id);\n    //     console.log('query posts');\n    //     return newItem;\n    //   });\n    //   return postsMockReq;\n    // },\n    postsByUser: async (_, { id }) => {\n      const result = await getPostsByUser({ userId: id });\n      // const resPostsByUser = result;\n      if (!result === []) {\n        return result.map(async (resPost) => {\n        // const res = resPost;\n          const comments = await getCommentsByPost({ postId: resPost.id });\n          // res.comments = [...comments];\n          // return res;\n          return {\n            ...resPost,\n            comments,\n          };\n        });\n      }\n      // if result === [] empty array\n      return result;\n\n      // const resComments = result.map((comment) => {\n      //   const resItem = {\n      //     id: comment._id,\n      //     userId: comment.userId,\n      //     postId: comment.postId,\n      //     content: comment.content,\n      //     createdDate: comment.createdDate,\n      //   };\n      //   console.log(`c getUser resItem: ${JSON.stringify(resItem)}`);\n      //   return resItem;\n      // });\n      // return resComments;\n    },\n    // {\n    //   const postsReq = postsMock.filter((post) => post.userId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query PostsReq: ${postsReq}, id: ${id}`);\n    //   return postsReq;\n    // },\n    // comments: () => getComments(),\n    commentsByPost: async (_, { id }) => getCommentsByPost({ postId: id }), // {\n    // const result = getCommentsByPost({ postId: id });\n    // return result.map((comment) => ({\n    //   id: comment._id,\n    //   userId: comment.userId,\n    //   postId: comment.postId,\n    //   content: comment.content,\n    //   createdDate: comment.createdDate,\n    // }));\n    // return resComments;\n    // }\n\n    // {\n    //   const commentsReq = commentsMock.filter((comment) => comment.postId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query CommentsReq: ${commentsReq}, id: ${id}`);\n    //   return commentsReq;\n    // },\n    commentsByUser: async (_, { id }) => getCommentsByUser({ userId: id }),\n  },\n\n  Mutation: {\n    createUser: async (_, { firstName, lastName }) => {\n      const id = uuidv4();\n      const newUserData = {\n        id, firstName, lastName,\n      };\n      console.log(`m createUser dataNewUser: ${JSON.stringify(newUserData)}`);\n\n      const newUser = await createUser(newUserData);\n      return {\n        ...newUser,\n        posts: [],\n      };\n      // console.log(`m createUser new: ${newU}`);\n      // return newU;\n      // usersMock.push(newUser);\n      // console.log(`m createUser usersMock len: ${usersMock.length}`);\n      // const newUserReq = usersMock.filter((user) => user.id === id);\n      // console.log(`m createUser newUserReq: ${JSON.stringify(newUserReq[0])}`);\n      // if (!newUserReq[0]) {\n      //   // return reject('error');\n      //   return null;\n      // }\n      // // return resolve(postsMock[len - 1]);\n      // return newUserReq[0];\n      // });\n      // return newUser;\n    },\n    createPost: async (_, {\n      userId, title, content,\n    }) => {\n      const id = uuidv4();\n      // const createdDate = new Date().toISOString;\n      const createdDate = moment.utc().format();\n      console.log(`m createPost createdDate: ${createdDate}`);\n      const newPostData = {\n        id, title, userId, content, createdDate,\n      };\n      console.log(`m createPost newPost: ${JSON.stringify(newPostData)}`);\n      // return new Promise((resolve, reject) => {\n      // const len = postsMock.length;\n      // const newLen = postsMock.push(newPost);\n      // return createPost(newPost);\n\n      const newPost = await createPost(newPostData);\n      return {\n        ...newPost,\n        comments: [],\n      };\n      // postsMock.push(newPost);\n      // console.log(`m createPost postsMock len: ${postsMock.length}`);\n      // const newPostReq = postsMock.filter((post) => post.id === id);\n      // console.log(`m createPost newPostReq: ${JSON.stringify(newPostReq[0])}`);\n      // if (!newPostReq[0]) {\n      //   // return reject('error');\n      //   return null;\n      // }\n      // // return resolve(postsMock[len - 1]);\n      // return newPostReq[0];\n      // });\n    },\n    createComment: async (_, {\n      userId, postId, content,\n    }) => {\n      const id = uuidv4();\n      // const createdDate = new Date().toISOString;\n      const createdDate = moment.utc().format();\n      console.log(`m createPost createdDate: ${createdDate}`);\n      const newComment = {\n        id, userId, postId, content, createdDate,\n      };\n      // const len = commentsMock.length;\n      // const newLen = commentsMock.push(newComment);\n      return createComment(newComment);\n      // commentsMock.push(newComment);\n      // // if (newLen === len) {\n      // //   return null;\n      // // }\n      // const newCommentReq = commentsMock.filter((comment) => comment.id === id);\n      // console.log(`m createPost newPostReq: ${JSON.stringify(newCommentReq[0])}`);\n      // if (!newCommentReq[0]) {\n      //   // return reject('error');\n      //   return null;\n      // }\n      // return newCommentReq[0];\n    },\n  },\n\n};\n\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572093980163
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire('dotenv').config({\n  path: 'variables.env'\n});\n\nvar password = process.env.DBUSER_PASS;\nvar mongoDBurl = process.env.MONGODB_URL;\nvar uri = \"mongodb+srv://dbprog:\".concat(password, \"@\").concat(mongoDBurl);\nvar _default = uri;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJwYXRoIiwicGFzc3dvcmQiLCJwcm9jZXNzIiwiZW52IiwiREJVU0VSX1BBU1MiLCJtb25nb0RCdXJsIiwiTU9OR09EQl9VUkwiLCJ1cmkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEIsQ0FBeUI7QUFBRUMsRUFBQUEsSUFBSSxFQUFFO0FBQVIsQ0FBekI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBN0I7QUFFQSxJQUFNQyxVQUFVLEdBQUdILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxXQUEvQjtBQUVBLElBQU1DLEdBQUcsa0NBQTJCTixRQUEzQixjQUF1Q0ksVUFBdkMsQ0FBVDtlQUVlRSxHIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL21vbmdvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoeyBwYXRoOiAndmFyaWFibGVzLmVudicgfSk7XG5cbmNvbnN0IHBhc3N3b3JkID0gcHJvY2Vzcy5lbnYuREJVU0VSX1BBU1M7XG5cbmNvbnN0IG1vbmdvREJ1cmwgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSTDtcblxuY29uc3QgdXJpID0gYG1vbmdvZGIrc3J2Oi8vZGJwcm9nOiR7cGFzc3dvcmR9QCR7bW9uZ29EQnVybH1gO1xuXG5leHBvcnQgZGVmYXVsdCB1cmk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "require",
        "config",
        "path",
        "password",
        "process",
        "env",
        "DBUSER_PASS",
        "mongoDBurl",
        "MONGODB_URL",
        "uri"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAzB;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA7B;AAEA,IAAMC,UAAU,GAAGH,OAAO,CAACC,GAAR,CAAYG,WAA/B;AAEA,IAAMC,GAAG,kCAA2BN,QAA3B,cAAuCI,UAAvC,CAAT;eAEeE,G",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "require('dotenv').config({ path: 'variables.env' });\n\nconst password = process.env.DBUSER_PASS;\n\nconst mongoDBurl = process.env.MONGODB_URL;\n\nconst uri = `mongodb+srv://dbprog:${password}@${mongoDBurl}`;\n\nexport default uri;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572004772187
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "models.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Comment = exports.Post = exports.User = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// const { ObjectId } = mongoose.Schema.Types;\nvar User = _mongoose[\"default\"].model('User', new _mongoose[\"default\"].Schema({\n  _id: String,\n  firstName: String,\n  lastName: String\n}));\n\nexports.User = User;\n\nvar Post = _mongoose[\"default\"].model('Post', new _mongoose[\"default\"].Schema({\n  _id: String,\n  title: String,\n  content: String,\n  userId: String,\n  createdDate: {\n    type: Date,\n    \"default\": Date.now\n  }\n}));\n\nexports.Post = Post;\n\nvar Comment = _mongoose[\"default\"].model('Comment', new _mongoose[\"default\"].Schema({\n  _id: String,\n  userId: String,\n  content: String,\n  postId: String,\n  createdDate: {\n    type: Date,\n    \"default\": Date.now\n  }\n}));\n\nexports.Comment = Comment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy5qcyJdLCJuYW1lcyI6WyJVc2VyIiwibW9uZ29vc2UiLCJtb2RlbCIsIlNjaGVtYSIsIl9pZCIsIlN0cmluZyIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiUG9zdCIsInRpdGxlIiwiY29udGVudCIsInVzZXJJZCIsImNyZWF0ZWREYXRlIiwidHlwZSIsIkRhdGUiLCJub3ciLCJDb21tZW50IiwicG9zdElkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQTtBQUVBLElBQU1BLElBQUksR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlELHFCQUFTRSxNQUFiLENBQW9CO0FBQ3REQyxFQUFBQSxHQUFHLEVBQUVDLE1BRGlEO0FBRXREQyxFQUFBQSxTQUFTLEVBQUVELE1BRjJDO0FBR3RERSxFQUFBQSxRQUFRLEVBQUVGO0FBSDRDLENBQXBCLENBQXZCLENBQWI7Ozs7QUFNQSxJQUFNRyxJQUFJLEdBQUdQLHFCQUFTQyxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJRCxxQkFBU0UsTUFBYixDQUFvQjtBQUN0REMsRUFBQUEsR0FBRyxFQUFFQyxNQURpRDtBQUV0REksRUFBQUEsS0FBSyxFQUFFSixNQUYrQztBQUd0REssRUFBQUEsT0FBTyxFQUFFTCxNQUg2QztBQUl0RE0sRUFBQUEsTUFBTSxFQUFFTixNQUo4QztBQUt0RE8sRUFBQUEsV0FBVyxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRUMsSUFBUjtBQUFjLGVBQVNBLElBQUksQ0FBQ0M7QUFBNUI7QUFMeUMsQ0FBcEIsQ0FBdkIsQ0FBYjs7OztBQVFBLElBQU1DLE9BQU8sR0FBR2YscUJBQVNDLEtBQVQsQ0FBZSxTQUFmLEVBQTBCLElBQUlELHFCQUFTRSxNQUFiLENBQW9CO0FBQzVEQyxFQUFBQSxHQUFHLEVBQUVDLE1BRHVEO0FBRTVETSxFQUFBQSxNQUFNLEVBQUVOLE1BRm9EO0FBRzVESyxFQUFBQSxPQUFPLEVBQUVMLE1BSG1EO0FBSTVEWSxFQUFBQSxNQUFNLEVBQUVaLE1BSm9EO0FBSzVETyxFQUFBQSxXQUFXLEVBQUU7QUFBRUMsSUFBQUEsSUFBSSxFQUFFQyxJQUFSO0FBQWMsZUFBU0EsSUFBSSxDQUFDQztBQUE1QjtBQUwrQyxDQUFwQixDQUExQixDQUFoQiIsInNvdXJjZVJvb3QiOiIvbWVkaWEvbjJfM1RCL0VEVS9HcmFwaFFML2NydWRhcHAvYmFja2VuZC9tb25nb2RiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcblxuLy8gY29uc3QgeyBPYmplY3RJZCB9ID0gbW9uZ29vc2UuU2NoZW1hLlR5cGVzO1xuXG5jb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWwoJ1VzZXInLCBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgX2lkOiBTdHJpbmcsXG4gIGZpcnN0TmFtZTogU3RyaW5nLFxuICBsYXN0TmFtZTogU3RyaW5nLFxufSkpO1xuXG5jb25zdCBQb3N0ID0gbW9uZ29vc2UubW9kZWwoJ1Bvc3QnLCBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgX2lkOiBTdHJpbmcsXG4gIHRpdGxlOiBTdHJpbmcsXG4gIGNvbnRlbnQ6IFN0cmluZyxcbiAgdXNlcklkOiBTdHJpbmcsXG4gIGNyZWF0ZWREYXRlOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXG59KSk7XG5cbmNvbnN0IENvbW1lbnQgPSBtb25nb29zZS5tb2RlbCgnQ29tbWVudCcsIG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBfaWQ6IFN0cmluZyxcbiAgdXNlcklkOiBTdHJpbmcsXG4gIGNvbnRlbnQ6IFN0cmluZyxcbiAgcG9zdElkOiBTdHJpbmcsXG4gIGNyZWF0ZWREYXRlOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXG59KSk7XG5cbmV4cG9ydCB7IFVzZXIsIFBvc3QsIENvbW1lbnQgfTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "models.js"
      ],
      "names": [
        "User",
        "mongoose",
        "model",
        "Schema",
        "_id",
        "String",
        "firstName",
        "lastName",
        "Post",
        "title",
        "content",
        "userId",
        "createdDate",
        "type",
        "Date",
        "now",
        "Comment",
        "postId"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;AAEA,IAAMA,IAAI,GAAGC,qBAASC,KAAT,CAAe,MAAf,EAAuB,IAAID,qBAASE,MAAb,CAAoB;AACtDC,EAAAA,GAAG,EAAEC,MADiD;AAEtDC,EAAAA,SAAS,EAAED,MAF2C;AAGtDE,EAAAA,QAAQ,EAAEF;AAH4C,CAApB,CAAvB,CAAb;;;;AAMA,IAAMG,IAAI,GAAGP,qBAASC,KAAT,CAAe,MAAf,EAAuB,IAAID,qBAASE,MAAb,CAAoB;AACtDC,EAAAA,GAAG,EAAEC,MADiD;AAEtDI,EAAAA,KAAK,EAAEJ,MAF+C;AAGtDK,EAAAA,OAAO,EAAEL,MAH6C;AAItDM,EAAAA,MAAM,EAAEN,MAJ8C;AAKtDO,EAAAA,WAAW,EAAE;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AALyC,CAApB,CAAvB,CAAb;;;;AAQA,IAAMC,OAAO,GAAGf,qBAASC,KAAT,CAAe,SAAf,EAA0B,IAAID,qBAASE,MAAb,CAAoB;AAC5DC,EAAAA,GAAG,EAAEC,MADuD;AAE5DM,EAAAA,MAAM,EAAEN,MAFoD;AAG5DK,EAAAA,OAAO,EAAEL,MAHmD;AAI5DY,EAAAA,MAAM,EAAEZ,MAJoD;AAK5DO,EAAAA,WAAW,EAAE;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AAL+C,CAApB,CAA1B,CAAhB",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\n// const { ObjectId } = mongoose.Schema.Types;\n\nconst User = mongoose.model('User', new mongoose.Schema({\n  _id: String,\n  firstName: String,\n  lastName: String,\n}));\n\nconst Post = mongoose.model('Post', new mongoose.Schema({\n  _id: String,\n  title: String,\n  content: String,\n  userId: String,\n  createdDate: { type: Date, default: Date.now },\n}));\n\nconst Comment = mongoose.model('Comment', new mongoose.Schema({\n  _id: String,\n  userId: String,\n  content: String,\n  postId: String,\n  createdDate: { type: Date, default: Date.now },\n}));\n\nexport { User, Post, Comment };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572089015333
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "controllersGet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCommentsByUser = exports.getCommentsByPost = exports.getPostsByUser = exports.getComment = exports.getPost = exports.getPosts = exports.getUser = exports.getUsers = void 0;\n\nvar _models = require(\"./models\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Get single User\nvar getUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(arg) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"c getUser arg: \".concat(JSON.stringify(arg)));\n            return _context.abrupt(\"return\", _models.User.findById(arg).then(function (result) {\n              return {\n                id: result._id,\n                firstName: result.firstName,\n                lastName: result.lastName\n              };\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // console.log(`c getUser reqUser: ${JSON.stringify(reqUser)}`); // return reqUser;\n// Get all Users\n\n\nexports.getUser = getUser;\n\nvar getUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _models.User.find().then(function (result) {\n              console.log(\"c getUsers find: \".concat(JSON.stringify(result)));\n              return result.map(function (user) {\n                return {\n                  id: user._id,\n                  firstName: user.firstName,\n                  lastName: user.lastName\n                };\n              });\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getUsers() {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Get all posts\n\n\nexports.getUsers = getUsers;\n\nvar getPosts =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", _models.Post.find().then(function (result) {\n              console.log(\"c getPosts find: \".concat(JSON.stringify(result)));\n              return result.map(function (post) {\n                return {\n                  id: post._id,\n                  title: post.title,\n                  userId: post.userId,\n                  content: post.content,\n                  createdDate: post.createdDate\n                };\n              }); // const argPosts = posts.map((post) => {\n              //   const newItem = { ...post };\n              //   newItem.comments = Comment.find({ postId: newItem.id })\n              //     .then((comments) => comments)\n              //     .catch((err) => console.error('Error db: ', err));\n              //   return newItem;\n              // });\n              // return argPosts;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getPosts() {\n    return _ref3.apply(this, arguments);\n  };\n}(); // Get single Post\n\n\nexports.getPosts = getPosts;\n\nvar getPost =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(arg) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", _models.Post.findById(arg).then(function (result) {\n              console.log(\"c getPost findById: \".concat(JSON.stringify(result)));\n              return {\n                id: result._id,\n                title: result.title,\n                userId: result.userId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getPost(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}(); // Get single Comment\n\n\nexports.getPost = getPost;\n\nvar getComment =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(arg) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", _models.Comment.findById(arg).then(function (result) {\n              console.log(\"c getComment findById: \".concat(JSON.stringify(result)));\n              return {\n                id: result._id,\n                postId: result.postId,\n                userId: result.userId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getComment(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}(); // Get all posts by User\n\n\nexports.getComment = getComment;\n\nvar getPostsByUser =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(arg) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", _models.Post.find({\n              userId: arg.userId\n            }).then(function (result) {\n              console.log(\"c getPostsByUser find: \".concat(JSON.stringify(result)));\n              return result.map(function (post) {\n                return {\n                  id: post._id,\n                  title: post.title,\n                  userId: post.userId,\n                  content: post.content,\n                  createdDate: post.createdDate\n                };\n              }); // console.log(`c getPostsByUser newPost: ${JSON.stringify(newPost)}`);\n              // return newPost;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getPostsByUser(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}(); // Get all comments\n// const getComments = async () => {\n//   await Comment.find()\n//     .then((comments) => comments)\n//     .catch((err) => console.error('Error db: ', err));\n// };\n// Get all comments by Post\n\n\nexports.getPostsByUser = getPostsByUser;\n\nvar getCommentsByPost =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(arg) {\n    var postId;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            postId = arg.postId;\n            return _context7.abrupt(\"return\", _models.Comment.find({\n              postId: postId\n            }).then(function (result) {\n              console.log(\"c getCommentsByPost find: \".concat(JSON.stringify(result)));\n              return result.map(function (comment) {\n                return {\n                  id: comment._id,\n                  userId: comment.userId,\n                  postId: comment.postId,\n                  content: comment.content,\n                  createdDate: comment.createdDate\n                };\n              });\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getCommentsByPost(_x5) {\n    return _ref7.apply(this, arguments);\n  };\n}(); // async function getCommentsByPost(arg) {\n//   const { postId } = arg;\n//   return Comment.find({ postId })\n//     .then((result) => {\n//       console.log(`c getCommentsByPost find: ${JSON.stringify(result)}`);\n//       return result.map((comment) => ({\n//         id: comment._id,\n//         userId: comment.userId,\n//         postId: comment.postId,\n//         content: comment.content,\n//         createdDate: comment.createdDate,\n//       }));\n//     })\n//     .catch((err) => console.error('Error db: ', err));\n// }\n\n\nexports.getCommentsByPost = getCommentsByPost;\n\nvar getCommentsByUser =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(arg) {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", _models.Comment.find({\n              userId: arg.userId\n            }).then(function (result) {\n              console.log(\"c getCommentsByUser find: \".concat(JSON.stringify(result)));\n              return result.map(function (comment) {\n                return {\n                  id: comment._id,\n                  userId: comment.userId,\n                  postId: comment.postId,\n                  content: comment.content,\n                  createdDate: comment.createdDate\n                };\n              });\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function getCommentsByUser(_x6) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nexports.getCommentsByUser = getCommentsByUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controllersGet.js"
      ],
      "names": [
        "getUser",
        "arg",
        "console",
        "log",
        "JSON",
        "stringify",
        "User",
        "findById",
        "then",
        "result",
        "id",
        "_id",
        "firstName",
        "lastName",
        "err",
        "error",
        "getUsers",
        "find",
        "map",
        "user",
        "getPosts",
        "Post",
        "post",
        "title",
        "userId",
        "content",
        "createdDate",
        "getPost",
        "getComment",
        "Comment",
        "postId",
        "getPostsByUser",
        "getCommentsByPost",
        "comment",
        "getCommentsByUser"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import { User, Post, Comment } from './models';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n\n// Get single User\nconst getUser = async (arg) => {\n  console.log(`c getUser arg: ${JSON.stringify(arg)}`);\n  return User.findById(arg)\n    .then((result) => ({\n      id: result._id,\n      firstName: result.firstName,\n      lastName: result.lastName,\n    }))\n    .catch((err) => console.error('Error db: ', err));\n};\n// console.log(`c getUser reqUser: ${JSON.stringify(reqUser)}`); // return reqUser;\n\n// Get all Users\nconst getUsers = async () => User.find()\n  .then((result) => {\n    console.log(`c getUsers find: ${JSON.stringify(result)}`);\n    return result.map((user) => ({\n      id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n    }));\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n\n// Get all posts\nconst getPosts = async () => Post.find()\n  .then((result) => {\n    console.log(`c getPosts find: ${JSON.stringify(result)}`);\n    return result.map((post) => ({\n      id: post._id,\n      title: post.title,\n      userId: post.userId,\n      content: post.content,\n      createdDate: post.createdDate,\n    }));\n    // const argPosts = posts.map((post) => {\n    //   const newItem = { ...post };\n    //   newItem.comments = Comment.find({ postId: newItem.id })\n    //     .then((comments) => comments)\n    //     .catch((err) => console.error('Error db: ', err));\n    //   return newItem;\n    // });\n    // return argPosts;\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get single Post\nconst getPost = async (arg) => Post.findById(arg)\n  .then((result) => {\n    console.log(`c getPost findById: ${JSON.stringify(result)}`);\n    return ({\n      id: result._id,\n      title: result.title,\n      userId: result.userId,\n      content: result.content,\n      createdDate: result.createdDate,\n    });\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get single Comment\nconst getComment = async (arg) => Comment.findById(arg)\n  .then((result) => {\n    console.log(`c getComment findById: ${JSON.stringify(result)}`);\n    return ({\n      id: result._id,\n      postId: result.postId,\n      userId: result.userId,\n      content: result.content,\n      createdDate: result.createdDate,\n    });\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get all posts by User\nconst getPostsByUser = async (arg) => Post.find({ userId: arg.userId })\n  .then((result) => {\n    console.log(`c getPostsByUser find: ${JSON.stringify(result)}`);\n    return result.map((post) => ({\n      id: post._id,\n      title: post.title,\n      userId: post.userId,\n      content: post.content,\n      createdDate: post.createdDate,\n    }));\n    // console.log(`c getPostsByUser newPost: ${JSON.stringify(newPost)}`);\n    // return newPost;\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get all comments\n// const getComments = async () => {\n//   await Comment.find()\n//     .then((comments) => comments)\n//     .catch((err) => console.error('Error db: ', err));\n// };\n\n// Get all comments by Post\nconst getCommentsByPost = async (arg) => {\n  const { postId } = arg;\n  return Comment.find({ postId })\n    .then((result) => {\n      console.log(`c getCommentsByPost find: ${JSON.stringify(result)}`);\n      return result.map((comment) => ({\n        id: comment._id,\n        userId: comment.userId,\n        postId: comment.postId,\n        content: comment.content,\n        createdDate: comment.createdDate,\n      }));\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n// async function getCommentsByPost(arg) {\n//   const { postId } = arg;\n//   return Comment.find({ postId })\n//     .then((result) => {\n//       console.log(`c getCommentsByPost find: ${JSON.stringify(result)}`);\n//       return result.map((comment) => ({\n//         id: comment._id,\n//         userId: comment.userId,\n//         postId: comment.postId,\n//         content: comment.content,\n//         createdDate: comment.createdDate,\n//       }));\n//     })\n//     .catch((err) => console.error('Error db: ', err));\n// }\n\n\nconst getCommentsByUser = async (arg) => Comment.find({ userId: arg.userId })\n  .then((result) => {\n    console.log(`c getCommentsByUser find: ${JSON.stringify(result)}`);\n    return result.map((comment) => ({\n      id: comment._id,\n      userId: comment.userId,\n      postId: comment.postId,\n      content: comment.content,\n      createdDate: comment.createdDate,\n    }));\n  })\n  .catch((err) => console.error('Error db: ', err));\n\nexport {\n  getUsers, getUser, getPosts, getPost, getComment, getPostsByUser, getCommentsByPost, getCommentsByUser,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572097500732
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "controllersUpdate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createComment = exports.createPost = exports.createUser = void 0;\n\nvar _models = require(\"./models\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nvar createUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(arg) {\n    var id, firstName, lastName, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"m createUser req: \".concat(JSON.stringify(arg)));\n            id = arg.id, firstName = arg.firstName, lastName = arg.lastName;\n            user = new _models.User({\n              _id: id,\n              firstName: firstName,\n              lastName: lastName\n            });\n            return _context.abrupt(\"return\", user.save().then(function (result) {\n              console.log(\"m createUser insertOne: \".concat(JSON.stringify(result)));\n              var newUser = {\n                id: result._id,\n                firstName: result.firstName,\n                lastName: result.lastName\n              }; // const newUser = { ...result };\n              // newUser.id = newUser._id;\n              // delete newUser._id;\n\n              console.log(\"m createUser newUser: \".concat(JSON.stringify(newUser)));\n              return newUser;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Create Post\n\n\nexports.createUser = createUser;\n\nvar createPost =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req) {\n    var _req$params, id, title, userId, content, createdDate;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$params = req.params, id = _req$params.id, title = _req$params.title, userId = _req$params.userId, content = _req$params.content, createdDate = _req$params.createdDate;\n            _context2.next = 3;\n            return _models.Post.insertOne({\n              _id: id,\n              title: title,\n              userId: userId,\n              content: content,\n              createdDate: createdDate\n            }).then(function (post) {\n              return post;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createPost(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Create Comment\n\n\nexports.createPost = createPost;\n\nvar createComment =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req) {\n    var _req$params2, id, userId, postId, content, createdDate;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$params2 = req.params, id = _req$params2.id, userId = _req$params2.userId, postId = _req$params2.postId, content = _req$params2.content, createdDate = _req$params2.createdDate;\n            _context3.next = 3;\n            return _models.Comment.insertOne({\n              _id: id,\n              userId: userId,\n              postId: postId,\n              content: content,\n              createdDate: createdDate\n            }).then(function (comment) {\n              return comment;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function createComment(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.createComment = createComment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJzVXBkYXRlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVVzZXIiLCJhcmciLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImlkIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJ1c2VyIiwiVXNlciIsIl9pZCIsInNhdmUiLCJ0aGVuIiwicmVzdWx0IiwibmV3VXNlciIsImVyciIsImVycm9yIiwiY3JlYXRlUG9zdCIsInJlcSIsInBhcmFtcyIsInRpdGxlIiwidXNlcklkIiwiY29udGVudCIsImNyZWF0ZWREYXRlIiwiUG9zdCIsImluc2VydE9uZSIsInBvc3QiLCJjcmVhdGVDb21tZW50IiwicG9zdElkIiwiQ29tbWVudCIsImNvbW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRUE7QUFDQTtBQUNBLElBQU1BLFVBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPQyxHQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNqQkMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLDZCQUFpQ0MsSUFBSSxDQUFDQyxTQUFMLENBQWVKLEdBQWYsQ0FBakM7QUFDUUssWUFBQUEsRUFGUyxHQUVtQkwsR0FGbkIsQ0FFVEssRUFGUyxFQUVMQyxTQUZLLEdBRW1CTixHQUZuQixDQUVMTSxTQUZLLEVBRU1DLFFBRk4sR0FFbUJQLEdBRm5CLENBRU1PLFFBRk47QUFHWEMsWUFBQUEsSUFIVyxHQUdKLElBQUlDLFlBQUosQ0FBUztBQUNwQkMsY0FBQUEsR0FBRyxFQUFFTCxFQURlO0FBQ1hDLGNBQUFBLFNBQVMsRUFBVEEsU0FEVztBQUNBQyxjQUFBQSxRQUFRLEVBQVJBO0FBREEsYUFBVCxDQUhJO0FBQUEsNkNBTVZDLElBQUksQ0FBQ0csSUFBTCxHQUNKQyxJQURJLENBQ0MsVUFBQ0MsTUFBRCxFQUFZO0FBQ2hCWixjQUFBQSxPQUFPLENBQUNDLEdBQVIsbUNBQXVDQyxJQUFJLENBQUNDLFNBQUwsQ0FB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Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlciwgUG9zdCwgQ29tbWVudCB9IGZyb20gJy4vbW9kZWxzJztcblxuLyogZXNsaW50IG5vLXVuZGVyc2NvcmUtZGFuZ2xlOiBbMSwgeyBcImFsbG93XCI6IFtcIl9faWRcIl0gfV0gKi9cbi8vIENyZWF0ZSBVc2VyXG5jb25zdCBjcmVhdGVVc2VyID0gYXN5bmMgKGFyZykgPT4ge1xuICBjb25zb2xlLmxvZyhgbSBjcmVhdGVVc2VyIHJlcTogJHtKU09OLnN0cmluZ2lmeShhcmcpfWApO1xuICBjb25zdCB7IGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lIH0gPSBhcmc7XG4gIGNvbnN0IHVzZXIgPSBuZXcgVXNlcih7XG4gICAgX2lkOiBpZCwgZmlyc3ROYW1lLCBsYXN0TmFtZSxcbiAgfSk7XG4gIHJldHVybiB1c2VyLnNhdmUoKVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGBtIGNyZWF0ZVVzZXIgaW5zZXJ0T25lOiAke0pTT04uc3RyaW5naWZ5KHJlc3VsdCl9YCk7XG4gICAgICBjb25zdCBuZXdVc2VyID0ge1xuICAgICAgICBpZDogcmVzdWx0Ll9pZCxcbiAgICAgICAgZmlyc3ROYW1lOiByZXN1bHQuZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZTogcmVzdWx0Lmxhc3ROYW1lLFxuICAgICAgfTtcbiAgICAgIC8vIGNvbnN0IG5ld1VzZXIgPSB7IC4uLnJlc3VsdCB9O1xuICAgICAgLy8gbmV3VXNlci5pZCA9IG5ld1VzZXIuX2lkO1xuICAgICAgLy8gZGVsZXRlIG5ld1VzZXIuX2lkO1xuICAgICAgY29uc29sZS5sb2coYG0gY3JlYXRlVXNlciBuZXdVc2VyOiAke0pTT04uc3RyaW5naWZ5KG5ld1VzZXIpfWApO1xuICAgICAgcmV0dXJuIG5ld1VzZXI7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcignRXJyb3IgZGI6ICcsIGVycikpO1xufTtcblxuLy8gQ3JlYXRlIFBvc3RcbmNvbnN0IGNyZWF0ZVBvc3QgPSBhc3luYyAocmVxKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpZCwgdGl0bGUsIHVzZXJJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0gPSByZXEucGFyYW1zO1xuICBhd2FpdCBQb3N0Lmluc2VydE9uZSh7XG4gICAgX2lkOiBpZCwgdGl0bGUsIHVzZXJJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0pXG4gICAgLnRoZW4oKHBvc3QpID0+IHBvc3QpXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRiOiAnLCBlcnIpKTtcbn07XG5cbi8vIENyZWF0ZSBDb21tZW50XG5jb25zdCBjcmVhdGVDb21tZW50ID0gYXN5bmMgKHJlcSkgPT4ge1xuICBjb25zdCB7XG4gICAgaWQsIHVzZXJJZCwgcG9zdElkLCBjb250ZW50LCBjcmVhdGVkRGF0ZSxcbiAgfSA9IHJlcS5wYXJhbXM7XG4gIGF3YWl0IENvbW1lbnQuaW5zZXJ0T25lKHtcbiAgICBfaWQ6IGlkLCB1c2VySWQsIHBvc3RJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0pXG4gICAgLnRoZW4oKGNvbW1lbnQpID0+IGNvbW1lbnQpXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRiOiAnLCBlcnIpKTtcbn07XG5cbmV4cG9ydCB7XG4gIGNyZWF0ZVVzZXIsIGNyZWF0ZVBvc3QsIGNyZWF0ZUNvbW1lbnQsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "controllersUpdate.js"
      ],
      "names": [
        "createUser",
        "arg",
        "console",
        "log",
        "JSON",
        "stringify",
        "id",
        "firstName",
        "lastName",
        "user",
        "User",
        "_id",
        "save",
        "then",
        "result",
        "newUser",
        "err",
        "error",
        "createPost",
        "req",
        "params",
        "title",
        "userId",
        "content",
        "createdDate",
        "Post",
        "insertOne",
        "post",
        "createComment",
        "postId",
        "Comment",
        "comment"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACA;AACA,IAAMA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,OAAO,CAACC,GAAR,6BAAiCC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAjC;AACQK,YAAAA,EAFS,GAEmBL,GAFnB,CAETK,EAFS,EAELC,SAFK,GAEmBN,GAFnB,CAELM,SAFK,EAEMC,QAFN,GAEmBP,GAFnB,CAEMO,QAFN;AAGXC,YAAAA,IAHW,GAGJ,IAAIC,YAAJ,CAAS;AACpBC,cAAAA,GAAG,EAAEL,EADe;AACXC,cAAAA,SAAS,EAATA,SADW;AACAC,cAAAA,QAAQ,EAARA;AADA,aAAT,CAHI;AAAA,6CAMVC,IAAI,CAACG,IAAL,GACJC,IADI,CACC,UAACC,MAAD,EAAY;AAChBZ,cAAAA,OAAO,CAACC,GAAR,mCAAuCC,IAAI,CAACC,SAAL,CAAeS,MAAf,CAAvC;AACA,kBAAMC,OAAO,GAAG;AACdT,gBAAAA,EAAE,EAAEQ,MAAM,CAACH,GADG;AAEdJ,gBAAAA,SAAS,EAAEO,MAAM,CAACP,SAFJ;AAGdC,gBAAAA,QAAQ,EAAEM,MAAM,CAACN;AAHH,eAAhB,CAFgB,CAOhB;AACA;AACA;;AACAN,cAAAA,OAAO,CAACC,GAAR,iCAAqCC,IAAI,CAACC,SAAL,CAAeU,OAAf,CAArC;AACA,qBAAOA,OAAP;AACD,aAbI,WAcE,UAACC,GAAD;AAAA,qBAASd,OAAO,CAACe,KAAR,CAAc,YAAd,EAA4BD,GAA5B,CAAT;AAAA,aAdF,CANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVhB,UAAU;AAAA;AAAA;AAAA,GAAhB,C,CAuBA;;;;;AACA,IAAMkB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGbA,GAAG,CAACC,MAHS,EAEfd,EAFe,eAEfA,EAFe,EAEXe,KAFW,eAEXA,KAFW,EAEJC,MAFI,eAEJA,MAFI,EAEIC,OAFJ,eAEIA,OAFJ,EAEaC,WAFb,eAEaA,WAFb;AAAA;AAAA,mBAIXC,aAAKC,SAAL,CAAe;AACnBf,cAAAA,GAAG,EAAEL,EADc;AACVe,cAAAA,KAAK,EAALA,KADU;AACHC,cAAAA,MAAM,EAANA,MADG;AACKC,cAAAA,OAAO,EAAPA,OADL;AACcC,cAAAA,WAAW,EAAXA;AADd,aAAf,EAGHX,IAHG,CAGE,UAACc,IAAD;AAAA,qBAAUA,IAAV;AAAA,aAHF,WAIG,UAACX,GAAD;AAAA,qBAASd,OAAO,CAACe,KAAR,CAAc,YAAd,EAA4BD,GAA5B,CAAT;AAAA,aAJH,CAJW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVE,UAAU;AAAA;AAAA;AAAA,GAAhB,C,CAWA;;;;;AACA,IAAMU,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOT,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BAGhBA,GAAG,CAACC,MAHY,EAElBd,EAFkB,gBAElBA,EAFkB,EAEdgB,MAFc,gBAEdA,MAFc,EAENO,MAFM,gBAENA,MAFM,EAEEN,OAFF,gBAEEA,OAFF,EAEWC,WAFX,gBAEWA,WAFX;AAAA;AAAA,mBAIdM,gBAAQJ,SAAR,CAAkB;AACtBf,cAAAA,GAAG,EAAEL,EADiB;AACbgB,cAAAA,MAAM,EAANA,MADa;AACLO,cAAAA,MAAM,EAANA,MADK;AACGN,cAAAA,OAAO,EAAPA,OADH;AACYC,cAAAA,WAAW,EAAXA;AADZ,aAAlB,EAGHX,IAHG,CAGE,UAACkB,OAAD;AAAA,qBAAaA,OAAb;AAAA,aAHF,WAIG,UAACf,GAAD;AAAA,qBAASd,OAAO,CAACe,KAAR,CAAc,YAAd,EAA4BD,GAA5B,CAAT;AAAA,aAJH,CAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbY,aAAa;AAAA;AAAA;AAAA,GAAnB",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import { User, Post, Comment } from './models';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nconst createUser = async (arg) => {\n  console.log(`m createUser req: ${JSON.stringify(arg)}`);\n  const { id, firstName, lastName } = arg;\n  const user = new User({\n    _id: id, firstName, lastName,\n  });\n  return user.save()\n    .then((result) => {\n      console.log(`m createUser insertOne: ${JSON.stringify(result)}`);\n      const newUser = {\n        id: result._id,\n        firstName: result.firstName,\n        lastName: result.lastName,\n      };\n      // const newUser = { ...result };\n      // newUser.id = newUser._id;\n      // delete newUser._id;\n      console.log(`m createUser newUser: ${JSON.stringify(newUser)}`);\n      return newUser;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Post\nconst createPost = async (req) => {\n  const {\n    id, title, userId, content, createdDate,\n  } = req.params;\n  await Post.insertOne({\n    _id: id, title, userId, content, createdDate,\n  })\n    .then((post) => post)\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Comment\nconst createComment = async (req) => {\n  const {\n    id, userId, postId, content, createdDate,\n  } = req.params;\n  await Comment.insertOne({\n    _id: id, userId, postId, content, createdDate,\n  })\n    .then((comment) => comment)\n    .catch((err) => console.error('Error db: ', err));\n};\n\nexport {\n  createUser, createPost, createComment,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572036458022
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "controllersSet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createComment = exports.createPost = exports.createUser = void 0;\n\nvar _models = require(\"./models\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nvar createUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(arg) {\n    var id, firstName, lastName, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"c createUser arg: \".concat(JSON.stringify(arg)));\n            id = arg.id, firstName = arg.firstName, lastName = arg.lastName;\n            user = new _models.User({\n              _id: id,\n              firstName: firstName,\n              lastName: lastName\n            });\n            return _context.abrupt(\"return\", user.save().then(function (result) {\n              console.log(\"c createUser SaveOne: \".concat(JSON.stringify(result)));\n              var newUser = {\n                id: result._id,\n                firstName: result.firstName,\n                lastName: result.lastName // posts: [],\n\n              };\n              console.log(\"c createUser newUser: \".concat(JSON.stringify(newUser)));\n              return newUser;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Create Post\n\n\nexports.createUser = createUser;\n\nvar createPost =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(arg) {\n    var id, title, userId, content, createdDate, post;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = arg.id, title = arg.title, userId = arg.userId, content = arg.content, createdDate = arg.createdDate;\n            post = new _models.Post({\n              _id: id,\n              title: title,\n              userId: userId,\n              content: content,\n              createdDate: createdDate\n            });\n            return _context2.abrupt(\"return\", post.save().then(function (result) {\n              console.log(\"c createUser SaveOne: \".concat(JSON.stringify(result)));\n              var newPost = {\n                id: result._id,\n                title: result.title,\n                userId: result.userId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n              console.log(\"c createPost newPost: \".concat(JSON.stringify(newPost)));\n              return newPost;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createPost(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Create Comment\n\n\nexports.createPost = createPost;\n\nvar createComment =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(arg) {\n    var comment;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"c createComment arg: \".concat(JSON.stringify(arg))); // const {\n            //   id, userId, postId, content, createdDate,\n            // } = arg;\n            // const comment = new Comment({\n            //   _id: id, userId, postId, content, createdDate,\n            // });\n\n            comment = new _models.Comment(_objectSpread({\n              _id: arg.id\n            }, arg));\n            console.log(\"c createComment comment: \".concat(JSON.stringify(comment)));\n            return _context3.abrupt(\"return\", comment.save().then(function (result) {\n              console.log(\"c createComment SaveOne: \".concat(JSON.stringify(result)));\n              var newComment = {\n                id: result._id,\n                userId: result.userId,\n                postId: result.postId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n              console.log(\"c createComment newComment: \".concat(JSON.stringify(newComment)));\n              return newComment;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function createComment(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.createComment = createComment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJzU2V0LmpzIl0sIm5hbWVzIjpbImNyZWF0ZVVzZXIiLCJhcmciLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImlkIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJ1c2VyIiwiVXNlciIsIl9pZCIsInNhdmUiLCJ0aGVuIiwicmVzdWx0IiwibmV3VXNlciIsImVyciIsImVycm9yIiwiY3JlYXRlUG9zdCIsInRpdGxlIiwidXNlcklkIiwiY29udGVudCIsImNyZWF0ZWREYXRlIiwicG9zdCIsIlBvc3QiLCJuZXdQb3N0IiwiY3JlYXRlQ29tbWVudCIsImNvbW1lbnQiLCJDb21tZW50IiwibmV3Q29tbWVudCIsInBvc3RJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7QUFFQTtBQUNBO0FBQ0EsSUFBTUEsVUFBVTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUcsaUJBQU9DLEdBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2pCQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsNkJBQWlDQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUosR0FBZixDQUFqQztBQUNRSyxZQUFBQSxFQUZTLEdBRW1CTCxHQUZuQixDQUVUSyxFQUZTLEVBRUxDLFNBRkssR0FFbUJOLEdBRm5CLENBRUxNLFNBRkssRUFFTUMsUUFGTixHQUVtQlAsR0FGbkIsQ0FFTU8sUUFGTjtBQUdYQyxZQUFBQSxJQUhXLEdBR0osSUFBSUMsWUFBSixDQUFTO0FBQ3BCQyxjQUFBQSxHQUFHLEVBQUVMLEVBRGU7QUFDWEMsY0FBQUEsU0FBUyxFQUFUQSxTQURXO0FBQ0FDLGNBQUFBLFFBQVEsRUFBUkE7QUFEQSxhQUFULENBSEk7QUFBQSw2Q0FNVkMsSUFBSSxDQUFDRyxJQUFMLEdBQ0pDLElBREksQ0FDQyxVQUFDQyxNQUFELEVBQVk7QUFDaEJaLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixpQ0FBcUNDLElBQUksQ0FBQ0MsU0FBTCxDQUFl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QUFESyxlQUNFTCxHQURGLEVBUkk7QUFXcEJDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixvQ0FBd0NDLElBQUksQ0FBQ0MsU0FBTCxDQUFlc0IsT0FBZixDQUF4QztBQVhvQiw4Q0FZYkEsT0FBTyxDQUFDZixJQUFSLEdBQ0pDLElBREksQ0FDQyxVQUFDQyxNQUFELEVBQVk7QUFDaEJaLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixvQ0FBd0NDLElBQUksQ0FBQ0MsU0FBTCxDQUFlUyxNQUFmLENBQXhDO0FBQ0Esa0JBQU1lLFVBQVUsR0FBRztBQUNqQnZCLGdCQUFBQSxFQUFFLEVBQUVRLE1BQU0sQ0FBQ0gsR0FETTtBQUVqQlMsZ0JBQUFBLE1BQU0sRUFBRU4sTUFBTSxDQUFDTSxNQUZFO0FBR2pCVSxnQkFBQUEsTUFBTSxFQUFFaEIsTUFBTSxDQUFDZ0IsTUFIRTtBQUlqQlQsZ0JBQUFBLE9BQU8sRUFBRVAsTUFBTSxDQUFDTyxPQUpDO0FBS2pCQyxnQkFBQUEsV0FBVyxFQUFFUixNQUFNLENBQUNRO0FBTEgsZUFBbkI7QUFPQXBCLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUix1Q0FBMkNDLElBQUksQ0FBQ0MsU0FBTCxDQUFld0IsVUFBZixDQUEzQztBQUNBLHFCQUFPQSxVQUFQO0FBQ0QsYUFaSSxXQWFFLFVBQUNiLEdBQUQ7QUFBQSxxQkFBU2QsT0FBTyxDQUFDZSxLQUFSLENBQWMsWUFBZCxFQUE0QkQsR0FBNUIsQ0FBVDtBQUFBLGFBYkYsQ0FaYTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFiVSxhQUFhO0FBQUE7QUFBQTtBQUFBLEdBQW5CIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL21vbmdvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyLCBQb3N0LCBDb21tZW50IH0gZnJvbSAnLi9tb2RlbHMnO1xuXG4vKiBlc2xpbnQgbm8tdW5kZXJzY29yZS1kYW5nbGU6IFsxLCB7IFwiYWxsb3dcIjogW1wiX19pZFwiXSB9XSAqL1xuLy8gQ3JlYXRlIFVzZXJcbmNvbnN0IGNyZWF0ZVVzZXIgPSBhc3luYyAoYXJnKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBjIGNyZWF0ZVVzZXIgYXJnOiAke0pTT04uc3RyaW5naWZ5KGFyZyl9YCk7XG4gIGNvbnN0IHsgaWQsIGZpcnN0TmFtZSwgbGFzdE5hbWUgfSA9IGFyZztcbiAgY29uc3QgdXNlciA9IG5ldyBVc2VyKHtcbiAgICBfaWQ6IGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLFxuICB9KTtcbiAgcmV0dXJuIHVzZXIuc2F2ZSgpXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYGMgY3JlYXRlVXNlciBTYXZlT25lOiAke0pTT04uc3RyaW5naWZ5KHJlc3VsdCl9YCk7XG4gICAgICBjb25zdCBuZXdVc2VyID0ge1xuICAgICAgICBpZDogcmVzdWx0Ll9pZCxcbiAgICAgICAgZmlyc3ROYW1lOiByZXN1bHQuZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZTogcmVzdWx0Lmxhc3ROYW1lLFxuICAgICAgICAvLyBwb3N0czogW10sXG4gICAgICB9O1xuICAgICAgY29uc29sZS5sb2coYGMgY3JlYXRlVXNlciBuZXdVc2VyOiAke0pTT04uc3RyaW5naWZ5KG5ld1VzZXIpfWApO1xuICAgICAgcmV0dXJuIG5ld1VzZXI7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcignRXJyb3IgZGI6ICcsIGVycikpO1xufTtcblxuLy8gQ3JlYXRlIFBvc3RcbmNvbnN0IGNyZWF0ZVBvc3QgPSBhc3luYyAoYXJnKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpZCwgdGl0bGUsIHVzZXJJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0gPSBhcmc7XG4gIGNvbnN0IHBvc3QgPSBuZXcgUG9zdCh7XG4gICAgX2lkOiBpZCwgdGl0bGUsIHVzZXJJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0pO1xuICByZXR1cm4gcG9zdC5zYXZlKClcbiAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgYyBjcmVhdGVVc2VyIFNhdmVPbmU6ICR7SlNPTi5zdHJpbmdpZnkocmVzdWx0KX1gKTtcbiAgICAgIGNvbnN0IG5ld1Bvc3QgPSB7XG4gICAgICAgIGlkOiByZXN1bHQuX2lkLFxuICAgICAgICB0aXRsZTogcmVzdWx0LnRpdGxlLFxuICAgICAgICB1c2VySWQ6IHJlc3VsdC51c2VySWQsXG4gICAgICAgIGNvbnRlbnQ6IHJlc3VsdC5jb250ZW50LFxuICAgICAgICBjcmVhdGVkRGF0ZTogcmVzdWx0LmNyZWF0ZWREYXRlLFxuICAgICAgfTtcbiAgICAgIGNvbnNvbGUubG9nKGBjIGNyZWF0ZVBvc3QgbmV3UG9zdDogJHtKU09OLnN0cmluZ2lmeShuZXdQb3N0KX1gKTtcbiAgICAgIHJldHVybiBuZXdQb3N0O1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRiOiAnLCBlcnIpKTtcbn07XG5cbi8vIENyZWF0ZSBDb21tZW50XG5jb25zdCBjcmVhdGVDb21tZW50ID0gYXN5bmMgKGFyZykgPT4ge1xuICBjb25zb2xlLmxvZyhgYyBjcmVhdGVDb21tZW50IGFyZzogJHtKU09OLnN0cmluZ2lmeShhcmcpfWApO1xuICAvLyBjb25zdCB7XG4gIC8vICAgaWQsIHVzZXJJZCwgcG9zdElkLCBjb250ZW50LCBjcmVhdGVkRGF0ZSxcbiAgLy8gfSA9IGFyZztcbiAgLy8gY29uc3QgY29tbWVudCA9IG5ldyBDb21tZW50KHtcbiAgLy8gICBfaWQ6IGlkLCB1c2VySWQsIHBvc3RJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIC8vIH0pO1xuICBjb25zdCBjb21tZW50ID0gbmV3IENvbW1lbnQoe1xuICAgIF9pZDogYXJnLmlkLCAuLi5hcmcsXG4gIH0pO1xuICBjb25zb2xlLmxvZyhgYyBjcmVhdGVDb21tZW50IGNvbW1lbnQ6ICR7SlNPTi5zdHJpbmdpZnkoY29tbWVudCl9YCk7XG4gIHJldHVybiBjb21tZW50LnNhdmUoKVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGBjIGNyZWF0ZUNvbW1lbnQgU2F2ZU9uZTogJHtKU09OLnN0cmluZ2lmeShyZXN1bHQpfWApO1xuICAgICAgY29uc3QgbmV3Q29tbWVudCA9IHtcbiAgICAgICAgaWQ6IHJlc3VsdC5faWQsXG4gICAgICAgIHVzZXJJZDogcmVzdWx0LnVzZXJJZCxcbiAgICAgICAgcG9zdElkOiByZXN1bHQucG9zdElkLFxuICAgICAgICBjb250ZW50OiByZXN1bHQuY29udGVudCxcbiAgICAgICAgY3JlYXRlZERhdGU6IHJlc3VsdC5jcmVhdGVkRGF0ZSxcbiAgICAgIH07XG4gICAgICBjb25zb2xlLmxvZyhgYyBjcmVhdGVDb21tZW50IG5ld0NvbW1lbnQ6ICR7SlNPTi5zdHJpbmdpZnkobmV3Q29tbWVudCl9YCk7XG4gICAgICByZXR1cm4gbmV3Q29tbWVudDtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKCdFcnJvciBkYjogJywgZXJyKSk7XG59O1xuXG5leHBvcnQge1xuICBjcmVhdGVVc2VyLCBjcmVhdGVQb3N0LCBjcmVhdGVDb21tZW50LFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "controllersSet.js"
      ],
      "names": [
        "createUser",
        "arg",
        "console",
        "log",
        "JSON",
        "stringify",
        "id",
        "firstName",
        "lastName",
        "user",
        "User",
        "_id",
        "save",
        "then",
        "result",
        "newUser",
        "err",
        "error",
        "createPost",
        "title",
        "userId",
        "content",
        "createdDate",
        "post",
        "Post",
        "newPost",
        "createComment",
        "comment",
        "Comment",
        "newComment",
        "postId"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import { User, Post, Comment } from './models';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nconst createUser = async (arg) => {\n  console.log(`c createUser arg: ${JSON.stringify(arg)}`);\n  const { id, firstName, lastName } = arg;\n  const user = new User({\n    _id: id, firstName, lastName,\n  });\n  return user.save()\n    .then((result) => {\n      console.log(`c createUser SaveOne: ${JSON.stringify(result)}`);\n      const newUser = {\n        id: result._id,\n        firstName: result.firstName,\n        lastName: result.lastName,\n        // posts: [],\n      };\n      console.log(`c createUser newUser: ${JSON.stringify(newUser)}`);\n      return newUser;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Post\nconst createPost = async (arg) => {\n  const {\n    id, title, userId, content, createdDate,\n  } = arg;\n  const post = new Post({\n    _id: id, title, userId, content, createdDate,\n  });\n  return post.save()\n    .then((result) => {\n      console.log(`c createUser SaveOne: ${JSON.stringify(result)}`);\n      const newPost = {\n        id: result._id,\n        title: result.title,\n        userId: result.userId,\n        content: result.content,\n        createdDate: result.createdDate,\n      };\n      console.log(`c createPost newPost: ${JSON.stringify(newPost)}`);\n      return newPost;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Comment\nconst createComment = async (arg) => {\n  console.log(`c createComment arg: ${JSON.stringify(arg)}`);\n  // const {\n  //   id, userId, postId, content, createdDate,\n  // } = arg;\n  // const comment = new Comment({\n  //   _id: id, userId, postId, content, createdDate,\n  // });\n  const comment = new Comment({\n    _id: arg.id, ...arg,\n  });\n  console.log(`c createComment comment: ${JSON.stringify(comment)}`);\n  return comment.save()\n    .then((result) => {\n      console.log(`c createComment SaveOne: ${JSON.stringify(result)}`);\n      const newComment = {\n        id: result._id,\n        userId: result.userId,\n        postId: result.postId,\n        content: result.content,\n        createdDate: result.createdDate,\n      };\n      console.log(`c createComment newComment: ${JSON.stringify(newComment)}`);\n      return newComment;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\nexport {\n  createUser, createPost, createComment,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572089018501
  }
}