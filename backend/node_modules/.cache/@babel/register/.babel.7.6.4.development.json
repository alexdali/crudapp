{
  "{\"sourceRoot\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"filename\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _typedef = _interopRequireDefault(require(\"./graphql/typedef\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./graphql/resolvers\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import schema, { graphql } from \"./schema\";\n// import graphql from 'graphql';\n// import { makeExecutableSchema } from 'graphql-tools';\n// import uri from './mongodb/db';\nrequire('dotenv').config({\n  path: 'variables.env'\n}); // Import GraphQL Schema\n// const schema = require('./schema')\n// make graphql schema\n// const schema = makeExecutableSchema({\n//   typeDefs,\n//   resolvers,\n// });\n// const {MongoClient} = require('mongodb');\n// const uri = 'mongodb+srv://dbprog:<password>@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority';\n// const client = new MongoClient(uri, { useNewUrlParser: true });\n// client.connect((err) => {\n//   const collection = client.db('test').collection('devices');\n//   // perform actions on the collection object\n//   client.close();\n// });\n\n\nvar password = process.env.DBUSER_PASS;\nvar mongoDBuri = process.env.MONGODB_URL; // mongoose.connect(`mongodb+srv://dbprog:${password}@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority`);\n// mongoose.connect('mongodb://<dbuser>:<dbpassword>@<MongoDB URI>');\n// mongoose.connect(`mongodb+srv://dbprog:${password}@${mongoDBuri}`, { useNewUrlParser: true });\n\nvar uri = \"mongodb+srv://dbprog:\".concat(password, \"@\").concat(mongoDBuri);\n\n_mongoose[\"default\"].connect(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].connection.once('open', function () {\n  console.log('connected to MongoDB');\n})[\"catch\"](function (err) {\n  return console.error('error MongoDb', err);\n}); // create server\n\n\nvar app = (0, _express[\"default\"])();\nvar port = 8000; // add default route \"/\"\n// app.get(\"/\", (req,res)=> {\n//   let query = `{\n//     person { name },\n//     people { name, description, }\n//   }`;\n//   graphql(schema, query).then(result => {\n//     res.json(result);\n//   });\n// });\n\napp.use(_bodyParser[\"default\"].json());\nvar server = new _apolloServerExpress.ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs: _typedef[\"default\"],\n  resolvers: _resolvers[\"default\"],\n  formatError: function formatError(error) {\n    return error;\n  },\n  context: function context(_ref) {\n    var req = _ref.req,\n        res = _ref.res;\n    return {\n      req: req,\n      res: res\n    };\n  }\n});\nserver.applyMiddleware({\n  app: app,\n  path: '/graphql'\n});\napp.listen(port, function () {\n  console.log(\"app server listening on port: \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJwYXRoIiwicGFzc3dvcmQiLCJwcm9jZXNzIiwiZW52IiwiREJVU0VSX1BBU1MiLCJtb25nb0RCdXJpIiwiTU9OR09EQl9VUkwiLCJ1cmkiLCJtb25nb29zZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjb25uZWN0aW9uIiwib25jZSIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJlcnJvciIsImFwcCIsInBvcnQiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInNlcnZlciIsIkFwb2xsb1NlcnZlciIsImludHJvc3BlY3Rpb24iLCJ0eXBlRGVmcyIsInJlc29sdmVycyIsImZvcm1hdEVycm9yIiwiY29udGV4dCIsInJlcSIsInJlcyIsImFwcGx5TWlkZGxld2FyZSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFJQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQU5BO0FBQ0E7QUFDQTtBQUtBO0FBQ0FBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCLENBQXlCO0FBQUVDLEVBQUFBLElBQUksRUFBRTtBQUFSLENBQXpCLEUsQ0FFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLElBQU1DLFFBQVEsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFdBQTdCO0FBRUEsSUFBTUMsVUFBVSxHQUFHSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsV0FBL0IsQyxDQUVBO0FBQ0E7QUFFQTs7QUFFQSxJQUFNQyxHQUFHLGtDQUEyQk4sUUFBM0IsY0FBdUNJLFVBQXZDLENBQVQ7O0FBR0FHLHFCQUFTQyxPQUFULENBQWlCRixHQUFqQixFQUFzQjtBQUFFRyxFQUFBQSxlQUFlLEVBQUUsSUFBbkI7QUFBeUJDLEVBQUFBLGtCQUFrQixFQUFFO0FBQTdDLENBQXRCOztBQUVBSCxxQkFBU0ksVUFBVCxDQUFvQkMsSUFBcEIsQ0FBeUIsTUFBekIsRUFBaUMsWUFBTTtBQUNyQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7QUFDRCxDQUZELFdBRVMsVUFBQ0MsR0FBRDtBQUFBLFNBQVNGLE9BQU8sQ0FBQ0csS0FBUixDQUFjLGVBQWQsRUFBK0JELEdBQS9CLENBQVQ7QUFBQSxDQUZULEUsQ0FLQTs7O0FBQ0EsSUFBTUUsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWIsQyxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBRCxHQUFHLENBQUNFLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUVBLElBQU1DLE1BQU0sR0FBRyxJQUFJQyxpQ0FBSixDQUFpQjtBQUM5QkMsRUFBQUEsYUFBYSxFQUFFLElBRGU7QUFFOUI7QUFDQUMsRUFBQUEsUUFBUSxFQUFSQSxtQkFIOEI7QUFJOUJDLEVBQUFBLFNBQVMsRUFBVEEscUJBSjhCO0FBSzlCQyxFQUFBQSxXQUFXLEVBQUUscUJBQUNYLEtBQUQ7QUFBQSxXQUFXQSxLQUFYO0FBQUEsR0FMaUI7QUFNOUJZLEVBQUFBLE9BQU8sRUFBRTtBQUFBLFFBQUdDLEdBQUgsUUFBR0EsR0FBSDtBQUFBLFFBQVFDLEdBQVIsUUFBUUEsR0FBUjtBQUFBLFdBQW1CO0FBQzFCRCxNQUFBQSxHQUFHLEVBQUhBLEdBRDBCO0FBQ3JCQyxNQUFBQSxHQUFHLEVBQUhBO0FBRHFCLEtBQW5CO0FBQUE7QUFOcUIsQ0FBakIsQ0FBZjtBQVdBUixNQUFNLENBQUNTLGVBQVAsQ0FBdUI7QUFBRWQsRUFBQUEsR0FBRyxFQUFIQSxHQUFGO0FBQU9sQixFQUFBQSxJQUFJLEVBQUU7QUFBYixDQUF2QjtBQUVBa0IsR0FBRyxDQUFDZSxNQUFKLENBQVdkLElBQVgsRUFBaUIsWUFBTTtBQUNyQkwsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHlDQUE2Q0ksSUFBN0M7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6IkU6XFxQcm9qZWN0SlNcXEdyYXBoUUxcXGNydWRhcHBcXGJhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG4vLyBpbXBvcnQgc2NoZW1hLCB7IGdyYXBocWwgfSBmcm9tIFwiLi9zY2hlbWFcIjtcbi8vIGltcG9ydCBncmFwaHFsIGZyb20gJ2dyYXBocWwnO1xuLy8gaW1wb3J0IHsgbWFrZUV4ZWN1dGFibGVTY2hlbWEgfSBmcm9tICdncmFwaHFsLXRvb2xzJztcbmltcG9ydCB7IEFwb2xsb1NlcnZlciB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgdHlwZURlZnMgZnJvbSAnLi9ncmFwaHFsL3R5cGVkZWYnO1xuaW1wb3J0IHJlc29sdmVycyBmcm9tICcuL2dyYXBocWwvcmVzb2x2ZXJzJztcbi8vIGltcG9ydCB1cmkgZnJvbSAnLi9tb25nb2RiL2RiJztcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZyh7IHBhdGg6ICd2YXJpYWJsZXMuZW52JyB9KTtcblxuLy8gSW1wb3J0IEdyYXBoUUwgU2NoZW1hXG4vLyBjb25zdCBzY2hlbWEgPSByZXF1aXJlKCcuL3NjaGVtYScpXG5cbi8vIG1ha2UgZ3JhcGhxbCBzY2hlbWFcbi8vIGNvbnN0IHNjaGVtYSA9IG1ha2VFeGVjdXRhYmxlU2NoZW1hKHtcbi8vICAgdHlwZURlZnMsXG4vLyAgIHJlc29sdmVycyxcbi8vIH0pO1xuXG5cbi8vIGNvbnN0IHtNb25nb0NsaWVudH0gPSByZXF1aXJlKCdtb25nb2RiJyk7XG5cbi8vIGNvbnN0IHVyaSA9ICdtb25nb2RiK3NydjovL2RicHJvZzo8cGFzc3dvcmQ+QGNsdXN0ZXIwLXl5d2NrLm1vbmdvZGIubmV0L3Rlc3Q/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5Jztcbi8vIGNvbnN0IGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmksIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0pO1xuLy8gY2xpZW50LmNvbm5lY3QoKGVycikgPT4ge1xuLy8gICBjb25zdCBjb2xsZWN0aW9uID0gY2xpZW50LmRiKCd0ZXN0JykuY29sbGVjdGlvbignZGV2aWNlcycpO1xuLy8gICAvLyBwZXJmb3JtIGFjdGlvbnMgb24gdGhlIGNvbGxlY3Rpb24gb2JqZWN0XG4vLyAgIGNsaWVudC5jbG9zZSgpO1xuLy8gfSk7XG5cblxuY29uc3QgcGFzc3dvcmQgPSBwcm9jZXNzLmVudi5EQlVTRVJfUEFTUztcblxuY29uc3QgbW9uZ29EQnVyaSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJMO1xuXG4vLyBtb25nb29zZS5jb25uZWN0KGBtb25nb2RiK3NydjovL2RicHJvZzoke3Bhc3N3b3JkfUBjbHVzdGVyMC15eXdjay5tb25nb2RiLm5ldC90ZXN0P3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eWApO1xuLy8gbW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYjovLzxkYnVzZXI+OjxkYnBhc3N3b3JkPkA8TW9uZ29EQiBVUkk+Jyk7XG5cbi8vIG1vbmdvb3NlLmNvbm5lY3QoYG1vbmdvZGIrc3J2Oi8vZGJwcm9nOiR7cGFzc3dvcmR9QCR7bW9uZ29EQnVyaX1gLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSB9KTtcblxuY29uc3QgdXJpID0gYG1vbmdvZGIrc3J2Oi8vZGJwcm9nOiR7cGFzc3dvcmR9QCR7bW9uZ29EQnVyaX1gO1xuXG5cbm1vbmdvb3NlLmNvbm5lY3QodXJpLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSwgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlIH0pO1xuXG5tb25nb29zZS5jb25uZWN0aW9uLm9uY2UoJ29wZW4nLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdjb25uZWN0ZWQgdG8gTW9uZ29EQicpO1xufSkuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcignZXJyb3IgTW9uZ29EYicsIGVycikpO1xuXG5cbi8vIGNyZWF0ZSBzZXJ2ZXJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSA4MDAwO1xuXG4vLyBhZGQgZGVmYXVsdCByb3V0ZSBcIi9cIlxuLy8gYXBwLmdldChcIi9cIiwgKHJlcSxyZXMpPT4ge1xuLy8gICBsZXQgcXVlcnkgPSBge1xuLy8gICAgIHBlcnNvbiB7IG5hbWUgfSxcbi8vICAgICBwZW9wbGUgeyBuYW1lLCBkZXNjcmlwdGlvbiwgfVxuLy8gICB9YDtcbi8vICAgZ3JhcGhxbChzY2hlbWEsIHF1ZXJ5KS50aGVuKHJlc3VsdCA9PiB7XG4vLyAgICAgcmVzLmpzb24ocmVzdWx0KTtcbi8vICAgfSk7XG4vLyB9KTtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoe1xuICBpbnRyb3NwZWN0aW9uOiB0cnVlLFxuICAvLyBzY2hlbWEsXG4gIHR5cGVEZWZzLFxuICByZXNvbHZlcnMsXG4gIGZvcm1hdEVycm9yOiAoZXJyb3IpID0+IGVycm9yLFxuICBjb250ZXh0OiAoeyByZXEsIHJlcyB9KSA9PiAoe1xuICAgIHJlcSwgcmVzLFxuICB9KSxcbn0pO1xuXG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwLCBwYXRoOiAnL2dyYXBocWwnIH0pO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYGFwcCBzZXJ2ZXIgbGlzdGVuaW5nIG9uIHBvcnQ6ICR7cG9ydH1gKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "path",
        "password",
        "process",
        "env",
        "DBUSER_PASS",
        "mongoDBuri",
        "MONGODB_URL",
        "uri",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "connection",
        "once",
        "console",
        "log",
        "err",
        "error",
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "server",
        "ApolloServer",
        "introspection",
        "typeDefs",
        "resolvers",
        "formatError",
        "context",
        "req",
        "res",
        "applyMiddleware",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AAIA;;AACA;;AACA;;AACA;;;;AANA;AACA;AACA;AAKA;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAzB,E,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA7B;AAEA,IAAMC,UAAU,GAAGH,OAAO,CAACC,GAAR,CAAYG,WAA/B,C,CAEA;AACA;AAEA;;AAEA,IAAMC,GAAG,kCAA2BN,QAA3B,cAAuCI,UAAvC,CAAT;;AAGAG,qBAASC,OAAT,CAAiBF,GAAjB,EAAsB;AAAEG,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAAtB;;AAEAH,qBAASI,UAAT,CAAoBC,IAApB,CAAyB,MAAzB,EAAiC,YAAM;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,CAFD,WAES,UAACC,GAAD;AAAA,SAASF,OAAO,CAACG,KAAR,CAAc,eAAd,EAA+BD,GAA/B,CAAT;AAAA,CAFT,E,CAKA;;;AACA,IAAME,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,GAAG,CAACE,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEA,IAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9BC,EAAAA,aAAa,EAAE,IADe;AAE9B;AACAC,EAAAA,QAAQ,EAARA,mBAH8B;AAI9BC,EAAAA,SAAS,EAATA,qBAJ8B;AAK9BC,EAAAA,WAAW,EAAE,qBAACX,KAAD;AAAA,WAAWA,KAAX;AAAA,GALiB;AAM9BY,EAAAA,OAAO,EAAE;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,QAAQC,GAAR,QAAQA,GAAR;AAAA,WAAmB;AAC1BD,MAAAA,GAAG,EAAHA,GAD0B;AACrBC,MAAAA,GAAG,EAAHA;AADqB,KAAnB;AAAA;AANqB,CAAjB,CAAf;AAWAR,MAAM,CAACS,eAAP,CAAuB;AAAEd,EAAAA,GAAG,EAAHA,GAAF;AAAOlB,EAAAA,IAAI,EAAE;AAAb,CAAvB;AAEAkB,GAAG,CAACe,MAAJ,CAAWd,IAAX,EAAiB,YAAM;AACrBL,EAAAA,OAAO,CAACC,GAAR,yCAA6CI,IAA7C;AACD,CAFD",
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourcesContent": [
        "import express from 'express';\nimport mongoose from 'mongoose';\n// import schema, { graphql } from \"./schema\";\n// import graphql from 'graphql';\n// import { makeExecutableSchema } from 'graphql-tools';\nimport { ApolloServer } from 'apollo-server-express';\nimport bodyParser from 'body-parser';\nimport typeDefs from './graphql/typedef';\nimport resolvers from './graphql/resolvers';\n// import uri from './mongodb/db';\nrequire('dotenv').config({ path: 'variables.env' });\n\n// Import GraphQL Schema\n// const schema = require('./schema')\n\n// make graphql schema\n// const schema = makeExecutableSchema({\n//   typeDefs,\n//   resolvers,\n// });\n\n\n// const {MongoClient} = require('mongodb');\n\n// const uri = 'mongodb+srv://dbprog:<password>@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority';\n// const client = new MongoClient(uri, { useNewUrlParser: true });\n// client.connect((err) => {\n//   const collection = client.db('test').collection('devices');\n//   // perform actions on the collection object\n//   client.close();\n// });\n\n\nconst password = process.env.DBUSER_PASS;\n\nconst mongoDBuri = process.env.MONGODB_URL;\n\n// mongoose.connect(`mongodb+srv://dbprog:${password}@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority`);\n// mongoose.connect('mongodb://<dbuser>:<dbpassword>@<MongoDB URI>');\n\n// mongoose.connect(`mongodb+srv://dbprog:${password}@${mongoDBuri}`, { useNewUrlParser: true });\n\nconst uri = `mongodb+srv://dbprog:${password}@${mongoDBuri}`;\n\n\nmongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n\nmongoose.connection.once('open', () => {\n  console.log('connected to MongoDB');\n}).catch((err) => console.error('error MongoDb', err));\n\n\n// create server\nconst app = express();\nconst port = 8000;\n\n// add default route \"/\"\n// app.get(\"/\", (req,res)=> {\n//   let query = `{\n//     person { name },\n//     people { name, description, }\n//   }`;\n//   graphql(schema, query).then(result => {\n//     res.json(result);\n//   });\n// });\n\napp.use(bodyParser.json());\n\nconst server = new ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs,\n  resolvers,\n  formatError: (error) => error,\n  context: ({ req, res }) => ({\n    req, res,\n  }),\n});\n\nserver.applyMiddleware({ app, path: '/graphql' });\n\napp.listen(port, () => {\n  console.log(`app server listening on port: ${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571994929812
  },
  "{\"sourceRoot\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"filename\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\typedef.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\typedef.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\typedef.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\typedef.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
        "sourceFileName": "typedef.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\ntype Author {\\n  id: Int!\\n  firstName: String\\n  lastName: String\\n  posts: [Post]\\n}\\n\\ntype Post {\\n  id: Int!\\n  title: String\\n  authorId: String\\n  votes: Int\\n  comments:\\n}\\n\\ntype Comment {\\n  id: Int!\\n  authorId: String!\\n  post: String!\\n}\\n\\ninput PostData {\\n  id: Int!\\n  title: String\\n  authorId: String\\n  votes: Int\\n}\\n\\ntype Response {\\n  success: Boolean\\n}\\n\\ntype Query {\\n\\n  posts: [Post]\\n  author(id: Int!): Author\\n}\\n\\ntype Mutation {\\n  createPost(post: PostData): Response\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar typeDefs = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = typeDefs;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVkZWYuanMiXSwibmFtZXMiOlsidHlwZURlZnMiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxRQUFRLE9BQUdDLHdCQUFILG9CQUFkO2VBNkNlRCxRIiwic291cmNlUm9vdCI6IkU6XFxQcm9qZWN0SlNcXEdyYXBoUUxcXGNydWRhcHBcXGJhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcblxudHlwZSBBdXRob3Ige1xuICBpZDogSW50IVxuICBmaXJzdE5hbWU6IFN0cmluZ1xuICBsYXN0TmFtZTogU3RyaW5nXG4gIHBvc3RzOiBbUG9zdF1cbn1cblxudHlwZSBQb3N0IHtcbiAgaWQ6IEludCFcbiAgdGl0bGU6IFN0cmluZ1xuICBhdXRob3JJZDogU3RyaW5nXG4gIHZvdGVzOiBJbnRcbiAgY29tbWVudHM6XG59XG5cbnR5cGUgQ29tbWVudCB7XG4gIGlkOiBJbnQhXG4gIGF1dGhvcklkOiBTdHJpbmchXG4gIHBvc3Q6IFN0cmluZyFcbn1cblxuaW5wdXQgUG9zdERhdGEge1xuICBpZDogSW50IVxuICB0aXRsZTogU3RyaW5nXG4gIGF1dGhvcklkOiBTdHJpbmdcbiAgdm90ZXM6IEludFxufVxuXG50eXBlIFJlc3BvbnNlIHtcbiAgc3VjY2VzczogQm9vbGVhblxufVxuXG50eXBlIFF1ZXJ5IHtcblxuICBwb3N0czogW1Bvc3RdXG4gIGF1dGhvcihpZDogSW50ISk6IEF1dGhvclxufVxuXG50eXBlIE11dGF0aW9uIHtcbiAgY3JlYXRlUG9zdChwb3N0OiBQb3N0RGF0YSk6IFJlc3BvbnNlXG59XG5gO1xuXG5leHBvcnQgZGVmYXVsdCB0eXBlRGVmcztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "typedef.js"
      ],
      "names": [
        "typeDefs",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,OAAGC,wBAAH,oBAAd;eA6CeD,Q",
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst typeDefs = gql`\n\ntype Author {\n  id: Int!\n  firstName: String\n  lastName: String\n  posts: [Post]\n}\n\ntype Post {\n  id: Int!\n  title: String\n  authorId: String\n  votes: Int\n  comments:\n}\n\ntype Comment {\n  id: Int!\n  authorId: String!\n  post: String!\n}\n\ninput PostData {\n  id: Int!\n  title: String\n  authorId: String\n  votes: Int\n}\n\ntype Response {\n  success: Boolean\n}\n\ntype Query {\n\n  posts: [Post]\n  author(id: Int!): Author\n}\n\ntype Mutation {\n  createPost(post: PostData): Response\n}\n`;\n\nexport default typeDefs;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571915496437
  },
  "{\"sourceRoot\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"filename\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// import { find } from \"lodash\";\nvar authors = [{\n  id: 1,\n  firstName: 'Tom',\n  lastName: 'Coleman'\n}, {\n  id: 2,\n  firstName: 'Sashko',\n  lastName: 'Stubailo'\n}, {\n  id: 3,\n  firstName: 'Mikhail',\n  lastName: 'Novikov'\n}];\nvar _posts = [{\n  id: 1,\n  authorId: 1,\n  title: 'Introduction to GraphQL',\n  votes: 2\n}, {\n  id: 2,\n  authorId: 2,\n  title: 'Welcome to Meteor',\n  votes: 3\n}, {\n  id: 3,\n  authorId: 2,\n  title: 'Advanced GraphQL',\n  votes: 1\n}, {\n  id: 4,\n  authorId: 3,\n  title: 'Launchpad is Cool',\n  votes: 7\n}];\nvar resolvers = {\n  Query: {\n    posts: function posts() {\n      console.log('query posts', _posts);\n      return _posts;\n    },\n    author: function author(_, _ref) {\n      var id = _ref.id;\n      var authorReq = authors.filter(function (author) {\n        console.log('query authors.filter', author.id);\n        return author.id === id;\n      });\n      console.log(\"query authorReq: \".concat(authorReq, \", id: \").concat(id));\n      return authorReq[0];\n    }\n  },\n  Mutation: {\n    createPost: function createPost(_, newPost) {\n      _posts.push(newPost.post);\n\n      var result = {\n        success: true\n      };\n      return result;\n    }\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJhdXRob3JzIiwiaWQiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBvc3RzIiwiYXV0aG9ySWQiLCJ0aXRsZSIsInZvdGVzIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJjb25zb2xlIiwibG9nIiwiYXV0aG9yIiwiXyIsImF1dGhvclJlcSIsImZpbHRlciIsIk11dGF0aW9uIiwiY3JlYXRlUG9zdCIsIm5ld1Bvc3QiLCJwdXNoIiwicG9zdCIsInJlc3VsdCIsInN1Y2Nlc3MiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBRUEsSUFBTUEsT0FBTyxHQUFHLENBQ2Q7QUFBRUMsRUFBQUEsRUFBRSxFQUFFLENBQU47QUFBU0MsRUFBQUEsU0FBUyxFQUFFLEtBQXBCO0FBQTJCQyxFQUFBQSxRQUFRLEVBQUU7QUFBckMsQ0FEYyxFQUVkO0FBQUVGLEVBQUFBLEVBQUUsRUFBRSxDQUFOO0FBQVNDLEVBQUFBLFNBQVMsRUFBRSxRQUFwQjtBQUE4QkMsRUFBQUEsUUFBUSxFQUFFO0FBQXhDLENBRmMsRUFHZDtBQUFFRixFQUFBQSxFQUFFLEVBQUUsQ0FBTjtBQUFTQyxFQUFBQSxTQUFTLEVBQUUsU0FBcEI7QUFBK0JDLEVBQUFBLFFBQVEsRUFBRTtBQUF6QyxDQUhjLENBQWhCO0FBTUEsSUFBTUMsTUFBSyxHQUFHLENBQ1o7QUFDREgsRUFBQUEsRUFBRSxFQUFFLENBREg7QUFDTUksRUFBQUEsUUFBUSxFQUFFLENBRGhCO0FBQ21CQyxFQUFBQSxLQUFLLEVBQUUseUJBRDFCO0FBQ3FEQyxFQUFBQSxLQUFLLEVBQUU7QUFENUQsQ0FEWSxFQUlaO0FBQ0ROLEVBQUFBLEVBQUUsRUFBRSxDQURIO0FBQ01JLEVBQUFBLFFBQVEsRUFBRSxDQURoQjtBQUNtQkMsRUFBQUEsS0FBSyxFQUFFLG1CQUQxQjtBQUMrQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRHRELENBSlksRUFPWjtBQUNETixFQUFBQSxFQUFFLEVBQUUsQ0FESDtBQUNNSSxFQUFBQSxRQUFRLEVBQUUsQ0FEaEI7QUFDbUJDLEVBQUFBLEtBQUssRUFBRSxrQkFEMUI7QUFDOENDLEVBQUFBLEtBQUssRUFBRTtBQURyRCxDQVBZLEVBVVo7QUFDRE4sRUFBQUEsRUFBRSxFQUFFLENBREg7QUFDTUksRUFBQUEsUUFBUSxFQUFFLENBRGhCO0FBQ21CQyxFQUFBQSxLQUFLLEVBQUUsbUJBRDFCO0FBQytDQyxFQUFBQSxLQUFLLEVBQUU7QUFEdEQsQ0FWWSxDQUFkO0FBZUEsSUFBTUMsU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEwsSUFBQUEsS0FBSyxFQUFFLGlCQUFNO0FBQ1hNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQVosRUFBMkJQLE1BQTNCO0FBQ0EsYUFBT0EsTUFBUDtBQUNELEtBSkk7QUFLTFEsSUFBQUEsTUFBTSxFQUFFLGdCQUFDQyxDQUFELFFBQWU7QUFBQSxVQUFUWixFQUFTLFFBQVRBLEVBQVM7QUFDckIsVUFBTWEsU0FBUyxHQUFHZCxPQUFPLENBQUNlLE1BQVIsQ0FBZSxVQUFDSCxNQUFELEVBQVk7QUFDM0NGLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaLEVBQW9DQyxNQUFNLENBQUNYLEVBQTNDO0FBQ0EsZUFBT1csTUFBTSxDQUFDWCxFQUFQLEtBQWNBLEVBQXJCO0FBQ1AsT0FIdUIsQ0FBbEI7QUFJQVMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLDRCQUFnQ0csU0FBaEMsbUJBQWtEYixFQUFsRDtBQUNBLGFBQU9hLFNBQVMsQ0FBQyxDQUFELENBQWhCO0FBQ0Q7QUFaSSxHQURTO0FBZ0JoQkUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLFVBQVUsRUFBRSxvQkFBQ0osQ0FBRCxFQUFJSyxPQUFKLEVBQWdCO0FBQzFCZCxNQUFBQSxNQUFLLENBQUNlLElBQU4sQ0FBV0QsT0FBTyxDQUFDRSxJQUFuQjs7QUFDQSxVQUFNQyxNQUFNLEdBQUc7QUFDYkMsUUFBQUEsT0FBTyxFQUFFO0FBREksT0FBZjtBQUdBLGFBQU9ELE1BQVA7QUFDRDtBQVBPO0FBaEJNLENBQWxCO2VBNkJlYixTIiwic291cmNlUm9vdCI6IkU6XFxQcm9qZWN0SlNcXEdyYXBoUUxcXGNydWRhcHBcXGJhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBmaW5kIH0gZnJvbSBcImxvZGFzaFwiO1xuXG5jb25zdCBhdXRob3JzID0gW1xuICB7IGlkOiAxLCBmaXJzdE5hbWU6ICdUb20nLCBsYXN0TmFtZTogJ0NvbGVtYW4nIH0sXG4gIHsgaWQ6IDIsIGZpcnN0TmFtZTogJ1Nhc2hrbycsIGxhc3ROYW1lOiAnU3R1YmFpbG8nIH0sXG4gIHsgaWQ6IDMsIGZpcnN0TmFtZTogJ01pa2hhaWwnLCBsYXN0TmFtZTogJ05vdmlrb3YnIH0sXG5dO1xuXG5jb25zdCBwb3N0cyA9IFtcbiAge1xuIGlkOiAxLCBhdXRob3JJZDogMSwgdGl0bGU6ICdJbnRyb2R1Y3Rpb24gdG8gR3JhcGhRTCcsIHZvdGVzOiAyIFxufSxcbiAge1xuIGlkOiAyLCBhdXRob3JJZDogMiwgdGl0bGU6ICdXZWxjb21lIHRvIE1ldGVvcicsIHZvdGVzOiAzIFxufSxcbiAge1xuIGlkOiAzLCBhdXRob3JJZDogMiwgdGl0bGU6ICdBZHZhbmNlZCBHcmFwaFFMJywgdm90ZXM6IDEgXG59LFxuICB7XG4gaWQ6IDQsIGF1dGhvcklkOiAzLCB0aXRsZTogJ0xhdW5jaHBhZCBpcyBDb29sJywgdm90ZXM6IDcgXG59LFxuXTtcblxuY29uc3QgcmVzb2x2ZXJzID0ge1xuICBRdWVyeToge1xuICAgIHBvc3RzOiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygncXVlcnkgcG9zdHMnLCBwb3N0cyk7XG4gICAgICByZXR1cm4gcG9zdHM7XG4gICAgfSxcbiAgICBhdXRob3I6IChfLCB7IGlkIH0pID0+IHtcbiAgICAgIGNvbnN0IGF1dGhvclJlcSA9IGF1dGhvcnMuZmlsdGVyKChhdXRob3IpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ3F1ZXJ5IGF1dGhvcnMuZmlsdGVyJywgYXV0aG9yLmlkKTtcbiAgICAgICAgcmV0dXJuIGF1dGhvci5pZCA9PT0gaWQ7IFxufSk7XG4gICAgICBjb25zb2xlLmxvZyhgcXVlcnkgYXV0aG9yUmVxOiAke2F1dGhvclJlcX0sIGlkOiAke2lkfWApO1xuICAgICAgcmV0dXJuIGF1dGhvclJlcVswXTtcbiAgICB9LFxuICB9LFxuXG4gIE11dGF0aW9uOiB7XG4gICAgY3JlYXRlUG9zdDogKF8sIG5ld1Bvc3QpID0+IHtcbiAgICAgIHBvc3RzLnB1c2gobmV3UG9zdC5wb3N0KTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIH07XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gIH0sXG5cbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZXJzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "authors",
        "id",
        "firstName",
        "lastName",
        "posts",
        "authorId",
        "title",
        "votes",
        "resolvers",
        "Query",
        "console",
        "log",
        "author",
        "_",
        "authorReq",
        "filter",
        "Mutation",
        "createPost",
        "newPost",
        "push",
        "post",
        "result",
        "success"
      ],
      "mappings": ";;;;;;AAAA;AAEA,IAAMA,OAAO,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,SAAS,EAAE,KAApB;AAA2BC,EAAAA,QAAQ,EAAE;AAArC,CADc,EAEd;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,SAAS,EAAE,QAApB;AAA8BC,EAAAA,QAAQ,EAAE;AAAxC,CAFc,EAGd;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,SAAS,EAAE,SAApB;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CAHc,CAAhB;AAMA,IAAMC,MAAK,GAAG,CACZ;AACDH,EAAAA,EAAE,EAAE,CADH;AACMI,EAAAA,QAAQ,EAAE,CADhB;AACmBC,EAAAA,KAAK,EAAE,yBAD1B;AACqDC,EAAAA,KAAK,EAAE;AAD5D,CADY,EAIZ;AACDN,EAAAA,EAAE,EAAE,CADH;AACMI,EAAAA,QAAQ,EAAE,CADhB;AACmBC,EAAAA,KAAK,EAAE,mBAD1B;AAC+CC,EAAAA,KAAK,EAAE;AADtD,CAJY,EAOZ;AACDN,EAAAA,EAAE,EAAE,CADH;AACMI,EAAAA,QAAQ,EAAE,CADhB;AACmBC,EAAAA,KAAK,EAAE,kBAD1B;AAC8CC,EAAAA,KAAK,EAAE;AADrD,CAPY,EAUZ;AACDN,EAAAA,EAAE,EAAE,CADH;AACMI,EAAAA,QAAQ,EAAE,CADhB;AACmBC,EAAAA,KAAK,EAAE,mBAD1B;AAC+CC,EAAAA,KAAK,EAAE;AADtD,CAVY,CAAd;AAeA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLL,IAAAA,KAAK,EAAE,iBAAM;AACXM,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,MAA3B;AACA,aAAOA,MAAP;AACD,KAJI;AAKLQ,IAAAA,MAAM,EAAE,gBAACC,CAAD,QAAe;AAAA,UAATZ,EAAS,QAATA,EAAS;AACrB,UAAMa,SAAS,GAAGd,OAAO,CAACe,MAAR,CAAe,UAACH,MAAD,EAAY;AAC3CF,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCC,MAAM,CAACX,EAA3C;AACA,eAAOW,MAAM,CAACX,EAAP,KAAcA,EAArB;AACP,OAHuB,CAAlB;AAIAS,MAAAA,OAAO,CAACC,GAAR,4BAAgCG,SAAhC,mBAAkDb,EAAlD;AACA,aAAOa,SAAS,CAAC,CAAD,CAAhB;AACD;AAZI,GADS;AAgBhBE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,oBAACJ,CAAD,EAAIK,OAAJ,EAAgB;AAC1Bd,MAAAA,MAAK,CAACe,IAAN,CAAWD,OAAO,CAACE,IAAnB;;AACA,UAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AADI,OAAf;AAGA,aAAOD,MAAP;AACD;AAPO;AAhBM,CAAlB;eA6Beb,S",
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourcesContent": [
        "// import { find } from \"lodash\";\n\nconst authors = [\n  { id: 1, firstName: 'Tom', lastName: 'Coleman' },\n  { id: 2, firstName: 'Sashko', lastName: 'Stubailo' },\n  { id: 3, firstName: 'Mikhail', lastName: 'Novikov' },\n];\n\nconst posts = [\n  {\n id: 1, authorId: 1, title: 'Introduction to GraphQL', votes: 2 \n},\n  {\n id: 2, authorId: 2, title: 'Welcome to Meteor', votes: 3 \n},\n  {\n id: 3, authorId: 2, title: 'Advanced GraphQL', votes: 1 \n},\n  {\n id: 4, authorId: 3, title: 'Launchpad is Cool', votes: 7 \n},\n];\n\nconst resolvers = {\n  Query: {\n    posts: () => {\n      console.log('query posts', posts);\n      return posts;\n    },\n    author: (_, { id }) => {\n      const authorReq = authors.filter((author) => {\n        console.log('query authors.filter', author.id);\n        return author.id === id; \n});\n      console.log(`query authorReq: ${authorReq}, id: ${id}`);\n      return authorReq[0];\n    },\n  },\n\n  Mutation: {\n    createPost: (_, newPost) => {\n      posts.push(newPost.post);\n      const result = {\n        success: true,\n      };\n      return result;\n    },\n  },\n\n};\n\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571816781081
  },
  "{\"sourceRoot\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"filename\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\mongodb\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\mongodb\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\mongodb\\db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\mongodb\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\mongodb",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// \"mongodb+srv://dbprog:<password>@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority\";\nvar password = process.env.DBUSER_PASS;\nvar uri = \"mongodb+srv://dbprog:\".concat(password, \"@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority\");\nvar _default = uri;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInBhc3N3b3JkIiwicHJvY2VzcyIsImVudiIsIkRCVVNFUl9QQVNTIiwidXJpIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFdBQTdCO0FBRUEsSUFBTUMsR0FBRyxrQ0FBMkJKLFFBQTNCLGlFQUFUO2VBRWVJLEciLCJzb3VyY2VSb290IjoiRTpcXFByb2plY3RKU1xcR3JhcGhRTFxcY3J1ZGFwcFxcYmFja2VuZFxcbW9uZ29kYiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFwibW9uZ29kYitzcnY6Ly9kYnByb2c6PHBhc3N3b3JkPkBjbHVzdGVyMC15eXdjay5tb25nb2RiLm5ldC90ZXN0P3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiO1xuY29uc3QgcGFzc3dvcmQgPSBwcm9jZXNzLmVudi5EQlVTRVJfUEFTUztcblxuY29uc3QgdXJpID0gYG1vbmdvZGIrc3J2Oi8vZGJwcm9nOiR7cGFzc3dvcmR9QGNsdXN0ZXIwLXl5d2NrLm1vbmdvZGIubmV0L3Rlc3Q/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5YDtcblxuZXhwb3J0IGRlZmF1bHQgdXJpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "password",
        "process",
        "env",
        "DBUSER_PASS",
        "uri"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA7B;AAEA,IAAMC,GAAG,kCAA2BJ,QAA3B,iEAAT;eAEeI,G",
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\mongodb",
      "sourcesContent": [
        "// \"mongodb+srv://dbprog:<password>@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority\";\nconst password = process.env.DBUSER_PASS;\n\nconst uri = `mongodb+srv://dbprog:${password}@cluster0-yywck.mongodb.net/test?retryWrites=true&w=majority`;\n\nexport default uri;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571988208052
  },
  "{\"sourceRoot\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"filename\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\graphql\\\\typedef.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql\\typedef.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql\\typedef.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql\\typedef.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql",
        "sourceFileName": "typedef.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\ntype User {\\n  id: Int!\\n  firstName: String\\n  lastName: String\\n  posts: [Post]!\\n}\\n\\ntype Post {\\n  id: Int!\\n  title: String\\n  userId: String\\n  content: String\\n  votes: Int\\n  comments: [Comment]!\\n}\\n\\ntype Comment {\\n  id: Int!\\n  userId: String!\\n  content: String\\n  postId: String!\\n}\\n\\n# input PostData {\\n#   id: Int!\\n#   title: String\\n#   userId: String\\n#   votes: Int\\n# }\\n\\n# type Response {\\n#   success: Boolean\\n# }\\n\\ntype Query {\\n  user(id: Int!): User\\n  users: [User]!\\n  post(id: Int!): Post\\n  posts: [Post]!\\n  commentsByPost(id: Int!): [Comment]!\\n}\\n\\ntype Mutation {\\n  createPost(id: Int!, title: String, userId: String!, content: String): Post\\n  createComment(id: Int!, userId: String!, postId: String!, content: String): Comment\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar typeDefs = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = typeDefs;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVkZWYuanMiXSwibmFtZXMiOlsidHlwZURlZnMiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxRQUFRLE9BQUdDLHdCQUFILG9CQUFkO2VBa0RlRCxRIiwic291cmNlUm9vdCI6IkU6XFxQcm9qZWN0SlNcXEdyYXBoUUxcXGNydWRhcHBcXGJhY2tlbmRcXGdyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcblxudHlwZSBVc2VyIHtcbiAgaWQ6IEludCFcbiAgZmlyc3ROYW1lOiBTdHJpbmdcbiAgbGFzdE5hbWU6IFN0cmluZ1xuICBwb3N0czogW1Bvc3RdIVxufVxuXG50eXBlIFBvc3Qge1xuICBpZDogSW50IVxuICB0aXRsZTogU3RyaW5nXG4gIHVzZXJJZDogU3RyaW5nXG4gIGNvbnRlbnQ6IFN0cmluZ1xuICB2b3RlczogSW50XG4gIGNvbW1lbnRzOiBbQ29tbWVudF0hXG59XG5cbnR5cGUgQ29tbWVudCB7XG4gIGlkOiBJbnQhXG4gIHVzZXJJZDogU3RyaW5nIVxuICBjb250ZW50OiBTdHJpbmdcbiAgcG9zdElkOiBTdHJpbmchXG59XG5cbiMgaW5wdXQgUG9zdERhdGEge1xuIyAgIGlkOiBJbnQhXG4jICAgdGl0bGU6IFN0cmluZ1xuIyAgIHVzZXJJZDogU3RyaW5nXG4jICAgdm90ZXM6IEludFxuIyB9XG5cbiMgdHlwZSBSZXNwb25zZSB7XG4jICAgc3VjY2VzczogQm9vbGVhblxuIyB9XG5cbnR5cGUgUXVlcnkge1xuICB1c2VyKGlkOiBJbnQhKTogVXNlclxuICB1c2VyczogW1VzZXJdIVxuICBwb3N0KGlkOiBJbnQhKTogUG9zdFxuICBwb3N0czogW1Bvc3RdIVxuICBjb21tZW50c0J5UG9zdChpZDogSW50ISk6IFtDb21tZW50XSFcbn1cblxudHlwZSBNdXRhdGlvbiB7XG4gIGNyZWF0ZVBvc3QoaWQ6IEludCEsIHRpdGxlOiBTdHJpbmcsIHVzZXJJZDogU3RyaW5nISwgY29udGVudDogU3RyaW5nKTogUG9zdFxuICBjcmVhdGVDb21tZW50KGlkOiBJbnQhLCB1c2VySWQ6IFN0cmluZyEsIHBvc3RJZDogU3RyaW5nISwgY29udGVudDogU3RyaW5nKTogQ29tbWVudFxufVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgdHlwZURlZnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "typedef.js"
      ],
      "names": [
        "typeDefs",
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,OAAGC,wBAAH,oBAAd;eAkDeD,Q",
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nconst typeDefs = gql`\n\ntype User {\n  id: Int!\n  firstName: String\n  lastName: String\n  posts: [Post]!\n}\n\ntype Post {\n  id: Int!\n  title: String\n  userId: String\n  content: String\n  votes: Int\n  comments: [Comment]!\n}\n\ntype Comment {\n  id: Int!\n  userId: String!\n  content: String\n  postId: String!\n}\n\n# input PostData {\n#   id: Int!\n#   title: String\n#   userId: String\n#   votes: Int\n# }\n\n# type Response {\n#   success: Boolean\n# }\n\ntype Query {\n  user(id: Int!): User\n  users: [User]!\n  post(id: Int!): Post\n  posts: [Post]!\n  commentsByPost(id: Int!): [Comment]!\n}\n\ntype Mutation {\n  createPost(id: Int!, title: String, userId: String!, content: String): Post\n  createComment(id: Int!, userId: String!, postId: String!, content: String): Comment\n}\n`;\n\nexport default typeDefs;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571984164699
  },
  "{\"sourceRoot\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"filename\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\\\\graphql\\\\resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\ProjectJS\\\\GraphQL\\\\crudapp\\\\backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql\\resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\ProjectJS\\GraphQL\\crudapp\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql\\resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql\\resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// import { find } from \"lodash\";\nvar usersMock = [{\n  id: 1,\n  firstName: 'Tom',\n  lastName: 'Coleman'\n}, {\n  id: 2,\n  firstName: 'Sashko',\n  lastName: 'Stubailo'\n}, {\n  id: 3,\n  firstName: 'Mikhail',\n  lastName: 'Novikov'\n}];\nvar postsMock = [{\n  id: 1,\n  usersId: 1,\n  title: 'Introduction to GraphQL',\n  content: 'content Introduction to GraphQL'\n}, {\n  id: 2,\n  usersId: 2,\n  title: 'Welcome to Meteor',\n  content: 'content Welcome to Meteor'\n}, {\n  id: 3,\n  usersId: 2,\n  title: 'Advanced GraphQL',\n  content: 'content Advanced GraphQL'\n}, {\n  id: 4,\n  usersId: 3,\n  title: 'Launchpad is Cool',\n  content: 'content Launchpad is Cool'\n}];\nvar commentsMock = [{\n  id: 1,\n  usersId: 1,\n  postsId: 1,\n  content: 'Comment Introduction to GraphQL'\n}, {\n  id: 2,\n  usersId: 2,\n  postsId: 2,\n  content: 'Comment Welcome to Meteor'\n}, {\n  id: 3,\n  usersId: 2,\n  postsId: 2,\n  content: 'Comment Advanced GraphQL'\n}, {\n  id: 4,\n  usersId: 3,\n  postsId: 3,\n  content: 'Comment Launchpad is Cool'\n}];\nvar resolvers = {\n  Query: {\n    user: function user(_, _ref) {\n      var id = _ref.id;\n      var userReq = usersMock.filter(function (user) {\n        return user.id === id;\n      });\n      console.log(\"query UserReq: \".concat(userReq, \", id: \").concat(id));\n      return userReq[0];\n    },\n    users: function users() {\n      console.log('query users', usersMock);\n      return usersMock;\n    },\n    post: function post(_, _ref2) {\n      var id = _ref2.id;\n      var postReq = postsMock.filter(function (post) {\n        return post.id === id;\n      });\n      console.log(\"query PostReq: \".concat(postReq, \", id: \").concat(id));\n      return postReq[0];\n    },\n    posts: function posts() {\n      console.log('query posts', postsMock);\n      return postsMock;\n    },\n    commentsByPost: function commentsByPost(_, _ref3) {\n      var id = _ref3.id;\n      var commentsReq = commentsMock.filter(function (comments) {\n        return comments.postId === id;\n      }); // console.log('query users.filter', comments.id);\n\n      console.log(\"query CommentsReq: \".concat(commentsReq, \", id: \").concat(id));\n      return commentsReq;\n    }\n  },\n  Mutation: {\n    createPost: function createPost(_, _ref4) {\n      var id = _ref4.id,\n          title = _ref4.title,\n          userId = _ref4.userId,\n          content = _ref4.content;\n      var newPost = {\n        id: id,\n        title: title,\n        userId: userId,\n        content: content\n      };\n      postsMock.push(newPost);\n      var len = postsMock.length;\n      var result = len === 0 ? {} : postsMock[len - 1];\n      return result;\n    },\n    createComment: function createComment(_, _ref5) {\n      var id = _ref5.id,\n          userId = _ref5.userId,\n          postId = _ref5.postId,\n          content = _ref5.content;\n      var newComment = {\n        id: id,\n        userId: userId,\n        postId: postId,\n        content: content\n      };\n      commentsMock.push(newComment);\n      var len = commentsMock.length;\n      var result = len === 0 ? {} : commentsMock[len - 1];\n      return result;\n    }\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJ1c2Vyc01vY2siLCJpZCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicG9zdHNNb2NrIiwidXNlcnNJZCIsInRpdGxlIiwiY29udGVudCIsImNvbW1lbnRzTW9jayIsInBvc3RzSWQiLCJyZXNvbHZlcnMiLCJRdWVyeSIsInVzZXIiLCJfIiwidXNlclJlcSIsImZpbHRlciIsImNvbnNvbGUiLCJsb2ciLCJ1c2VycyIsInBvc3QiLCJwb3N0UmVxIiwicG9zdHMiLCJjb21tZW50c0J5UG9zdCIsImNvbW1lbnRzUmVxIiwiY29tbWVudHMiLCJwb3N0SWQiLCJNdXRhdGlvbiIsImNyZWF0ZVBvc3QiLCJ1c2VySWQiLCJuZXdQb3N0IiwicHVzaCIsImxlbiIsImxlbmd0aCIsInJlc3VsdCIsImNyZWF0ZUNvbW1lbnQiLCJuZXdDb21tZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUVBLElBQU1BLFNBQVMsR0FBRyxDQUNoQjtBQUFFQyxFQUFBQSxFQUFFLEVBQUUsQ0FBTjtBQUFTQyxFQUFBQSxTQUFTLEVBQUUsS0FBcEI7QUFBMkJDLEVBQUFBLFFBQVEsRUFBRTtBQUFyQyxDQURnQixFQUVoQjtBQUFFRixFQUFBQSxFQUFFLEVBQUUsQ0FBTjtBQUFTQyxFQUFBQSxTQUFTLEVBQUUsUUFBcEI7QUFBOEJDLEVBQUFBLFFBQVEsRUFBRTtBQUF4QyxDQUZnQixFQUdoQjtBQUFFRixFQUFBQSxFQUFFLEVBQUUsQ0FBTjtBQUFTQyxFQUFBQSxTQUFTLEVBQUUsU0FBcEI7QUFBK0JDLEVBQUFBLFFBQVEsRUFBRTtBQUF6QyxDQUhnQixDQUFsQjtBQU1BLElBQU1DLFNBQVMsR0FBRyxDQUNoQjtBQUNFSCxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUNTSSxFQUFBQSxPQUFPLEVBQUUsQ0FEbEI7QUFDcUJDLEVBQUFBLEtBQUssRUFBRSx5QkFENUI7QUFDdURDLEVBQUFBLE9BQU8sRUFBRTtBQURoRSxDQURnQixFQUloQjtBQUNFTixFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUNTSSxFQUFBQSxPQUFPLEVBQUUsQ0FEbEI7QUFDcUJDLEVBQUFBLEtBQUssRUFBRSxtQkFENUI7QUFDaURDLEVBQUFBLE9BQU8sRUFBRTtBQUQxRCxDQUpnQixFQU9oQjtBQUNFTixFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUNTSSxFQUFBQSxPQUFPLEVBQUUsQ0FEbEI7QUFDcUJDLEVBQUFBLEtBQUssRUFBRSxrQkFENUI7QUFDZ0RDLEVBQUFBLE9BQU8sRUFBRTtBQUR6RCxDQVBnQixFQVVoQjtBQUNFTixFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUNTSSxFQUFBQSxPQUFPLEVBQUUsQ0FEbEI7QUFDcUJDLEVBQUFBLEtBQUssRUFBRSxtQkFENUI7QUFDaURDLEVBQUFBLE9BQU8sRUFBRTtBQUQxRCxDQVZnQixDQUFsQjtBQWVBLElBQU1DLFlBQVksR0FBRyxDQUNuQjtBQUNFUCxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUNTSSxFQUFBQSxPQUFPLEVBQUUsQ0FEbEI7QUFDcUJJLEVBQUFBLE9BQU8sRUFBRSxDQUQ5QjtBQUNpQ0YsRUFBQUEsT0FBTyxFQUFFO0FBRDFDLENBRG1CLEVBSW5CO0FBQ0VOLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBQ1NJLEVBQUFBLE9BQU8sRUFBRSxDQURsQjtBQUNxQkksRUFBQUEsT0FBTyxFQUFFLENBRDlCO0FBQ2lDRixFQUFBQSxPQUFPLEVBQUU7QUFEMUMsQ0FKbUIsRUFPbkI7QUFDRU4sRUFBQUEsRUFBRSxFQUFFLENBRE47QUFDU0ksRUFBQUEsT0FBTyxFQUFFLENBRGxCO0FBQ3FCSSxFQUFBQSxPQUFPLEVBQUUsQ0FEOUI7QUFDaUNGLEVBQUFBLE9BQU8sRUFBRTtBQUQxQyxDQVBtQixFQVVuQjtBQUNFTixFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUNTSSxFQUFBQSxPQUFPLEVBQUUsQ0FEbEI7QUFDcUJJLEVBQUFBLE9BQU8sRUFBRSxDQUQ5QjtBQUNpQ0YsRUFBQUEsT0FBTyxFQUFFO0FBRDFDLENBVm1CLENBQXJCO0FBZUEsSUFBTUcsU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsSUFBSSxFQUFFLGNBQUNDLENBQUQsUUFBZTtBQUFBLFVBQVRaLEVBQVMsUUFBVEEsRUFBUztBQUNuQixVQUFNYSxPQUFPLEdBQUdkLFNBQVMsQ0FBQ2UsTUFBVixDQUFpQixVQUFDSCxJQUFEO0FBQUEsZUFBVUEsSUFBSSxDQUFDWCxFQUFMLEtBQVlBLEVBQXRCO0FBQUEsT0FBakIsQ0FBaEI7QUFDQWUsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLDBCQUE4QkgsT0FBOUIsbUJBQThDYixFQUE5QztBQUNBLGFBQU9hLE9BQU8sQ0FBQyxDQUFELENBQWQ7QUFDRCxLQUxJO0FBTUxJLElBQUFBLEtBQUssRUFBRSxpQkFBTTtBQUNYRixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaLEVBQTJCakIsU0FBM0I7QUFDQSxhQUFPQSxTQUFQO0FBQ0QsS0FUSTtBQVVMbUIsSUFBQUEsSUFBSSxFQUFFLGNBQUNOLENBQUQsU0FBZTtBQUFBLFVBQVRaLEVBQVMsU0FBVEEsRUFBUztBQUNuQixVQUFNbUIsT0FBTyxHQUFHaEIsU0FBUyxDQUFDVyxNQUFWLENBQWlCLFVBQUNJLElBQUQ7QUFBQSxlQUFVQSxJQUFJLENBQUNsQixFQUFMLEtBQVlBLEVBQXRCO0FBQUEsT0FBakIsQ0FBaEI7QUFDQWUsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLDBCQUE4QkcsT0FBOUIsbUJBQThDbkIsRUFBOUM7QUFDQSxhQUFPbUIsT0FBTyxDQUFDLENBQUQsQ0FBZDtBQUNELEtBZEk7QUFlTEMsSUFBQUEsS0FBSyxFQUFFLGlCQUFNO0FBQ1hMLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQVosRUFBMkJiLFNBQTNCO0FBQ0EsYUFBT0EsU0FBUDtBQUNELEtBbEJJO0FBbUJMa0IsSUFBQUEsY0FBYyxFQUFFLHdCQUFDVCxDQUFELFNBQWU7QUFBQSxVQUFUWixFQUFTLFNBQVRBLEVBQVM7QUFDN0IsVUFBTXNCLFdBQVcsR0FBR2YsWUFBWSxDQUFDTyxNQUFiLENBQW9CLFVBQUNTLFFBQUQ7QUFBQSxlQUFjQSxRQUFRLENBQUNDLE1BQVQsS0FBb0J4QixFQUFsQztBQUFBLE9BQXBCLENBQXBCLENBRDZCLENBRTdCOztBQUNBZSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsOEJBQWtDTSxXQUFsQyxtQkFBc0R0QixFQUF0RDtBQUNBLGFBQU9zQixXQUFQO0FBQ0Q7QUF4QkksR0FEUztBQTRCaEJHLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxVQUFVLEVBQUUsb0JBQUNkLENBQUQsU0FFTjtBQUFBLFVBREpaLEVBQ0ksU0FESkEsRUFDSTtBQUFBLFVBREFLLEtBQ0EsU0FEQUEsS0FDQTtBQUFBLFVBRE9zQixNQUNQLFNBRE9BLE1BQ1A7QUFBQSxVQURlckIsT0FDZixTQURlQSxPQUNmO0FBQ0osVUFBTXNCLE9BQU8sR0FBRztBQUNkNUIsUUFBQUEsRUFBRSxFQUFGQSxFQURjO0FBQ1ZLLFFBQUFBLEtBQUssRUFBTEEsS0FEVTtBQUNIc0IsUUFBQUEsTUFBTSxFQUFOQSxNQURHO0FBQ0tyQixRQUFBQSxPQUFPLEVBQVBBO0FBREwsT0FBaEI7QUFHQUgsTUFBQUEsU0FBUyxDQUFDMEIsSUFBVixDQUFlRCxPQUFmO0FBQ0EsVUFBTUUsR0FBRyxHQUFHM0IsU0FBUyxDQUFDNEIsTUFBdEI7QUFDQSxVQUFNQyxNQUFNLEdBQUdGLEdBQUcsS0FBSyxDQUFSLEdBQVksRUFBWixHQUFpQjNCLFNBQVMsQ0FBQzJCLEdBQUcsR0FBRyxDQUFQLENBQXpDO0FBQ0EsYUFBT0UsTUFBUDtBQUNELEtBWE87QUFZUkMsSUFBQUEsYUFBYSxFQUFFLHVCQUFDckIsQ0FBRCxTQUVUO0FBQUEsVUFESlosRUFDSSxTQURKQSxFQUNJO0FBQUEsVUFEQTJCLE1BQ0EsU0FEQUEsTUFDQTtBQUFBLFVBRFFILE1BQ1IsU0FEUUEsTUFDUjtBQUFBLFVBRGdCbEIsT0FDaEIsU0FEZ0JBLE9BQ2hCO0FBQ0osVUFBTTRCLFVBQVUsR0FBRztBQUNqQmxDLFFBQUFBLEVBQUUsRUFBRkEsRUFEaUI7QUFDYjJCLFFBQUFBLE1BQU0sRUFBTkEsTUFEYTtBQUNMSCxRQUFBQSxNQUFNLEVBQU5BLE1BREs7QUFDR2xCLFFBQUFBLE9BQU8sRUFBUEE7QUFESCxPQUFuQjtBQUdBQyxNQUFBQSxZQUFZLENBQUNzQixJQUFiLENBQWtCSyxVQUFsQjtBQUNBLFVBQU1KLEdBQUcsR0FBR3ZCLFlBQVksQ0FBQ3dCLE1BQXpCO0FBQ0EsVUFBTUMsTUFBTSxHQUFHRixHQUFHLEtBQUssQ0FBUixHQUFZLEVBQVosR0FBaUJ2QixZQUFZLENBQUN1QixHQUFHLEdBQUcsQ0FBUCxDQUE1QztBQUNBLGFBQU9FLE1BQVA7QUFDRDtBQXRCTztBQTVCTSxDQUFsQjtlQXdEZXZCLFMiLCJzb3VyY2VSb290IjoiRTpcXFByb2plY3RKU1xcR3JhcGhRTFxcY3J1ZGFwcFxcYmFja2VuZFxcZ3JhcGhxbCIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IGZpbmQgfSBmcm9tIFwibG9kYXNoXCI7XG5cbmNvbnN0IHVzZXJzTW9jayA9IFtcbiAgeyBpZDogMSwgZmlyc3ROYW1lOiAnVG9tJywgbGFzdE5hbWU6ICdDb2xlbWFuJyB9LFxuICB7IGlkOiAyLCBmaXJzdE5hbWU6ICdTYXNoa28nLCBsYXN0TmFtZTogJ1N0dWJhaWxvJyB9LFxuICB7IGlkOiAzLCBmaXJzdE5hbWU6ICdNaWtoYWlsJywgbGFzdE5hbWU6ICdOb3Zpa292JyB9LFxuXTtcblxuY29uc3QgcG9zdHNNb2NrID0gW1xuICB7XG4gICAgaWQ6IDEsIHVzZXJzSWQ6IDEsIHRpdGxlOiAnSW50cm9kdWN0aW9uIHRvIEdyYXBoUUwnLCBjb250ZW50OiAnY29udGVudCBJbnRyb2R1Y3Rpb24gdG8gR3JhcGhRTCcsXG4gIH0sXG4gIHtcbiAgICBpZDogMiwgdXNlcnNJZDogMiwgdGl0bGU6ICdXZWxjb21lIHRvIE1ldGVvcicsIGNvbnRlbnQ6ICdjb250ZW50IFdlbGNvbWUgdG8gTWV0ZW9yJyxcbiAgfSxcbiAge1xuICAgIGlkOiAzLCB1c2Vyc0lkOiAyLCB0aXRsZTogJ0FkdmFuY2VkIEdyYXBoUUwnLCBjb250ZW50OiAnY29udGVudCBBZHZhbmNlZCBHcmFwaFFMJyxcbiAgfSxcbiAge1xuICAgIGlkOiA0LCB1c2Vyc0lkOiAzLCB0aXRsZTogJ0xhdW5jaHBhZCBpcyBDb29sJywgY29udGVudDogJ2NvbnRlbnQgTGF1bmNocGFkIGlzIENvb2wnLFxuICB9LFxuXTtcblxuY29uc3QgY29tbWVudHNNb2NrID0gW1xuICB7XG4gICAgaWQ6IDEsIHVzZXJzSWQ6IDEsIHBvc3RzSWQ6IDEsIGNvbnRlbnQ6ICdDb21tZW50IEludHJvZHVjdGlvbiB0byBHcmFwaFFMJyxcbiAgfSxcbiAge1xuICAgIGlkOiAyLCB1c2Vyc0lkOiAyLCBwb3N0c0lkOiAyLCBjb250ZW50OiAnQ29tbWVudCBXZWxjb21lIHRvIE1ldGVvcicsXG4gIH0sXG4gIHtcbiAgICBpZDogMywgdXNlcnNJZDogMiwgcG9zdHNJZDogMiwgY29udGVudDogJ0NvbW1lbnQgQWR2YW5jZWQgR3JhcGhRTCcsXG4gIH0sXG4gIHtcbiAgICBpZDogNCwgdXNlcnNJZDogMywgcG9zdHNJZDogMywgY29udGVudDogJ0NvbW1lbnQgTGF1bmNocGFkIGlzIENvb2wnLFxuICB9LFxuXTtcblxuY29uc3QgcmVzb2x2ZXJzID0ge1xuICBRdWVyeToge1xuICAgIHVzZXI6IChfLCB7IGlkIH0pID0+IHtcbiAgICAgIGNvbnN0IHVzZXJSZXEgPSB1c2Vyc01vY2suZmlsdGVyKCh1c2VyKSA9PiB1c2VyLmlkID09PSBpZCk7XG4gICAgICBjb25zb2xlLmxvZyhgcXVlcnkgVXNlclJlcTogJHt1c2VyUmVxfSwgaWQ6ICR7aWR9YCk7XG4gICAgICByZXR1cm4gdXNlclJlcVswXTtcbiAgICB9LFxuICAgIHVzZXJzOiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygncXVlcnkgdXNlcnMnLCB1c2Vyc01vY2spO1xuICAgICAgcmV0dXJuIHVzZXJzTW9jaztcbiAgICB9LFxuICAgIHBvc3Q6IChfLCB7IGlkIH0pID0+IHtcbiAgICAgIGNvbnN0IHBvc3RSZXEgPSBwb3N0c01vY2suZmlsdGVyKChwb3N0KSA9PiBwb3N0LmlkID09PSBpZCk7XG4gICAgICBjb25zb2xlLmxvZyhgcXVlcnkgUG9zdFJlcTogJHtwb3N0UmVxfSwgaWQ6ICR7aWR9YCk7XG4gICAgICByZXR1cm4gcG9zdFJlcVswXTtcbiAgICB9LFxuICAgIHBvc3RzOiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygncXVlcnkgcG9zdHMnLCBwb3N0c01vY2spO1xuICAgICAgcmV0dXJuIHBvc3RzTW9jaztcbiAgICB9LFxuICAgIGNvbW1lbnRzQnlQb3N0OiAoXywgeyBpZCB9KSA9PiB7XG4gICAgICBjb25zdCBjb21tZW50c1JlcSA9IGNvbW1lbnRzTW9jay5maWx0ZXIoKGNvbW1lbnRzKSA9PiBjb21tZW50cy5wb3N0SWQgPT09IGlkKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdxdWVyeSB1c2Vycy5maWx0ZXInLCBjb21tZW50cy5pZCk7XG4gICAgICBjb25zb2xlLmxvZyhgcXVlcnkgQ29tbWVudHNSZXE6ICR7Y29tbWVudHNSZXF9LCBpZDogJHtpZH1gKTtcbiAgICAgIHJldHVybiBjb21tZW50c1JlcTtcbiAgICB9LFxuICB9LFxuXG4gIE11dGF0aW9uOiB7XG4gICAgY3JlYXRlUG9zdDogKF8sIHtcbiAgICAgIGlkLCB0aXRsZSwgdXNlcklkLCBjb250ZW50LFxuICAgIH0pID0+IHtcbiAgICAgIGNvbnN0IG5ld1Bvc3QgPSB7XG4gICAgICAgIGlkLCB0aXRsZSwgdXNlcklkLCBjb250ZW50LFxuICAgICAgfTtcbiAgICAgIHBvc3RzTW9jay5wdXNoKG5ld1Bvc3QpO1xuICAgICAgY29uc3QgbGVuID0gcG9zdHNNb2NrLmxlbmd0aDtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGxlbiA9PT0gMCA/IHt9IDogcG9zdHNNb2NrW2xlbiAtIDFdO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIGNyZWF0ZUNvbW1lbnQ6IChfLCB7XG4gICAgICBpZCwgdXNlcklkLCBwb3N0SWQsIGNvbnRlbnQsXG4gICAgfSkgPT4ge1xuICAgICAgY29uc3QgbmV3Q29tbWVudCA9IHtcbiAgICAgICAgaWQsIHVzZXJJZCwgcG9zdElkLCBjb250ZW50LFxuICAgICAgfTtcbiAgICAgIGNvbW1lbnRzTW9jay5wdXNoKG5ld0NvbW1lbnQpO1xuICAgICAgY29uc3QgbGVuID0gY29tbWVudHNNb2NrLmxlbmd0aDtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGxlbiA9PT0gMCA/IHt9IDogY29tbWVudHNNb2NrW2xlbiAtIDFdO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICB9LFxuXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVycztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "usersMock",
        "id",
        "firstName",
        "lastName",
        "postsMock",
        "usersId",
        "title",
        "content",
        "commentsMock",
        "postsId",
        "resolvers",
        "Query",
        "user",
        "_",
        "userReq",
        "filter",
        "console",
        "log",
        "users",
        "post",
        "postReq",
        "posts",
        "commentsByPost",
        "commentsReq",
        "comments",
        "postId",
        "Mutation",
        "createPost",
        "userId",
        "newPost",
        "push",
        "len",
        "length",
        "result",
        "createComment",
        "newComment"
      ],
      "mappings": ";;;;;;AAAA;AAEA,IAAMA,SAAS,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,SAAS,EAAE,KAApB;AAA2BC,EAAAA,QAAQ,EAAE;AAArC,CADgB,EAEhB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,SAAS,EAAE,QAApB;AAA8BC,EAAAA,QAAQ,EAAE;AAAxC,CAFgB,EAGhB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,SAAS,EAAE,SAApB;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CAHgB,CAAlB;AAMA,IAAMC,SAAS,GAAG,CAChB;AACEH,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBC,EAAAA,KAAK,EAAE,yBAD5B;AACuDC,EAAAA,OAAO,EAAE;AADhE,CADgB,EAIhB;AACEN,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBC,EAAAA,KAAK,EAAE,mBAD5B;AACiDC,EAAAA,OAAO,EAAE;AAD1D,CAJgB,EAOhB;AACEN,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBC,EAAAA,KAAK,EAAE,kBAD5B;AACgDC,EAAAA,OAAO,EAAE;AADzD,CAPgB,EAUhB;AACEN,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBC,EAAAA,KAAK,EAAE,mBAD5B;AACiDC,EAAAA,OAAO,EAAE;AAD1D,CAVgB,CAAlB;AAeA,IAAMC,YAAY,GAAG,CACnB;AACEP,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBI,EAAAA,OAAO,EAAE,CAD9B;AACiCF,EAAAA,OAAO,EAAE;AAD1C,CADmB,EAInB;AACEN,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBI,EAAAA,OAAO,EAAE,CAD9B;AACiCF,EAAAA,OAAO,EAAE;AAD1C,CAJmB,EAOnB;AACEN,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBI,EAAAA,OAAO,EAAE,CAD9B;AACiCF,EAAAA,OAAO,EAAE;AAD1C,CAPmB,EAUnB;AACEN,EAAAA,EAAE,EAAE,CADN;AACSI,EAAAA,OAAO,EAAE,CADlB;AACqBI,EAAAA,OAAO,EAAE,CAD9B;AACiCF,EAAAA,OAAO,EAAE;AAD1C,CAVmB,CAArB;AAeA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,cAACC,CAAD,QAAe;AAAA,UAATZ,EAAS,QAATA,EAAS;AACnB,UAAMa,OAAO,GAAGd,SAAS,CAACe,MAAV,CAAiB,UAACH,IAAD;AAAA,eAAUA,IAAI,CAACX,EAAL,KAAYA,EAAtB;AAAA,OAAjB,CAAhB;AACAe,MAAAA,OAAO,CAACC,GAAR,0BAA8BH,OAA9B,mBAA8Cb,EAA9C;AACA,aAAOa,OAAO,CAAC,CAAD,CAAd;AACD,KALI;AAMLI,IAAAA,KAAK,EAAE,iBAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BjB,SAA3B;AACA,aAAOA,SAAP;AACD,KATI;AAULmB,IAAAA,IAAI,EAAE,cAACN,CAAD,SAAe;AAAA,UAATZ,EAAS,SAATA,EAAS;AACnB,UAAMmB,OAAO,GAAGhB,SAAS,CAACW,MAAV,CAAiB,UAACI,IAAD;AAAA,eAAUA,IAAI,CAAClB,EAAL,KAAYA,EAAtB;AAAA,OAAjB,CAAhB;AACAe,MAAAA,OAAO,CAACC,GAAR,0BAA8BG,OAA9B,mBAA8CnB,EAA9C;AACA,aAAOmB,OAAO,CAAC,CAAD,CAAd;AACD,KAdI;AAeLC,IAAAA,KAAK,EAAE,iBAAM;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bb,SAA3B;AACA,aAAOA,SAAP;AACD,KAlBI;AAmBLkB,IAAAA,cAAc,EAAE,wBAACT,CAAD,SAAe;AAAA,UAATZ,EAAS,SAATA,EAAS;AAC7B,UAAMsB,WAAW,GAAGf,YAAY,CAACO,MAAb,CAAoB,UAACS,QAAD;AAAA,eAAcA,QAAQ,CAACC,MAAT,KAAoBxB,EAAlC;AAAA,OAApB,CAApB,CAD6B,CAE7B;;AACAe,MAAAA,OAAO,CAACC,GAAR,8BAAkCM,WAAlC,mBAAsDtB,EAAtD;AACA,aAAOsB,WAAP;AACD;AAxBI,GADS;AA4BhBG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,oBAACd,CAAD,SAEN;AAAA,UADJZ,EACI,SADJA,EACI;AAAA,UADAK,KACA,SADAA,KACA;AAAA,UADOsB,MACP,SADOA,MACP;AAAA,UADerB,OACf,SADeA,OACf;AACJ,UAAMsB,OAAO,GAAG;AACd5B,QAAAA,EAAE,EAAFA,EADc;AACVK,QAAAA,KAAK,EAALA,KADU;AACHsB,QAAAA,MAAM,EAANA,MADG;AACKrB,QAAAA,OAAO,EAAPA;AADL,OAAhB;AAGAH,MAAAA,SAAS,CAAC0B,IAAV,CAAeD,OAAf;AACA,UAAME,GAAG,GAAG3B,SAAS,CAAC4B,MAAtB;AACA,UAAMC,MAAM,GAAGF,GAAG,KAAK,CAAR,GAAY,EAAZ,GAAiB3B,SAAS,CAAC2B,GAAG,GAAG,CAAP,CAAzC;AACA,aAAOE,MAAP;AACD,KAXO;AAYRC,IAAAA,aAAa,EAAE,uBAACrB,CAAD,SAET;AAAA,UADJZ,EACI,SADJA,EACI;AAAA,UADA2B,MACA,SADAA,MACA;AAAA,UADQH,MACR,SADQA,MACR;AAAA,UADgBlB,OAChB,SADgBA,OAChB;AACJ,UAAM4B,UAAU,GAAG;AACjBlC,QAAAA,EAAE,EAAFA,EADiB;AACb2B,QAAAA,MAAM,EAANA,MADa;AACLH,QAAAA,MAAM,EAANA,MADK;AACGlB,QAAAA,OAAO,EAAPA;AADH,OAAnB;AAGAC,MAAAA,YAAY,CAACsB,IAAb,CAAkBK,UAAlB;AACA,UAAMJ,GAAG,GAAGvB,YAAY,CAACwB,MAAzB;AACA,UAAMC,MAAM,GAAGF,GAAG,KAAK,CAAR,GAAY,EAAZ,GAAiBvB,YAAY,CAACuB,GAAG,GAAG,CAAP,CAA5C;AACA,aAAOE,MAAP;AACD;AAtBO;AA5BM,CAAlB;eAwDevB,S",
      "sourceRoot": "E:\\ProjectJS\\GraphQL\\crudapp\\backend\\graphql",
      "sourcesContent": [
        "// import { find } from \"lodash\";\n\nconst usersMock = [\n  { id: 1, firstName: 'Tom', lastName: 'Coleman' },\n  { id: 2, firstName: 'Sashko', lastName: 'Stubailo' },\n  { id: 3, firstName: 'Mikhail', lastName: 'Novikov' },\n];\n\nconst postsMock = [\n  {\n    id: 1, usersId: 1, title: 'Introduction to GraphQL', content: 'content Introduction to GraphQL',\n  },\n  {\n    id: 2, usersId: 2, title: 'Welcome to Meteor', content: 'content Welcome to Meteor',\n  },\n  {\n    id: 3, usersId: 2, title: 'Advanced GraphQL', content: 'content Advanced GraphQL',\n  },\n  {\n    id: 4, usersId: 3, title: 'Launchpad is Cool', content: 'content Launchpad is Cool',\n  },\n];\n\nconst commentsMock = [\n  {\n    id: 1, usersId: 1, postsId: 1, content: 'Comment Introduction to GraphQL',\n  },\n  {\n    id: 2, usersId: 2, postsId: 2, content: 'Comment Welcome to Meteor',\n  },\n  {\n    id: 3, usersId: 2, postsId: 2, content: 'Comment Advanced GraphQL',\n  },\n  {\n    id: 4, usersId: 3, postsId: 3, content: 'Comment Launchpad is Cool',\n  },\n];\n\nconst resolvers = {\n  Query: {\n    user: (_, { id }) => {\n      const userReq = usersMock.filter((user) => user.id === id);\n      console.log(`query UserReq: ${userReq}, id: ${id}`);\n      return userReq[0];\n    },\n    users: () => {\n      console.log('query users', usersMock);\n      return usersMock;\n    },\n    post: (_, { id }) => {\n      const postReq = postsMock.filter((post) => post.id === id);\n      console.log(`query PostReq: ${postReq}, id: ${id}`);\n      return postReq[0];\n    },\n    posts: () => {\n      console.log('query posts', postsMock);\n      return postsMock;\n    },\n    commentsByPost: (_, { id }) => {\n      const commentsReq = commentsMock.filter((comments) => comments.postId === id);\n      // console.log('query users.filter', comments.id);\n      console.log(`query CommentsReq: ${commentsReq}, id: ${id}`);\n      return commentsReq;\n    },\n  },\n\n  Mutation: {\n    createPost: (_, {\n      id, title, userId, content,\n    }) => {\n      const newPost = {\n        id, title, userId, content,\n      };\n      postsMock.push(newPost);\n      const len = postsMock.length;\n      const result = len === 0 ? {} : postsMock[len - 1];\n      return result;\n    },\n    createComment: (_, {\n      id, userId, postId, content,\n    }) => {\n      const newComment = {\n        id, userId, postId, content,\n      };\n      commentsMock.push(newComment);\n      const len = commentsMock.length;\n      const result = len === 0 ? {} : commentsMock[len - 1];\n      return result;\n    },\n  },\n\n};\n\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571984211011
  }
}