{
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _typedef = _interopRequireDefault(require(\"./graphql/typedef\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./graphql/resolvers\"));\n\nvar _db = _interopRequireDefault(require(\"./mongodb/db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nrequire('dotenv').config({\n  path: 'variables.env'\n});\n\n_mongoose[\"default\"].connect(_db[\"default\"], {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false,\n  useCreateIndex: true\n});\n\n_mongoose[\"default\"].connection.once('open', function () {\n  console.log('connected to MongoDB');\n})[\"catch\"](function (err) {\n  return console.error('error MongoDb', err);\n}); // const corsOptions = {\n//   origin: process.env.FRONTEND_URL,\n//   optionsSuccessStatus: 200, // some legacy browsers (IE11, various SmartTVs) choke on 204\n// };\n\n\nvar server = new _apolloServerExpress.ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs: _typedef[\"default\"],\n  resolvers: _resolvers[\"default\"],\n  formatError: function formatError(error) {\n    return error;\n  },\n  context: function context(_ref) {\n    var req = _ref.req,\n        res = _ref.res;\n    return (// const user = await getMe(req);\n      // req.user = user;\n      // if (!res.cookie) res.cookie = {};\n      _objectSpread({}, req, {\n        res: res,\n        secret: process.env.SECRET\n      })\n    );\n  }\n}); // create server\n\nvar app = (0, _express[\"default\"])();\nvar port = 8000;\nvar corsOptions = {\n  origin: 'http://localhost:3333',\n  credentials: true\n};\napp.use((0, _cors[\"default\"])(corsOptions));\napp.use((0, _cookieParser[\"default\"])()); // app.use(bodyParser.json());\n\napp.use(function (req, res, next) {\n  // console.log(`app.use req.cookies: ${req.cookies}`);\n  console.log(\"app.use res.cookies: \".concat(res.cookies)); // extract token from request\n\n  var token = req.cookies.token; // console.log(`app.use res.cookies token: ${token}`);\n  // console.log(`app.use process.env.SECRET: ${process.env.SECRET}`);\n  // extract the user ID from the token\n\n  if (token) {\n    var _jwt$verify = _jsonwebtoken[\"default\"].verify(token, process.env.SECRET),\n        id = _jwt$verify.id,\n        name = _jwt$verify.name,\n        email = _jwt$verify.email; // jwt.verify( token, new Buffer( 'ThisStringIsASecret', 'base64' ), function ( err, decoded ) { /**/ });\n    // const secret = Buffer.from(process.env.SECRET, 'base64');\n    // const { user } = jwt.verify(token, Buffer.from(process.env.SECRET, 'base64'));\n    // const { user } = jwt.verify(token, secret);\n\n\n    console.log(\"app.use jwt.verify token user: \".concat(id, \", \").concat(name, \", \").concat(email)); // put the userId onto the req for future requests to access\n    // req.userId = id;\n\n    req.user = {\n      id: id,\n      name: name,\n      email: email\n    };\n    console.log(\"app.use req.user: \".concat(JSON.stringify(req.user)));\n  }\n\n  next();\n}); // const getMe = async (req) => {\n//   // const token = req.headers['x-token'];\n//   const { token } = req.cookies;\n//   console.log(`app.use req.cookies: ${JSON.stringify(req.cookies)}`);\n//   if (!token) return null;\n//   // try {\n//   //   return await jwt.verify(token, process.env.SECRET);\n//   // } catch (e) {\n//   //   throw new AuthenticationError(\n//   //     'Your session expired. Sign in again.',\n//   //   );\n//   // }\n//   const { user } = jwt.verify(token, process.env.SECRET);\n//   console.log(`app.use jwt.verify token me: ${JSON.stringify(user)}`);\n//   // put the userId onto the req for future requests to access\n//   // req.userId = id;\n//   // req.user = { ...user };\n//   return user;\n// };\n// The GraphQL endpoint\n\nserver.applyMiddleware({\n  app: app,\n  path: '/',\n  cors: false // disables the apollo-server-express cors to allow the cors middleware use\n\n}); // server.applyMiddleware({ app });\n// GraphiQL, a visual editor for queries\n// server.applyMiddleware({ app, path: '/graphql' });\n// app.use('/graphiql', graphiqlExpress({ endpointURL: '/graphql' }));\n// server.applyMiddleware({ app, path: '/' });\n\napp.listen(port, function () {\n  console.log(\"app server listening on port: \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "path",
        "mongoose",
        "connect",
        "uri",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useFindAndModify",
        "useCreateIndex",
        "connection",
        "once",
        "console",
        "log",
        "err",
        "error",
        "server",
        "ApolloServer",
        "introspection",
        "typeDefs",
        "resolvers",
        "formatError",
        "context",
        "req",
        "res",
        "secret",
        "process",
        "env",
        "SECRET",
        "app",
        "port",
        "corsOptions",
        "origin",
        "credentials",
        "use",
        "next",
        "cookies",
        "token",
        "jwt",
        "verify",
        "id",
        "name",
        "email",
        "user",
        "JSON",
        "stringify",
        "applyMiddleware",
        "cors",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\nimport cookieParser from 'cookie-parser';\nimport jwt from 'jsonwebtoken';\n// import schema, { graphql } from \"./schema\";\n// import graphql from 'graphql';\n// import { makeExecutableSchema } from 'graphql-tools';\nimport { ApolloServer } from 'apollo-server-express';\nimport bodyParser from 'body-parser';\nimport typeDefs from './graphql/typedef';\nimport resolvers from './graphql/resolvers';\nimport uri from './mongodb/db';\n\nrequire('dotenv').config({ path: 'variables.env' });\n\nmongoose.connect(uri, {\n  useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false, useCreateIndex: true,\n});\n\n\nmongoose.connection.once('open', () => {\n  console.log('connected to MongoDB');\n}).catch((err) => console.error('error MongoDb', err));\n\n// const corsOptions = {\n//   origin: process.env.FRONTEND_URL,\n//   optionsSuccessStatus: 200, // some legacy browsers (IE11, various SmartTVs) choke on 204\n// };\n\nconst server = new ApolloServer({\n  introspection: true,\n  // schema,\n  typeDefs,\n  resolvers,\n  formatError: (error) => error,\n  context: ({ req, res }) =>\n    // const user = await getMe(req);\n    // req.user = user;\n    // if (!res.cookie) res.cookie = {};\n    ({\n      ...req,\n      res,\n      secret: process.env.SECRET,\n    })\n  ,\n});\n\n\n// create server\nconst app = express();\nconst port = 8000;\n\nconst corsOptions = {\n  origin: 'http://localhost:3333',\n  credentials: true,\n};\n\n\napp.use(cors(corsOptions));\napp.use(cookieParser());\n\n// app.use(bodyParser.json());\n\napp.use((req, res, next) => {\n  // console.log(`app.use req.cookies: ${req.cookies}`);\n  console.log(`app.use res.cookies: ${res.cookies}`);\n  // extract token from request\n  const { token } = req.cookies;\n  // console.log(`app.use res.cookies token: ${token}`);\n  // console.log(`app.use process.env.SECRET: ${process.env.SECRET}`);\n  // extract the user ID from the token\n  if (token) {\n    const { id, name, email } = jwt.verify(token, process.env.SECRET);\n    // jwt.verify( token, new Buffer( 'ThisStringIsASecret', 'base64' ), function ( err, decoded ) { /**/ });\n    // const secret = Buffer.from(process.env.SECRET, 'base64');\n    // const { user } = jwt.verify(token, Buffer.from(process.env.SECRET, 'base64'));\n    // const { user } = jwt.verify(token, secret);\n    console.log(`app.use jwt.verify token user: ${id}, ${name}, ${email}`);\n    // put the userId onto the req for future requests to access\n    // req.userId = id;\n    req.user = { id, name, email };\n    console.log(`app.use req.user: ${JSON.stringify(req.user)}`);\n  }\n  next();\n});\n\n// const getMe = async (req) => {\n//   // const token = req.headers['x-token'];\n//   const { token } = req.cookies;\n//   console.log(`app.use req.cookies: ${JSON.stringify(req.cookies)}`);\n//   if (!token) return null;\n//   // try {\n//   //   return await jwt.verify(token, process.env.SECRET);\n//   // } catch (e) {\n//   //   throw new AuthenticationError(\n//   //     'Your session expired. Sign in again.',\n//   //   );\n//   // }\n//   const { user } = jwt.verify(token, process.env.SECRET);\n//   console.log(`app.use jwt.verify token me: ${JSON.stringify(user)}`);\n//   // put the userId onto the req for future requests to access\n//   // req.userId = id;\n//   // req.user = { ...user };\n//   return user;\n// };\n\n\n// The GraphQL endpoint\nserver.applyMiddleware({\n  app,\n  path: '/',\n  cors: false, // disables the apollo-server-express cors to allow the cors middleware use\n});\n// server.applyMiddleware({ app });\n\n// GraphiQL, a visual editor for queries\n// server.applyMiddleware({ app, path: '/graphql' });\n\n\n// app.use('/graphiql', graphiqlExpress({ endpointURL: '/graphql' }));\n// server.applyMiddleware({ app, path: '/' });\n\napp.listen(port, () => {\n  console.log(`app server listening on port: ${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572299576506
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/typedef.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
        "sourceFileName": "typedef.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nscalar DateTime\\ntype Token {\\n  token: String!\\n}\\ntype SuccessMessage {\\n  message: String\\n}\\ntype User {\\n  id: String!\\n  name: String!\\n  email: String!\\n  password: String!\\n  posts: [Post]\\n}\\n\\ntype Post {\\n  id: String!\\n  title: String!\\n  userId: String!\\n  content: String\\n  createdDate: DateTime!\\n  # commentsByPost: [Comment]!\\n}\\n\\ntype Comment {\\n  id: String!\\n  userId: String!\\n  content: String\\n  createdDate: DateTime!\\n  postId: String!\\n}\\n\\ntype Query {\\n  # me: User\\n  user(id: String!): User\\n  users: [User]!\\n  post(id: String!): Post\\n  posts: [Post]!\\n  postsByUser(id: String!): [Post]!\\n  commentsByPost(id: String!): [Comment]!\\n  commentsByUser(id: String!): [Comment]!\\n}\\n\\ntype Mutation {\\n  signUp(name: String!, email: String!, password: String!): User!\\n  signIn(email: String!, password: String!): User\\n  deleteUser(id: String!): SuccessMessage\\n  createPost(userId: String!, title: String!, content: String!): Post\\n  deletePost(postId: String!, userId: String!): SuccessMessage\\n  createComment(userId: String!, postId: String!, content: String!): Comment\\n  deleteComment(id: String!, userId: String!): SuccessMessage\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar typeDefs = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = typeDefs;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVkZWYuanMiXSwibmFtZXMiOlsidHlwZURlZnMiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFNQSxRQUFRLE9BQUdDLHdCQUFILG9CQUFkO2VBdURlRCxRIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cblxuY29uc3QgdHlwZURlZnMgPSBncWxgXG5zY2FsYXIgRGF0ZVRpbWVcbnR5cGUgVG9rZW4ge1xuICB0b2tlbjogU3RyaW5nIVxufVxudHlwZSBTdWNjZXNzTWVzc2FnZSB7XG4gIG1lc3NhZ2U6IFN0cmluZ1xufVxudHlwZSBVc2VyIHtcbiAgaWQ6IFN0cmluZyFcbiAgbmFtZTogU3RyaW5nIVxuICBlbWFpbDogU3RyaW5nIVxuICBwYXNzd29yZDogU3RyaW5nIVxuICBwb3N0czogW1Bvc3RdXG59XG5cbnR5cGUgUG9zdCB7XG4gIGlkOiBTdHJpbmchXG4gIHRpdGxlOiBTdHJpbmchXG4gIHVzZXJJZDogU3RyaW5nIVxuICBjb250ZW50OiBTdHJpbmdcbiAgY3JlYXRlZERhdGU6IERhdGVUaW1lIVxuICAjIGNvbW1lbnRzQnlQb3N0OiBbQ29tbWVudF0hXG59XG5cbnR5cGUgQ29tbWVudCB7XG4gIGlkOiBTdHJpbmchXG4gIHVzZXJJZDogU3RyaW5nIVxuICBjb250ZW50OiBTdHJpbmdcbiAgY3JlYXRlZERhdGU6IERhdGVUaW1lIVxuICBwb3N0SWQ6IFN0cmluZyFcbn1cblxudHlwZSBRdWVyeSB7XG4gICMgbWU6IFVzZXJcbiAgdXNlcihpZDogU3RyaW5nISk6IFVzZXJcbiAgdXNlcnM6IFtVc2VyXSFcbiAgcG9zdChpZDogU3RyaW5nISk6IFBvc3RcbiAgcG9zdHM6IFtQb3N0XSFcbiAgcG9zdHNCeVVzZXIoaWQ6IFN0cmluZyEpOiBbUG9zdF0hXG4gIGNvbW1lbnRzQnlQb3N0KGlkOiBTdHJpbmchKTogW0NvbW1lbnRdIVxuICBjb21tZW50c0J5VXNlcihpZDogU3RyaW5nISk6IFtDb21tZW50XSFcbn1cblxudHlwZSBNdXRhdGlvbiB7XG4gIHNpZ25VcChuYW1lOiBTdHJpbmchLCBlbWFpbDogU3RyaW5nISwgcGFzc3dvcmQ6IFN0cmluZyEpOiBVc2VyIVxuICBzaWduSW4oZW1haWw6IFN0cmluZyEsIHBhc3N3b3JkOiBTdHJpbmchKTogVXNlclxuICBkZWxldGVVc2VyKGlkOiBTdHJpbmchKTogU3VjY2Vzc01lc3NhZ2VcbiAgY3JlYXRlUG9zdCh1c2VySWQ6IFN0cmluZyEsIHRpdGxlOiBTdHJpbmchLCBjb250ZW50OiBTdHJpbmchKTogUG9zdFxuICBkZWxldGVQb3N0KHBvc3RJZDogU3RyaW5nISwgdXNlcklkOiBTdHJpbmchKTogU3VjY2Vzc01lc3NhZ2VcbiAgY3JlYXRlQ29tbWVudCh1c2VySWQ6IFN0cmluZyEsIHBvc3RJZDogU3RyaW5nISwgY29udGVudDogU3RyaW5nISk6IENvbW1lbnRcbiAgZGVsZXRlQ29tbWVudChpZDogU3RyaW5nISwgdXNlcklkOiBTdHJpbmchKTogU3VjY2Vzc01lc3NhZ2Vcbn1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVEZWZzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "typedef.js"
      ],
      "names": [
        "typeDefs",
        "gql"
      ],
      "mappings": ";;;;;;;AACA;;;;;;;;;;;;;;AAGA,IAAMA,QAAQ,OAAGC,wBAAH,oBAAd;eAuDeD,Q",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "sourcesContent": [
        "\nimport { gql } from 'apollo-server-express';\n\n\nconst typeDefs = gql`\nscalar DateTime\ntype Token {\n  token: String!\n}\ntype SuccessMessage {\n  message: String\n}\ntype User {\n  id: String!\n  name: String!\n  email: String!\n  password: String!\n  posts: [Post]\n}\n\ntype Post {\n  id: String!\n  title: String!\n  userId: String!\n  content: String\n  createdDate: DateTime!\n  # commentsByPost: [Comment]!\n}\n\ntype Comment {\n  id: String!\n  userId: String!\n  content: String\n  createdDate: DateTime!\n  postId: String!\n}\n\ntype Query {\n  # me: User\n  user(id: String!): User\n  users: [User]!\n  post(id: String!): Post\n  posts: [Post]!\n  postsByUser(id: String!): [Post]!\n  commentsByPost(id: String!): [Comment]!\n  commentsByUser(id: String!): [Comment]!\n}\n\ntype Mutation {\n  signUp(name: String!, email: String!, password: String!): User!\n  signIn(email: String!, password: String!): User\n  deleteUser(id: String!): SuccessMessage\n  createPost(userId: String!, title: String!, content: String!): Post\n  deletePost(postId: String!, userId: String!): SuccessMessage\n  createComment(userId: String!, postId: String!, content: String!): Comment\n  deleteComment(id: String!, userId: String!): SuccessMessage\n}\n`;\n\nexport default typeDefs;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572295067076
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _graphqlIsoDate = require(\"graphql-iso-date\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _models = require(\"../mongodb/models\");\n\nvar _controllersGet = require(\"../mongodb/controllersGet\");\n\nvar _controllersSet = require(\"../mongodb/controllersSet\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\nvar resolvers = {\n  DateTime: _graphqlIsoDate.GraphQLDateTime,\n  Query: {\n    // me: async (parent, arg, context) => {\n    //   // console.log('Query:  me -> ctx.request.userId', ctx.request.userId);\n    //   console.log('Query: me -> context', context);\n    //   // check if there is a current userId in request\n    //   if (!context.request.user) {\n    //     return null;\n    //   }\n    //   // run query for User by userId from database\n    //   // return ctx.db.query.user(\n    //   //   {\n    //   //     where: { id: ctx.request.userId },\n    //   //   },\n    //   //   info\n    //   // );\n    //   const { id } = context.request.user;\n    //   const user = await getUser(id);\n    //   if (!user) {\n    //     return null;\n    //   }\n    //   console.log(`query me req.user: ${JSON.stringify(context.request.user)}`);\n    //   return user;\n    // },\n    user: function () {\n      var _user = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_, _ref) {\n        var id, result, posts, comments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _ref.id;\n                _context.next = 3;\n                return (0, _controllersGet.getUser)(id);\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return (0, _controllersGet.getPostsByUser)({\n                  userId: result.id\n                });\n\n              case 6:\n                posts = _context.sent;\n                _context.next = 9;\n                return (0, _controllersGet.getCommentsByUser)({\n                  userId: result.id\n                });\n\n              case 9:\n                comments = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, result, {\n                  posts: posts,\n                  comments: comments\n                }));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function user(_x, _x2) {\n        return _user.apply(this, arguments);\n      }\n\n      return user;\n    }(),\n    // const userReq = usersMock.filter((user) => user.id === id);\n    // console.log(`query UserReq: ${userReq}, id: ${id}`);\n    // return userReq[0];\n    users: function () {\n      var _users = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", (0, _controllersGet.getUsers)());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function users() {\n        return _users.apply(this, arguments);\n      }\n\n      return users;\n    }(),\n    post: function () {\n      var _post = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_, _ref2) {\n        var id, resPost, commentsByPost;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = _ref2.id;\n                _context3.next = 3;\n                return (0, _controllersGet.getPost)(id);\n\n              case 3:\n                resPost = _context3.sent;\n                console.log(\"query post resPost: \".concat(JSON.stringify(resPost)));\n                _context3.next = 7;\n                return (0, _controllersGet.getCommentsByPost)({\n                  postId: resPost.id\n                });\n\n              case 7:\n                commentsByPost = _context3.sent;\n                // return resPost;\n                console.log(\"query post comments: \".concat(JSON.stringify(commentsByPost)));\n                return _context3.abrupt(\"return\", _objectSpread({}, resPost, {\n                  commentsByPost: commentsByPost\n                }));\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function post(_x3, _x4) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }(),\n    // comment: async (_, { id }) => {\n    //   const resComment = await getComment(id);\n    //   console.log(`query comment resComment: ${JSON.stringify(resComment)}`);\n    //   return resComment;\n    // },\n    // comments: async (_, { postId, userId }) => {\n    //   if (!postId === '') {\n    //     const resCommentsByPost = await getCommentsByPost(postId);\n    //     console.log(`query comments resCommentsByPost: ${JSON.stringify(resCommentsByPost)}`);\n    //     return resComment;\n    //   }\n    // },\n    // const postReq = postsMock.filter((post) => post.id === id);\n    // console.log(`query PostReq: ${postReq}, id: ${id}`);\n    // if (!postReq[0]) {\n    //   return null;\n    // }\n    // postReq[0].comments = commentsMock.filter((comment) => comment.postId === postReq[0].id);\n    // console.log(`query post PostReq: ${JSON.stringify(postReq)}`);\n    // return postReq[0];\n    posts: function () {\n      var _posts = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (0, _controllersGet.getPosts)();\n\n              case 2:\n                result = _context5.sent;\n\n                if (!(result !== [])) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", result.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee4(resPost) {\n                    var comments;\n                    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return (0, _controllersGet.getCommentsByPost)({\n                              postId: resPost.id\n                            });\n\n                          case 2:\n                            comments = _context4.sent;\n                            return _context4.abrupt(\"return\", _objectSpread({}, resPost, {\n                              comments: comments\n                            }));\n\n                          case 4:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x5) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()));\n\n              case 5:\n                return _context5.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function posts() {\n        return _posts.apply(this, arguments);\n      }\n\n      return posts;\n    }(),\n    // {\n    //   const postsMockReq = postsMock.map((post) => {\n    //     const newItem = { ...post };\n    //     newItem.comments = commentsMock.filter((comment) => comment.postId === newItem.id);\n    //     console.log('query posts');\n    //     return newItem;\n    //   });\n    //   return postsMockReq;\n    // },\n    postsByUser: function () {\n      var _postsByUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(_, _ref4) {\n        var id, result;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                id = _ref4.id;\n                _context7.next = 3;\n                return (0, _controllersGet.getPostsByUser)({\n                  userId: id\n                });\n\n              case 3:\n                result = _context7.sent;\n\n                if (!(result !== [])) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", result.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref5 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee6(resPost) {\n                    var comments;\n                    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.next = 2;\n                            return (0, _controllersGet.getCommentsByPost)({\n                              postId: resPost.id\n                            });\n\n                          case 2:\n                            comments = _context6.sent;\n                            return _context6.abrupt(\"return\", _objectSpread({}, resPost, {\n                              comments: comments\n                            }));\n\n                          case 4:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function (_x8) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }()));\n\n              case 6:\n                return _context7.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function postsByUser(_x6, _x7) {\n        return _postsByUser.apply(this, arguments);\n      }\n\n      return postsByUser;\n    }(),\n    // {\n    //   const postsReq = postsMock.filter((post) => post.userId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query PostsReq: ${postsReq}, id: ${id}`);\n    //   return postsReq;\n    // },\n    // comments: () => getComments(),\n    commentsByPost: function () {\n      var _commentsByPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(_, _ref6) {\n        var id;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                id = _ref6.id;\n                return _context8.abrupt(\"return\", (0, _controllersGet.getCommentsByPost)({\n                  postId: id\n                }));\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function commentsByPost(_x9, _x10) {\n        return _commentsByPost.apply(this, arguments);\n      }\n\n      return commentsByPost;\n    }(),\n    // {\n    // const result = getCommentsByPost({ postId: id });\n    // return result.map((comment) => ({\n    //   id: comment._id,\n    //   userId: comment.userId,\n    //   postId: comment.postId,\n    //   content: comment.content,\n    //   createdDate: comment.createdDate,\n    // }));\n    // return resComments;\n    // }\n    // {\n    //   const commentsReq = commentsMock.filter((comment) => comment.postId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query CommentsReq: ${commentsReq}, id: ${id}`);\n    //   return commentsReq;\n    // },\n    commentsByUser: function () {\n      var _commentsByUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(_, _ref7) {\n        var id;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                id = _ref7.id;\n                return _context9.abrupt(\"return\", (0, _controllersGet.getCommentsByUser)({\n                  userId: id\n                }));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function commentsByUser(_x11, _x12) {\n        return _commentsByUser.apply(this, arguments);\n      }\n\n      return commentsByUser;\n    }()\n  },\n  Mutation: {\n    // createUser: async (_, { firstName, lastName }) => {\n    //   const id = uuidv4();\n    //   const newUserData = {\n    //     id, firstName, lastName,\n    //   };\n    //   console.log(`m createUser dataNewUser: ${JSON.stringify(newUserData)}`);\n    //   const newUser = await createUser(newUserData);\n    //   return {\n    //     ...newUser,\n    //     posts: [],\n    //   };\n    signUp: function () {\n      var _signUp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(_, _ref8, context) {\n        var name, email, password, id, newUserData, user, expiresIn, jToken;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                name = _ref8.name, email = _ref8.email, password = _ref8.password;\n                // console.log(`m createUser context: ${JSON.stringify(context)}`);\n                console.log(\"m createUser context: \".concat(context.secret));\n                id = (0, _v[\"default\"])();\n                newUserData = {\n                  id: id,\n                  name: name,\n                  email: email,\n                  password: password\n                };\n                console.log(\"m createUser dataNewUser: \".concat(JSON.stringify(newUserData)));\n                _context10.next = 7;\n                return (0, _controllersSet.createUser)(newUserData);\n\n              case 7:\n                user = _context10.sent;\n                expiresIn = '30m'; // '12h';\n                // const jwtToken = await jwt.sign(newUser, context.secret, { expiresIn });\n\n                _context10.next = 11;\n                return _jsonwebtoken[\"default\"].sign(user, context.secret);\n\n              case 11:\n                jToken = _context10.sent;\n                // set the jwt as a cookie on the response\n                context.response.cookie('token', jToken, {\n                  httpOnly: true,\n                  maxAge: 1000 * 60 * 30 // Expiry - 30 min\n\n                }); // return { token: jToken };\n\n                return _context10.abrupt(\"return\", user);\n\n              case 14:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function signUp(_x13, _x14, _x15) {\n        return _signUp.apply(this, arguments);\n      }\n\n      return signUp;\n    }(),\n    signIn: function () {\n      var _signIn = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(_, _ref9, context) {\n        var email, password, AuthArg, user, isValidPass, expiresIn, jToken;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                email = _ref9.email, password = _ref9.password;\n                console.log(\"m signIn context.res: \".concat(context.res[0])); // console.log(`m signIn context.req.user: ${JSON.stringify(context.req.user)}`);\n\n                console.log(\"m signIn context: \".concat(context.secret));\n                AuthArg = ['email', email];\n                console.log(\"m signIn AuthArg: \".concat(JSON.stringify(AuthArg)));\n                _context11.next = 7;\n                return (0, _controllersGet.getUserByArg)(AuthArg);\n\n              case 7:\n                user = _context11.sent;\n                console.log(\"m signIn user: \".concat(JSON.stringify(user)));\n\n                if (user) {\n                  _context11.next = 11;\n                  break;\n                }\n\n                throw new Error('Пользователя с таким email не существует!');\n\n              case 11:\n                _context11.next = 13;\n                return _bcrypt[\"default\"].compare(password, user.password);\n\n              case 13:\n                isValidPass = _context11.sent;\n                console.log(\"m signIn isValidPass: \".concat(isValidPass));\n\n                if (isValidPass) {\n                  _context11.next = 17;\n                  break;\n                }\n\n                throw new Error('Неверный пароль! Попробуйте еще раз.');\n\n              case 17:\n                delete user.password;\n                expiresIn = '30m'; // '12h';\n                // const jToken = await jwt.sign(user, context.secret, { expiresIn });\n\n                jToken = _jsonwebtoken[\"default\"].sign(user, context.secret);\n                console.log(\"m signIn jToken: \".concat(JSON.stringify(jToken))); // if (!context.response.cookie) context.response.cookie = {};\n                // context.response.cookie('token', jToken, {\n\n                context.res.cookie('token', jToken, {\n                  httpOnly: true,\n                  maxAge: 1000 * 60 * 60 * 24 * 31 // Expiry - 30 min\n\n                });\n                console.log(\"m signIn cookie context.response: \".concat(context.res)); // console.log(`m signIn context.req: ${JSON.stringify(context.req)}`);\n                // return { token: jToken };\n\n                return _context11.abrupt(\"return\", user);\n\n              case 24:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function signIn(_x16, _x17, _x18) {\n        return _signIn.apply(this, arguments);\n      }\n\n      return signIn;\n    }(),\n    deleteUser: function () {\n      var _deleteUser2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(_, _ref10) {\n        var id, delUser;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                id = _ref10.id;\n                _context12.next = 3;\n                return (0, _controllersSet.deleteUser)(id);\n\n              case 3:\n                delUser = _context12.sent;\n                console.log(\"m deleteUser delUser: \".concat(JSON.stringify(delUser)));\n\n                if (!delUser) {\n                  _context12.next = 7;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", {\n                  message: 'Success'\n                });\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function deleteUser(_x19, _x20) {\n        return _deleteUser2.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }(),\n    createPost: function () {\n      var _createPost2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(_, _ref11) {\n        var userId, title, content, id, createdDate, newPostData, newPost;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                userId = _ref11.userId, title = _ref11.title, content = _ref11.content;\n                id = (0, _v[\"default\"])(); // const createdDate = new Date().toISOString;\n\n                createdDate = _moment[\"default\"].utc().format();\n                console.log(\"m createPost createdDate: \".concat(createdDate));\n                newPostData = {\n                  id: id,\n                  title: title,\n                  userId: userId,\n                  content: content,\n                  createdDate: createdDate\n                };\n                console.log(\"m createPost newPost: \".concat(JSON.stringify(newPostData))); // return new Promise((resolve, reject) => {\n                // const len = postsMock.length;\n                // const newLen = postsMock.push(newPost);\n                // return createPost(newPost);\n\n                _context13.next = 8;\n                return (0, _controllersSet.createPost)(newPostData);\n\n              case 8:\n                newPost = _context13.sent;\n                return _context13.abrupt(\"return\", _objectSpread({}, newPost, {\n                  comments: []\n                }));\n\n              case 10:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      function createPost(_x21, _x22) {\n        return _createPost2.apply(this, arguments);\n      }\n\n      return createPost;\n    }(),\n    deletePost: function () {\n      var _deletePost2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14(_, _ref12) {\n        var userId, postId, delPost;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                userId = _ref12.userId, postId = _ref12.postId;\n                _context14.next = 3;\n                return (0, _controllersSet.deletePost)({\n                  userId: userId,\n                  postId: postId\n                });\n\n              case 3:\n                delPost = _context14.sent;\n                console.log(\"m deletePost delPost: \".concat(JSON.stringify(delPost)));\n\n                if (!(delPost !== null)) {\n                  _context14.next = 7;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", {\n                  message: 'Success'\n                });\n\n              case 7:\n                throw new Error('Вы не можете удалять чужие  посты!');\n\n              case 8:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function deletePost(_x23, _x24) {\n        return _deletePost2.apply(this, arguments);\n      }\n\n      return deletePost;\n    }(),\n    createComment: function () {\n      var _createComment2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15(_, _ref13) {\n        var userId, postId, content, id, createdDate, newComment;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                userId = _ref13.userId, postId = _ref13.postId, content = _ref13.content;\n                id = (0, _v[\"default\"])(); // const createdDate = new Date().toISOString;\n\n                createdDate = _moment[\"default\"].utc().format();\n                console.log(\"m createPost createdDate: \".concat(createdDate));\n                newComment = {\n                  id: id,\n                  userId: userId,\n                  postId: postId,\n                  content: content,\n                  createdDate: createdDate\n                }; // const len = commentsMock.length;\n                // const newLen = commentsMock.push(newComment);\n\n                return _context15.abrupt(\"return\", (0, _controllersSet.createComment)(newComment));\n\n              case 6:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      function createComment(_x25, _x26) {\n        return _createComment2.apply(this, arguments);\n      }\n\n      return createComment;\n    }(),\n    deleteComment: function () {\n      var _deleteComment2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16(_, _ref14) {\n        var id, userId, delComment;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                id = _ref14.id, userId = _ref14.userId;\n                _context16.next = 3;\n                return (0, _controllersSet.deleteComment)({\n                  id: id,\n                  userId: userId\n                });\n\n              case 3:\n                delComment = _context16.sent;\n                console.log(\"m deleteComment delComment: \".concat(JSON.stringify(delComment)));\n\n                if (!(delComment !== null)) {\n                  _context16.next = 7;\n                  break;\n                }\n\n                return _context16.abrupt(\"return\", {\n                  message: 'Success'\n                });\n\n              case 7:\n                throw new Error('Вы не можете удалять чужие  комментарии!');\n\n              case 8:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function deleteComment(_x27, _x28) {\n        return _deleteComment2.apply(this, arguments);\n      }\n\n      return deleteComment;\n    }()\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "resolvers",
        "DateTime",
        "GraphQLDateTime",
        "Query",
        "user",
        "_",
        "id",
        "result",
        "userId",
        "posts",
        "comments",
        "users",
        "post",
        "resPost",
        "console",
        "log",
        "JSON",
        "stringify",
        "postId",
        "commentsByPost",
        "map",
        "postsByUser",
        "commentsByUser",
        "Mutation",
        "signUp",
        "context",
        "name",
        "email",
        "password",
        "secret",
        "newUserData",
        "expiresIn",
        "jwt",
        "sign",
        "jToken",
        "response",
        "cookie",
        "httpOnly",
        "maxAge",
        "signIn",
        "res",
        "AuthArg",
        "Error",
        "bcrypt",
        "compare",
        "isValidPass",
        "deleteUser",
        "delUser",
        "message",
        "createPost",
        "title",
        "content",
        "createdDate",
        "moment",
        "utc",
        "format",
        "newPostData",
        "newPost",
        "deletePost",
        "delPost",
        "createComment",
        "newComment",
        "deleteComment",
        "delComment"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/graphql",
      "sourcesContent": [
        "import uuidv4 from 'uuid/v4';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcrypt';\nimport {\n  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n} from 'graphql-iso-date';\nimport moment from 'moment';\nimport { User, Post, Comment } from '../mongodb/models';\nimport {\n  getUsers, getUser, getUserByArg, getPosts, getPost, getComment, getPostsByUser, getCommentsByPost, getCommentsByUser,\n} from '../mongodb/controllersGet';\nimport {\n  createUser, deleteUser, createPost, deletePost, createComment, deleteComment,\n} from '../mongodb/controllersSet';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n\nconst resolvers = {\n  DateTime: GraphQLDateTime,\n  Query: {\n    // me: async (parent, arg, context) => {\n    //   // console.log('Query:  me -> ctx.request.userId', ctx.request.userId);\n    //   console.log('Query: me -> context', context);\n    //   // check if there is a current userId in request\n    //   if (!context.request.user) {\n    //     return null;\n    //   }\n    //   // run query for User by userId from database\n    //   // return ctx.db.query.user(\n    //   //   {\n    //   //     where: { id: ctx.request.userId },\n    //   //   },\n    //   //   info\n    //   // );\n    //   const { id } = context.request.user;\n    //   const user = await getUser(id);\n    //   if (!user) {\n    //     return null;\n    //   }\n    //   console.log(`query me req.user: ${JSON.stringify(context.request.user)}`);\n    //   return user;\n    // },\n    user: async (_, { id }) => {\n      const result = await getUser(id);\n      const posts = await getPostsByUser({ userId: result.id });\n      const comments = await getCommentsByUser({ userId: result.id });\n      return {\n        ...result,\n        posts,\n        comments,\n      };\n    },\n    // const userReq = usersMock.filter((user) => user.id === id);\n    // console.log(`query UserReq: ${userReq}, id: ${id}`);\n    // return userReq[0];\n    users: async () => getUsers(),\n    post: async (_, { id }) => {\n      const resPost = await getPost(id);\n      console.log(`query post resPost: ${JSON.stringify(resPost)}`);\n      const commentsByPost = await getCommentsByPost({ postId: resPost.id });\n      // return resPost;\n      console.log(`query post comments: ${JSON.stringify(commentsByPost)}`);\n      return {\n        ...resPost,\n        commentsByPost,\n      };\n    },\n    // comment: async (_, { id }) => {\n    //   const resComment = await getComment(id);\n    //   console.log(`query comment resComment: ${JSON.stringify(resComment)}`);\n    //   return resComment;\n    // },\n    // comments: async (_, { postId, userId }) => {\n    //   if (!postId === '') {\n    //     const resCommentsByPost = await getCommentsByPost(postId);\n    //     console.log(`query comments resCommentsByPost: ${JSON.stringify(resCommentsByPost)}`);\n    //     return resComment;\n    //   }\n    // },\n    // const postReq = postsMock.filter((post) => post.id === id);\n    // console.log(`query PostReq: ${postReq}, id: ${id}`);\n    // if (!postReq[0]) {\n    //   return null;\n    // }\n    // postReq[0].comments = commentsMock.filter((comment) => comment.postId === postReq[0].id);\n    // console.log(`query post PostReq: ${JSON.stringify(postReq)}`);\n    // return postReq[0];\n\n    posts: async () => {\n      const result = await getPosts();\n      // const resPostsByUser = result;\n      if (result !== []) {\n        return result.map(async (resPost) => {\n        // const res = resPost;\n          const comments = await getCommentsByPost({ postId: resPost.id });\n          return {\n            ...resPost,\n            comments,\n          };\n        });\n      }\n      return result;\n    },\n    // {\n    //   const postsMockReq = postsMock.map((post) => {\n    //     const newItem = { ...post };\n    //     newItem.comments = commentsMock.filter((comment) => comment.postId === newItem.id);\n    //     console.log('query posts');\n    //     return newItem;\n    //   });\n    //   return postsMockReq;\n    // },\n    postsByUser: async (_, { id }) => {\n      const result = await getPostsByUser({ userId: id });\n      // const resPostsByUser = result;\n      if (result !== []) {\n        return result.map(async (resPost) => {\n        // const res = resPost;\n          const comments = await getCommentsByPost({ postId: resPost.id });\n          // res.comments = [...comments];\n          // return res;\n          return {\n            ...resPost,\n            comments,\n          };\n        });\n      }\n      // if result === [] empty array\n      return result;\n\n      // const resComments = result.map((comment) => {\n      //   const resItem = {\n      //     id: comment._id,\n      //     userId: comment.userId,\n      //     postId: comment.postId,\n      //     content: comment.content,\n      //     createdDate: comment.createdDate,\n      //   };\n      //   console.log(`c getUser resItem: ${JSON.stringify(resItem)}`);\n      //   return resItem;\n      // });\n      // return resComments;\n    },\n    // {\n    //   const postsReq = postsMock.filter((post) => post.userId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query PostsReq: ${postsReq}, id: ${id}`);\n    //   return postsReq;\n    // },\n    // comments: () => getComments(),\n    commentsByPost: async (_, { id }) => getCommentsByPost({ postId: id }), // {\n    // const result = getCommentsByPost({ postId: id });\n    // return result.map((comment) => ({\n    //   id: comment._id,\n    //   userId: comment.userId,\n    //   postId: comment.postId,\n    //   content: comment.content,\n    //   createdDate: comment.createdDate,\n    // }));\n    // return resComments;\n    // }\n\n    // {\n    //   const commentsReq = commentsMock.filter((comment) => comment.postId === id);\n    //   // console.log('query users.filter', comments.id);\n    //   console.log(`query CommentsReq: ${commentsReq}, id: ${id}`);\n    //   return commentsReq;\n    // },\n    commentsByUser: async (_, { id }) => getCommentsByUser({ userId: id }),\n  },\n\n  Mutation: {\n    // createUser: async (_, { firstName, lastName }) => {\n    //   const id = uuidv4();\n    //   const newUserData = {\n    //     id, firstName, lastName,\n    //   };\n    //   console.log(`m createUser dataNewUser: ${JSON.stringify(newUserData)}`);\n\n    //   const newUser = await createUser(newUserData);\n    //   return {\n    //     ...newUser,\n    //     posts: [],\n    //   };\n    signUp: async (_, { name, email, password }, context) => {\n      // console.log(`m createUser context: ${JSON.stringify(context)}`);\n      console.log(`m createUser context: ${context.secret}`);\n      const id = uuidv4();\n      const newUserData = {\n        id, name, email, password,\n      };\n      console.log(`m createUser dataNewUser: ${JSON.stringify(newUserData)}`);\n\n      const user = await createUser(newUserData);\n      const expiresIn = '30m'; // '12h';\n      // const jwtToken = await jwt.sign(newUser, context.secret, { expiresIn });\n      const jToken = await jwt.sign(user, context.secret);\n      // set the jwt as a cookie on the response\n      context.response.cookie('token', jToken, {\n        httpOnly: true,\n        maxAge: 1000 * 60 * 30, // Expiry - 30 min\n      });\n      // return { token: jToken };\n      return user;\n      // console.log(`m createUser new: ${newU}`);\n      // return newU;\n      // usersMock.push(newUser);\n      // console.log(`m createUser usersMock len: ${usersMock.length}`);\n      // const newUserReq = usersMock.filter((user) => user.id === id);\n      // console.log(`m createUser newUserReq: ${JSON.stringify(newUserReq[0])}`);\n      // if (!newUserReq[0]) {\n      //   // return reject('error');\n      //   return null;\n      // }\n      // // return resolve(postsMock[len - 1]);\n      // return newUserReq[0];\n      // });\n      // return newUser;\n    },\n    signIn: async (_, { email, password }, context) => {\n      console.log(`m signIn context.res: ${context.res[0]}`);\n      // console.log(`m signIn context.req.user: ${JSON.stringify(context.req.user)}`);\n      console.log(`m signIn context: ${context.secret}`);\n\n      const AuthArg = ['email', email];\n      console.log(`m signIn AuthArg: ${JSON.stringify(AuthArg)}`);\n\n      const user = await getUserByArg(AuthArg);\n      console.log(`m signIn user: ${JSON.stringify(user)}`);\n      if (!user) {\n        throw new Error(\n          'Пользователя с таким email не существует!',\n        );\n      }\n\n      const isValidPass = await bcrypt.compare(password, user.password);\n      console.log(`m signIn isValidPass: ${isValidPass}`);\n      if (!isValidPass) {\n        throw new Error(\n          'Неверный пароль! Попробуйте еще раз.',\n        );\n      }\n      delete user.password;\n      const expiresIn = '30m'; // '12h';\n      // const jToken = await jwt.sign(user, context.secret, { expiresIn });\n      const jToken = jwt.sign(user, context.secret);\n      console.log(`m signIn jToken: ${JSON.stringify(jToken)}`);\n      // if (!context.response.cookie) context.response.cookie = {};\n      // context.response.cookie('token', jToken, {\n      context.res.cookie('token', jToken, {\n        httpOnly: true,\n        maxAge: 1000 * 60 * 60 * 24 * 31, // Expiry - 30 min\n      });\n      console.log(`m signIn cookie context.response: ${context.res}`);\n      // console.log(`m signIn context.req: ${JSON.stringify(context.req)}`);\n      // return { token: jToken };\n      return user;\n    },\n    deleteUser: async (_, { id }) => {\n      // console.log(`m deleteUser id: ${JSON.stringify(id)}`);\n      const delUser = await deleteUser(id);\n      console.log(`m deleteUser delUser: ${JSON.stringify(delUser)}`);\n      if (delUser) return { message: 'Success' };\n    },\n    createPost: async (_, {\n      userId, title, content,\n    }) => {\n      const id = uuidv4();\n      // const createdDate = new Date().toISOString;\n      const createdDate = moment.utc().format();\n      console.log(`m createPost createdDate: ${createdDate}`);\n      const newPostData = {\n        id, title, userId, content, createdDate,\n      };\n      console.log(`m createPost newPost: ${JSON.stringify(newPostData)}`);\n      // return new Promise((resolve, reject) => {\n      // const len = postsMock.length;\n      // const newLen = postsMock.push(newPost);\n      // return createPost(newPost);\n\n      const newPost = await createPost(newPostData);\n      return {\n        ...newPost,\n        comments: [],\n      };\n      // postsMock.push(newPost);\n      // console.log(`m createPost postsMock len: ${postsMock.length}`);\n      // const newPostReq = postsMock.filter((post) => post.id === id);\n      // console.log(`m createPost newPostReq: ${JSON.stringify(newPostReq[0])}`);\n      // if (!newPostReq[0]) {\n      //   // return reject('error');\n      //   return null;\n      // }\n      // // return resolve(postsMock[len - 1]);\n      // return newPostReq[0];\n      // });\n    },\n    deletePost: async (_, { userId, postId }) => {\n      // console.log(`m deletePost id: ${JSON.stringify(id)}`);\n      const delPost = await deletePost({ userId, postId });\n      console.log(`m deletePost delPost: ${JSON.stringify(delPost)}`);\n      if (delPost !== null) {\n        return { message: 'Success' };\n      }\n      throw new Error('Вы не можете удалять чужие  посты!');\n    },\n    createComment: async (_, {\n      userId, postId, content,\n    }) => {\n      const id = uuidv4();\n      // const createdDate = new Date().toISOString;\n      const createdDate = moment.utc().format();\n      console.log(`m createPost createdDate: ${createdDate}`);\n      const newComment = {\n        id, userId, postId, content, createdDate,\n      };\n      // const len = commentsMock.length;\n      // const newLen = commentsMock.push(newComment);\n      return createComment(newComment);\n      // commentsMock.push(newComment);\n      // // if (newLen === len) {\n      // //   return null;\n      // // }\n      // const newCommentReq = commentsMock.filter((comment) => comment.id === id);\n      // console.log(`m createPost newPostReq: ${JSON.stringify(newCommentReq[0])}`);\n      // if (!newCommentReq[0]) {\n      //   // return reject('error');\n      //   return null;\n      // }\n      // return newCommentReq[0];\n    },\n    deleteComment: async (_, { id, userId }) => {\n      // console.log(`m deleteComment id: ${JSON.stringify(id)}`);\n      const delComment = await deleteComment({ id, userId });\n      console.log(`m deleteComment delComment: ${JSON.stringify(delComment)}`);\n      if (delComment !== null) {\n        return { message: 'Success' };\n      }\n      throw new Error('Вы не можете удалять чужие  комментарии!');\n    },\n  },\n\n};\n\n\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572299769969
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire('dotenv').config({\n  path: 'variables.env'\n});\n\nvar password = process.env.DBUSER_PASS;\nvar mongoDBurl = process.env.MONGODB_URL;\nvar uri = \"mongodb+srv://dbprog:\".concat(password, \"@\").concat(mongoDBurl);\nvar _default = uri;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJwYXRoIiwicGFzc3dvcmQiLCJwcm9jZXNzIiwiZW52IiwiREJVU0VSX1BBU1MiLCJtb25nb0RCdXJsIiwiTU9OR09EQl9VUkwiLCJ1cmkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEIsQ0FBeUI7QUFBRUMsRUFBQUEsSUFBSSxFQUFFO0FBQVIsQ0FBekI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBN0I7QUFFQSxJQUFNQyxVQUFVLEdBQUdILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxXQUEvQjtBQUVBLElBQU1DLEdBQUcsa0NBQTJCTixRQUEzQixjQUF1Q0ksVUFBdkMsQ0FBVDtlQUVlRSxHIiwic291cmNlUm9vdCI6Ii9tZWRpYS9uMl8zVEIvRURVL0dyYXBoUUwvY3J1ZGFwcC9iYWNrZW5kL21vbmdvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoeyBwYXRoOiAndmFyaWFibGVzLmVudicgfSk7XG5cbmNvbnN0IHBhc3N3b3JkID0gcHJvY2Vzcy5lbnYuREJVU0VSX1BBU1M7XG5cbmNvbnN0IG1vbmdvREJ1cmwgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSTDtcblxuY29uc3QgdXJpID0gYG1vbmdvZGIrc3J2Oi8vZGJwcm9nOiR7cGFzc3dvcmR9QCR7bW9uZ29EQnVybH1gO1xuXG5leHBvcnQgZGVmYXVsdCB1cmk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "require",
        "config",
        "path",
        "password",
        "process",
        "env",
        "DBUSER_PASS",
        "mongoDBurl",
        "MONGODB_URL",
        "uri"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAzB;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA7B;AAEA,IAAMC,UAAU,GAAGH,OAAO,CAACC,GAAR,CAAYG,WAA/B;AAEA,IAAMC,GAAG,kCAA2BN,QAA3B,cAAuCI,UAAvC,CAAT;eAEeE,G",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "require('dotenv').config({ path: 'variables.env' });\n\nconst password = process.env.DBUSER_PASS;\n\nconst mongoDBurl = process.env.MONGODB_URL;\n\nconst uri = `mongodb+srv://dbprog:${password}@${mongoDBurl}`;\n\nexport default uri;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572004772187
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/models.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "models.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Comment = exports.Post = exports.User = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// const { ObjectId } = mongoose.Schema.Types;\nvar User = _mongoose[\"default\"].model('User', new _mongoose[\"default\"].Schema({\n  _id: String,\n  name: String,\n  email: String,\n  password: String\n}));\n\nexports.User = User;\n\nvar Post = _mongoose[\"default\"].model('Post', new _mongoose[\"default\"].Schema({\n  _id: String,\n  title: String,\n  content: String,\n  userId: String,\n  createdDate: {\n    type: Date,\n    \"default\": Date.now\n  }\n}));\n\nexports.Post = Post;\n\nvar Comment = _mongoose[\"default\"].model('Comment', new _mongoose[\"default\"].Schema({\n  _id: String,\n  userId: String,\n  content: String,\n  postId: String,\n  createdDate: {\n    type: Date,\n    \"default\": Date.now\n  }\n}));\n\nexports.Comment = Comment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy5qcyJdLCJuYW1lcyI6WyJVc2VyIiwibW9uZ29vc2UiLCJtb2RlbCIsIlNjaGVtYSIsIl9pZCIsIlN0cmluZyIsIm5hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwiUG9zdCIsInRpdGxlIiwiY29udGVudCIsInVzZXJJZCIsImNyZWF0ZWREYXRlIiwidHlwZSIsIkRhdGUiLCJub3ciLCJDb21tZW50IiwicG9zdElkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQTtBQUVBLElBQU1BLElBQUksR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQUlELHFCQUFTRSxNQUFiLENBQW9CO0FBQ3REQyxFQUFBQSxHQUFHLEVBQUVDLE1BRGlEO0FBRXREQyxFQUFBQSxJQUFJLEVBQUVELE1BRmdEO0FBR3RERSxFQUFBQSxLQUFLLEVBQUVGLE1BSCtDO0FBSXRERyxFQUFBQSxRQUFRLEVBQUVIO0FBSjRDLENBQXBCLENBQXZCLENBQWI7Ozs7QUFPQSxJQUFNSSxJQUFJLEdBQUdSLHFCQUFTQyxLQUFULENBQWUsTUFBZixFQUF1QixJQUFJRCxxQkFBU0UsTUFBYixDQUFvQjtBQUN0REMsRUFBQUEsR0FBRyxFQUFFQyxNQURpRDtBQUV0REssRUFBQUEsS0FBSyxFQUFFTCxNQUYrQztBQUd0RE0sRUFBQUEsT0FBTyxFQUFFTixNQUg2QztBQUl0RE8sRUFBQUEsTUFBTSxFQUFFUCxNQUo4QztBQUt0RFEsRUFBQUEsV0FBVyxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRUMsSUFBUjtBQUFjLGVBQVNBLElBQUksQ0FBQ0M7QUFBNUI7QUFMeUMsQ0FBcEIsQ0FBdkIsQ0FBYjs7OztBQVFBLElBQU1DLE9BQU8sR0FBR2hCLHFCQUFTQyxLQUFULENBQWUsU0FBZixFQUEwQixJQUFJRCxxQkFBU0UsTUFBYixDQUFvQjtBQUM1REMsRUFBQUEsR0FBRyxFQUFFQyxNQUR1RDtBQUU1RE8sRUFBQUEsTUFBTSxFQUFFUCxNQUZvRDtBQUc1RE0sRUFBQUEsT0FBTyxFQUFFTixNQUhtRDtBQUk1RGEsRUFBQUEsTUFBTSxFQUFFYixNQUpvRDtBQUs1RFEsRUFBQUEsV0FBVyxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRUMsSUFBUjtBQUFjLGVBQVNBLElBQUksQ0FBQ0M7QUFBNUI7QUFMK0MsQ0FBcEIsQ0FBMUIsQ0FBaEIiLCJzb3VyY2VSb290IjoiL21lZGlhL24yXzNUQi9FRFUvR3JhcGhRTC9jcnVkYXBwL2JhY2tlbmQvbW9uZ29kYiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbi8vIGNvbnN0IHsgT2JqZWN0SWQgfSA9IG1vbmdvb3NlLlNjaGVtYS5UeXBlcztcblxuY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIF9pZDogU3RyaW5nLFxuICBuYW1lOiBTdHJpbmcsXG4gIGVtYWlsOiBTdHJpbmcsXG4gIHBhc3N3b3JkOiBTdHJpbmcsXG59KSk7XG5cbmNvbnN0IFBvc3QgPSBtb25nb29zZS5tb2RlbCgnUG9zdCcsIG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBfaWQ6IFN0cmluZyxcbiAgdGl0bGU6IFN0cmluZyxcbiAgY29udGVudDogU3RyaW5nLFxuICB1c2VySWQ6IFN0cmluZyxcbiAgY3JlYXRlZERhdGU6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcbn0pKTtcblxuY29uc3QgQ29tbWVudCA9IG1vbmdvb3NlLm1vZGVsKCdDb21tZW50JywgbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIF9pZDogU3RyaW5nLFxuICB1c2VySWQ6IFN0cmluZyxcbiAgY29udGVudDogU3RyaW5nLFxuICBwb3N0SWQ6IFN0cmluZyxcbiAgY3JlYXRlZERhdGU6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcbn0pKTtcblxuZXhwb3J0IHsgVXNlciwgUG9zdCwgQ29tbWVudCB9O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "models.js"
      ],
      "names": [
        "User",
        "mongoose",
        "model",
        "Schema",
        "_id",
        "String",
        "name",
        "email",
        "password",
        "Post",
        "title",
        "content",
        "userId",
        "createdDate",
        "type",
        "Date",
        "now",
        "Comment",
        "postId"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;AAEA,IAAMA,IAAI,GAAGC,qBAASC,KAAT,CAAe,MAAf,EAAuB,IAAID,qBAASE,MAAb,CAAoB;AACtDC,EAAAA,GAAG,EAAEC,MADiD;AAEtDC,EAAAA,IAAI,EAAED,MAFgD;AAGtDE,EAAAA,KAAK,EAAEF,MAH+C;AAItDG,EAAAA,QAAQ,EAAEH;AAJ4C,CAApB,CAAvB,CAAb;;;;AAOA,IAAMI,IAAI,GAAGR,qBAASC,KAAT,CAAe,MAAf,EAAuB,IAAID,qBAASE,MAAb,CAAoB;AACtDC,EAAAA,GAAG,EAAEC,MADiD;AAEtDK,EAAAA,KAAK,EAAEL,MAF+C;AAGtDM,EAAAA,OAAO,EAAEN,MAH6C;AAItDO,EAAAA,MAAM,EAAEP,MAJ8C;AAKtDQ,EAAAA,WAAW,EAAE;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AALyC,CAApB,CAAvB,CAAb;;;;AAQA,IAAMC,OAAO,GAAGhB,qBAASC,KAAT,CAAe,SAAf,EAA0B,IAAID,qBAASE,MAAb,CAAoB;AAC5DC,EAAAA,GAAG,EAAEC,MADuD;AAE5DO,EAAAA,MAAM,EAAEP,MAFoD;AAG5DM,EAAAA,OAAO,EAAEN,MAHmD;AAI5Da,EAAAA,MAAM,EAAEb,MAJoD;AAK5DQ,EAAAA,WAAW,EAAE;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AAL+C,CAApB,CAA1B,CAAhB",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\n// const { ObjectId } = mongoose.Schema.Types;\n\nconst User = mongoose.model('User', new mongoose.Schema({\n  _id: String,\n  name: String,\n  email: String,\n  password: String,\n}));\n\nconst Post = mongoose.model('Post', new mongoose.Schema({\n  _id: String,\n  title: String,\n  content: String,\n  userId: String,\n  createdDate: { type: Date, default: Date.now },\n}));\n\nconst Comment = mongoose.model('Comment', new mongoose.Schema({\n  _id: String,\n  userId: String,\n  content: String,\n  postId: String,\n  createdDate: { type: Date, default: Date.now },\n}));\n\nexport { User, Post, Comment };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572244781134
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersGet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "controllersGet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCommentsByUser = exports.getCommentsByPost = exports.getPostsByUser = exports.getComment = exports.getPost = exports.getPosts = exports.getUserByArg = exports.getUser = exports.getUsers = void 0;\n\nvar _models = require(\"./models\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Get single User by Id\nvar getUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(arg) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"c getUser arg: \".concat(JSON.stringify(arg)));\n            return _context.abrupt(\"return\", _models.User.findById(arg).then(function (result) {\n              return (// if (result.length === 0) return null;\n                {\n                  id: result._id,\n                  name: result.name,\n                  email: result.email\n                }\n              );\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // console.log(`c getUser reqUser: ${JSON.stringify(reqUser)}`); // return reqUser;\n// Get single User by email\n\n\nexports.getUser = getUser;\n\nvar getUserByArg =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(arg) {\n    var _arg, prop, val, filter;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // console.log(`c getUser arg: ${JSON.stringify(arg)}`);\n            console.log(\"c getUserByArg arg: \".concat(arg)); // const filter = {};\n            // const prop = arg[0];\n\n            _arg = _slicedToArray(arg, 2), prop = _arg[0], val = _arg[1]; // const filter = { [prop]: arg[1] };\n\n            filter = _defineProperty({}, prop, val);\n            console.log(\"c getUserByArg filter: \".concat(JSON.stringify(filter)));\n            return _context2.abrupt(\"return\", _models.User.find(filter).then(function (result) {\n              console.log(\"c getUserByArg result: \".concat(JSON.stringify(result)));\n              if (result.length === 0) return null;\n              var _result$ = result[0],\n                  id = _result$._id,\n                  name = _result$.name,\n                  email = _result$.email,\n                  password = _result$.password;\n              return {\n                id: id,\n                name: name,\n                email: email,\n                password: password\n              };\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getUserByArg(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Get all Users\n\n\nexports.getUserByArg = getUserByArg;\n\nvar getUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", _models.User.find().then(function (result) {\n              console.log(\"c getUsers find: \".concat(JSON.stringify(result)));\n              return result.map(function (user) {\n                return {\n                  id: user._id,\n                  name: user.name,\n                  email: user.email\n                };\n              });\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getUsers() {\n    return _ref3.apply(this, arguments);\n  };\n}(); // Get all posts\n\n\nexports.getUsers = getUsers;\n\nvar getPosts =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", _models.Post.find().then(function (result) {\n              console.log(\"c getPosts find: \".concat(JSON.stringify(result)));\n              return result.map(function (post) {\n                return {\n                  id: post._id,\n                  title: post.title,\n                  userId: post.userId,\n                  content: post.content,\n                  createdDate: post.createdDate\n                };\n              }); // const argPosts = posts.map((post) => {\n              //   const newItem = { ...post };\n              //   newItem.comments = Comment.find({ postId: newItem.id })\n              //     .then((comments) => comments)\n              //     .catch((err) => console.error('Error db: ', err));\n              //   return newItem;\n              // });\n              // return argPosts;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getPosts() {\n    return _ref4.apply(this, arguments);\n  };\n}(); // Get single Post\n\n\nexports.getPosts = getPosts;\n\nvar getPost =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(arg) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", _models.Post.findById(arg).then(function (result) {\n              console.log(\"c getPost findById: \".concat(JSON.stringify(result)));\n              return {\n                id: result._id,\n                title: result.title,\n                userId: result.userId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getPost(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}(); // Get single Comment\n\n\nexports.getPost = getPost;\n\nvar getComment =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(arg) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", _models.Comment.findById(arg).then(function (result) {\n              console.log(\"c getComment findById: \".concat(JSON.stringify(result)));\n              return {\n                id: result._id,\n                postId: result.postId,\n                userId: result.userId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getComment(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}(); // Get all posts by User\n\n\nexports.getComment = getComment;\n\nvar getPostsByUser =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(arg) {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", _models.Post.find({\n              userId: arg.userId\n            }).then(function (result) {\n              console.log(\"c getPostsByUser find: \".concat(JSON.stringify(result)));\n              return result.map(function (post) {\n                return {\n                  id: post._id,\n                  title: post.title,\n                  userId: post.userId,\n                  content: post.content,\n                  createdDate: post.createdDate\n                };\n              }); // console.log(`c getPostsByUser newPost: ${JSON.stringify(newPost)}`);\n              // return newPost;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getPostsByUser(_x5) {\n    return _ref7.apply(this, arguments);\n  };\n}(); // Get all comments\n// const getComments = async () => {\n//   await Comment.find()\n//     .then((comments) => comments)\n//     .catch((err) => console.error('Error db: ', err));\n// };\n// Get all comments by Post\n\n\nexports.getPostsByUser = getPostsByUser;\n\nvar getCommentsByPost =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(arg) {\n    var postId;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            postId = arg.postId;\n            return _context8.abrupt(\"return\", _models.Comment.find({\n              postId: postId\n            }).then(function (result) {\n              console.log(\"c getCommentsByPost find: \".concat(JSON.stringify(result)));\n              return result.map(function (comment) {\n                return {\n                  id: comment._id,\n                  userId: comment.userId,\n                  postId: comment.postId,\n                  content: comment.content,\n                  createdDate: comment.createdDate\n                };\n              });\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function getCommentsByPost(_x6) {\n    return _ref8.apply(this, arguments);\n  };\n}(); // async function getCommentsByPost(arg) {\n//   const { postId } = arg;\n//   return Comment.find({ postId })\n//     .then((result) => {\n//       console.log(`c getCommentsByPost find: ${JSON.stringify(result)}`);\n//       return result.map((comment) => ({\n//         id: comment._id,\n//         userId: comment.userId,\n//         postId: comment.postId,\n//         content: comment.content,\n//         createdDate: comment.createdDate,\n//       }));\n//     })\n//     .catch((err) => console.error('Error db: ', err));\n// }\n\n\nexports.getCommentsByPost = getCommentsByPost;\n\nvar getCommentsByUser =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(arg) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", _models.Comment.find({\n              userId: arg.userId\n            }).then(function (result) {\n              console.log(\"c getCommentsByUser find: \".concat(JSON.stringify(result)));\n              return result.map(function (comment) {\n                return {\n                  id: comment._id,\n                  userId: comment.userId,\n                  postId: comment.postId,\n                  content: comment.content,\n                  createdDate: comment.createdDate\n                };\n              });\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function getCommentsByUser(_x7) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nexports.getCommentsByUser = getCommentsByUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controllersGet.js"
      ],
      "names": [
        "getUser",
        "arg",
        "console",
        "log",
        "JSON",
        "stringify",
        "User",
        "findById",
        "then",
        "result",
        "id",
        "_id",
        "name",
        "email",
        "err",
        "error",
        "getUserByArg",
        "prop",
        "val",
        "filter",
        "find",
        "length",
        "password",
        "getUsers",
        "map",
        "user",
        "getPosts",
        "Post",
        "post",
        "title",
        "userId",
        "content",
        "createdDate",
        "getPost",
        "getComment",
        "Comment",
        "postId",
        "getPostsByUser",
        "getCommentsByPost",
        "comment",
        "getCommentsByUser"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import { User, Post, Comment } from './models';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n\n// Get single User by Id\nconst getUser = async (arg) => {\n  console.log(`c getUser arg: ${JSON.stringify(arg)}`);\n  return User.findById(arg)\n    .then((result) =>\n      // if (result.length === 0) return null;\n      ({\n        id: result._id,\n        name: result.name,\n        email: result.email,\n      }))\n    .catch((err) => console.error('Error db: ', err));\n};\n// console.log(`c getUser reqUser: ${JSON.stringify(reqUser)}`); // return reqUser;\n\n// Get single User by email\nconst getUserByArg = async (arg) => {\n  // console.log(`c getUser arg: ${JSON.stringify(arg)}`);\n  console.log(`c getUserByArg arg: ${arg}`);\n  // const filter = {};\n  // const prop = arg[0];\n  const [prop, val] = arg;\n  // const filter = { [prop]: arg[1] };\n  const filter = { [prop]: val };\n  console.log(`c getUserByArg filter: ${JSON.stringify(filter)}`);\n  return User.find(filter)\n    .then((result) => {\n      console.log(`c getUserByArg result: ${JSON.stringify(result)}`);\n      if (result.length === 0) return null;\n      const {\n        _id: id, name, email, password,\n      } = result[0];\n      return {\n        id, name, email, password,\n      };\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Get all Users\nconst getUsers = async () => User.find()\n  .then((result) => {\n    console.log(`c getUsers find: ${JSON.stringify(result)}`);\n    return result.map((user) => ({\n      id: user._id,\n      name: user.name,\n      email: user.email,\n    }));\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n\n// Get all posts\nconst getPosts = async () => Post.find()\n  .then((result) => {\n    console.log(`c getPosts find: ${JSON.stringify(result)}`);\n    return result.map((post) => ({\n      id: post._id,\n      title: post.title,\n      userId: post.userId,\n      content: post.content,\n      createdDate: post.createdDate,\n    }));\n    // const argPosts = posts.map((post) => {\n    //   const newItem = { ...post };\n    //   newItem.comments = Comment.find({ postId: newItem.id })\n    //     .then((comments) => comments)\n    //     .catch((err) => console.error('Error db: ', err));\n    //   return newItem;\n    // });\n    // return argPosts;\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get single Post\nconst getPost = async (arg) => Post.findById(arg)\n  .then((result) => {\n    console.log(`c getPost findById: ${JSON.stringify(result)}`);\n    return ({\n      id: result._id,\n      title: result.title,\n      userId: result.userId,\n      content: result.content,\n      createdDate: result.createdDate,\n    });\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get single Comment\nconst getComment = async (arg) => Comment.findById(arg)\n  .then((result) => {\n    console.log(`c getComment findById: ${JSON.stringify(result)}`);\n    return ({\n      id: result._id,\n      postId: result.postId,\n      userId: result.userId,\n      content: result.content,\n      createdDate: result.createdDate,\n    });\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get all posts by User\nconst getPostsByUser = async (arg) => Post.find({ userId: arg.userId })\n  .then((result) => {\n    console.log(`c getPostsByUser find: ${JSON.stringify(result)}`);\n    return result.map((post) => ({\n      id: post._id,\n      title: post.title,\n      userId: post.userId,\n      content: post.content,\n      createdDate: post.createdDate,\n    }));\n    // console.log(`c getPostsByUser newPost: ${JSON.stringify(newPost)}`);\n    // return newPost;\n  })\n  .catch((err) => console.error('Error db: ', err));\n\n// Get all comments\n// const getComments = async () => {\n//   await Comment.find()\n//     .then((comments) => comments)\n//     .catch((err) => console.error('Error db: ', err));\n// };\n\n// Get all comments by Post\nconst getCommentsByPost = async (arg) => {\n  const { postId } = arg;\n  return Comment.find({ postId })\n    .then((result) => {\n      console.log(`c getCommentsByPost find: ${JSON.stringify(result)}`);\n      return result.map((comment) => ({\n        id: comment._id,\n        userId: comment.userId,\n        postId: comment.postId,\n        content: comment.content,\n        createdDate: comment.createdDate,\n      }));\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n// async function getCommentsByPost(arg) {\n//   const { postId } = arg;\n//   return Comment.find({ postId })\n//     .then((result) => {\n//       console.log(`c getCommentsByPost find: ${JSON.stringify(result)}`);\n//       return result.map((comment) => ({\n//         id: comment._id,\n//         userId: comment.userId,\n//         postId: comment.postId,\n//         content: comment.content,\n//         createdDate: comment.createdDate,\n//       }));\n//     })\n//     .catch((err) => console.error('Error db: ', err));\n// }\n\n\nconst getCommentsByUser = async (arg) => Comment.find({ userId: arg.userId })\n  .then((result) => {\n    console.log(`c getCommentsByUser find: ${JSON.stringify(result)}`);\n    return result.map((comment) => ({\n      id: comment._id,\n      userId: comment.userId,\n      postId: comment.postId,\n      content: comment.content,\n      createdDate: comment.createdDate,\n    }));\n  })\n  .catch((err) => console.error('Error db: ', err));\n\nexport {\n  getUsers, getUser, getUserByArg, getPosts, getPost, getComment, getPostsByUser, getCommentsByPost, getCommentsByUser,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572289814564
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersUpdate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "controllersUpdate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createComment = exports.createPost = exports.createUser = void 0;\n\nvar _models = require(\"./models\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nvar createUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(arg) {\n    var id, firstName, lastName, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"m createUser req: \".concat(JSON.stringify(arg)));\n            id = arg.id, firstName = arg.firstName, lastName = arg.lastName;\n            user = new _models.User({\n              _id: id,\n              firstName: firstName,\n              lastName: lastName\n            });\n            return _context.abrupt(\"return\", user.save().then(function (result) {\n              console.log(\"m createUser insertOne: \".concat(JSON.stringify(result)));\n              var newUser = {\n                id: result._id,\n                firstName: result.firstName,\n                lastName: result.lastName\n              }; // const newUser = { ...result };\n              // newUser.id = newUser._id;\n              // delete newUser._id;\n\n              console.log(\"m createUser newUser: \".concat(JSON.stringify(newUser)));\n              return newUser;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Create Post\n\n\nexports.createUser = createUser;\n\nvar createPost =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req) {\n    var _req$params, id, title, userId, content, createdDate;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$params = req.params, id = _req$params.id, title = _req$params.title, userId = _req$params.userId, content = _req$params.content, createdDate = _req$params.createdDate;\n            _context2.next = 3;\n            return _models.Post.insertOne({\n              _id: id,\n              title: title,\n              userId: userId,\n              content: content,\n              createdDate: createdDate\n            }).then(function (post) {\n              return post;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createPost(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Create Comment\n\n\nexports.createPost = createPost;\n\nvar createComment =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req) {\n    var _req$params2, id, userId, postId, content, createdDate;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$params2 = req.params, id = _req$params2.id, userId = _req$params2.userId, postId = _req$params2.postId, content = _req$params2.content, createdDate = _req$params2.createdDate;\n            _context3.next = 3;\n            return _models.Comment.insertOne({\n              _id: id,\n              userId: userId,\n              postId: postId,\n              content: content,\n              createdDate: createdDate\n            }).then(function (comment) {\n              return comment;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function createComment(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.createComment = createComment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJzVXBkYXRlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVVzZXIiLCJhcmciLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImlkIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJ1c2VyIiwiVXNlciIsIl9pZCIsInNhdmUiLCJ0aGVuIiwicmVzdWx0IiwibmV3VXNlciIsImVyciIsImVycm9yIiwiY3JlYXRlUG9zdCIsInJlcSIsInBhcmFtcyIsInRpdGxlIiwidXNlcklkIiwiY29udGVudCIsImNyZWF0ZWREYXRlIiwiUG9zdCIsImluc2VydE9uZSIsInBvc3QiLCJjcmVhdGVDb21tZW50IiwicG9zdElkIiwiQ29tbWVudCIsImNvbW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBRUE7QUFDQTtBQUNBLElBQU1BLFVBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPQyxHQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNqQkMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLDZCQUFpQ0MsSUFBSSxDQUFDQyxTQUFMLENBQWVKLEdBQWYsQ0FBakM7QUFDUUssWUFBQUEsRUFGUyxHQUVtQkwsR0FGbkIsQ0FFVEssRUFGUyxFQUVMQyxTQUZLLEdBRW1CTixHQUZuQixDQUVMTSxTQUZLLEVBRU1DLFFBRk4sR0FFbUJQLEdBRm5CLENBRU1PLFFBRk47QUFHWEMsWUFBQUEsSUFIVyxHQUdKLElBQUlDLFlBQUosQ0FBUztBQUNwQkMsY0FBQUEsR0FBRyxFQUFFTCxFQURlO0FBQ1hDLGNBQUFBLFNBQVMsRUFBVEEsU0FEVztBQUNBQyxjQUFBQSxRQUFRLEVBQVJBO0FBREEsYUFBVCxDQUhJO0FBQUEsNkNBTVZDLElBQUksQ0FBQ0csSUFBTCxHQUNKQyxJQURJLENBQ0MsVUFBQ0MsTUFBRCxFQUFZO0FBQ2hCWixjQUFBQSxPQUFPLENBQUNDLEdBQVIsbUNBQXVDQyxJQUFJLENBQUNDLFNBQUwsQ0FB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Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlciwgUG9zdCwgQ29tbWVudCB9IGZyb20gJy4vbW9kZWxzJztcblxuLyogZXNsaW50IG5vLXVuZGVyc2NvcmUtZGFuZ2xlOiBbMSwgeyBcImFsbG93XCI6IFtcIl9faWRcIl0gfV0gKi9cbi8vIENyZWF0ZSBVc2VyXG5jb25zdCBjcmVhdGVVc2VyID0gYXN5bmMgKGFyZykgPT4ge1xuICBjb25zb2xlLmxvZyhgbSBjcmVhdGVVc2VyIHJlcTogJHtKU09OLnN0cmluZ2lmeShhcmcpfWApO1xuICBjb25zdCB7IGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lIH0gPSBhcmc7XG4gIGNvbnN0IHVzZXIgPSBuZXcgVXNlcih7XG4gICAgX2lkOiBpZCwgZmlyc3ROYW1lLCBsYXN0TmFtZSxcbiAgfSk7XG4gIHJldHVybiB1c2VyLnNhdmUoKVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGBtIGNyZWF0ZVVzZXIgaW5zZXJ0T25lOiAke0pTT04uc3RyaW5naWZ5KHJlc3VsdCl9YCk7XG4gICAgICBjb25zdCBuZXdVc2VyID0ge1xuICAgICAgICBpZDogcmVzdWx0Ll9pZCxcbiAgICAgICAgZmlyc3ROYW1lOiByZXN1bHQuZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZTogcmVzdWx0Lmxhc3ROYW1lLFxuICAgICAgfTtcbiAgICAgIC8vIGNvbnN0IG5ld1VzZXIgPSB7IC4uLnJlc3VsdCB9O1xuICAgICAgLy8gbmV3VXNlci5pZCA9IG5ld1VzZXIuX2lkO1xuICAgICAgLy8gZGVsZXRlIG5ld1VzZXIuX2lkO1xuICAgICAgY29uc29sZS5sb2coYG0gY3JlYXRlVXNlciBuZXdVc2VyOiAke0pTT04uc3RyaW5naWZ5KG5ld1VzZXIpfWApO1xuICAgICAgcmV0dXJuIG5ld1VzZXI7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcignRXJyb3IgZGI6ICcsIGVycikpO1xufTtcblxuLy8gQ3JlYXRlIFBvc3RcbmNvbnN0IGNyZWF0ZVBvc3QgPSBhc3luYyAocmVxKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpZCwgdGl0bGUsIHVzZXJJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0gPSByZXEucGFyYW1zO1xuICBhd2FpdCBQb3N0Lmluc2VydE9uZSh7XG4gICAgX2lkOiBpZCwgdGl0bGUsIHVzZXJJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0pXG4gICAgLnRoZW4oKHBvc3QpID0+IHBvc3QpXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRiOiAnLCBlcnIpKTtcbn07XG5cbi8vIENyZWF0ZSBDb21tZW50XG5jb25zdCBjcmVhdGVDb21tZW50ID0gYXN5bmMgKHJlcSkgPT4ge1xuICBjb25zdCB7XG4gICAgaWQsIHVzZXJJZCwgcG9zdElkLCBjb250ZW50LCBjcmVhdGVkRGF0ZSxcbiAgfSA9IHJlcS5wYXJhbXM7XG4gIGF3YWl0IENvbW1lbnQuaW5zZXJ0T25lKHtcbiAgICBfaWQ6IGlkLCB1c2VySWQsIHBvc3RJZCwgY29udGVudCwgY3JlYXRlZERhdGUsXG4gIH0pXG4gICAgLnRoZW4oKGNvbW1lbnQpID0+IGNvbW1lbnQpXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRiOiAnLCBlcnIpKTtcbn07XG5cbmV4cG9ydCB7XG4gIGNyZWF0ZVVzZXIsIGNyZWF0ZVBvc3QsIGNyZWF0ZUNvbW1lbnQsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "controllersUpdate.js"
      ],
      "names": [
        "createUser",
        "arg",
        "console",
        "log",
        "JSON",
        "stringify",
        "id",
        "firstName",
        "lastName",
        "user",
        "User",
        "_id",
        "save",
        "then",
        "result",
        "newUser",
        "err",
        "error",
        "createPost",
        "req",
        "params",
        "title",
        "userId",
        "content",
        "createdDate",
        "Post",
        "insertOne",
        "post",
        "createComment",
        "postId",
        "Comment",
        "comment"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import { User, Post, Comment } from './models';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nconst createUser = async (arg) => {\n  console.log(`m createUser req: ${JSON.stringify(arg)}`);\n  const { id, firstName, lastName } = arg;\n  const user = new User({\n    _id: id, firstName, lastName,\n  });\n  return user.save()\n    .then((result) => {\n      console.log(`m createUser insertOne: ${JSON.stringify(result)}`);\n      const newUser = {\n        id: result._id,\n        firstName: result.firstName,\n        lastName: result.lastName,\n      };\n      // const newUser = { ...result };\n      // newUser.id = newUser._id;\n      // delete newUser._id;\n      console.log(`m createUser newUser: ${JSON.stringify(newUser)}`);\n      return newUser;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Post\nconst createPost = async (req) => {\n  const {\n    id, title, userId, content, createdDate,\n  } = req.params;\n  await Post.insertOne({\n    _id: id, title, userId, content, createdDate,\n  })\n    .then((post) => post)\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Comment\nconst createComment = async (req) => {\n  const {\n    id, userId, postId, content, createdDate,\n  } = req.params;\n  await Comment.insertOne({\n    _id: id, userId, postId, content, createdDate,\n  })\n    .then((comment) => comment)\n    .catch((err) => console.error('Error db: ', err));\n};\n\nexport {\n  createUser, createPost, createComment,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572036458022
  },
  "{\"sourceRoot\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"filename\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/n2_3TB/EDU/GraphQL/crudapp/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/n2_3TB/EDU/GraphQL/crudapp/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb/controllersSet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
        "sourceFileName": "controllersSet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteComment = exports.createComment = exports.deletePost = exports.createPost = exports.deleteUser = exports.createUser = void 0;\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _models = require(\"./models\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nvar createUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(arg) {\n    var id, name, email, password, nameExist, emailExist, hashPassword, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"c createUser arg: \".concat(JSON.stringify(arg)));\n            id = arg.id, name = arg.name, email = arg.email, password = arg.password; // check if the user exists\n\n            _context.next = 4;\n            return _models.User.find({\n              name: name\n            });\n\n          case 4:\n            nameExist = _context.sent;\n\n            if (!(nameExist.length !== 0)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('Пользователь с таким логином уже существует!');\n\n          case 7:\n            _context.next = 9;\n            return _models.User.find({\n              email: email\n            });\n\n          case 9:\n            emailExist = _context.sent;\n\n            if (!(emailExist.length !== 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            throw new Error('Пользователь с таким email уже существует!');\n\n          case 12:\n            _context.next = 14;\n            return _bcrypt[\"default\"].hash(password, 10);\n\n          case 14:\n            hashPassword = _context.sent;\n            user = new _models.User({\n              _id: id,\n              name: name,\n              email: email,\n              password: hashPassword\n            });\n            console.log(\"c createUser user: \".concat(JSON.stringify(user)));\n            return _context.abrupt(\"return\", user.save().then(function (result) {\n              console.log(\"c createUser SaveOne: \".concat(JSON.stringify(result)));\n              var newUser = {\n                id: result._id,\n                name: result.name,\n                email: result.email\n              };\n              console.log(\"c createUser newUser: \".concat(JSON.stringify(newUser)));\n              return newUser;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Delete User\n\n\nexports.createUser = createUser;\n\nvar deleteUser =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(arg) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"c deleteUser arg: \".concat(JSON.stringify(arg)));\n            return _context3.abrupt(\"return\", _models.User.findByIdAndRemove(arg).then(\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(result) {\n                var _id, delPostsByUser, delCommentsByUser;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        console.log(\"c deleteUser findByIdAndRemove: \".concat(JSON.stringify(result))); // delete all posts by the userId\n\n                        if (!(result !== null)) {\n                          _context2.next = 11;\n                          break;\n                        }\n\n                        _id = result._id;\n                        _context2.next = 5;\n                        return _models.Post.deleteMany({\n                          userId: _id\n                        });\n\n                      case 5:\n                        delPostsByUser = _context2.sent;\n                        console.log(\"c deleteUser delPostsByUser: \".concat(JSON.stringify(delPostsByUser))); // delete all comments by the userId\n\n                        _context2.next = 9;\n                        return _models.Comment.deleteMany({\n                          userId: _id\n                        });\n\n                      case 9:\n                        delCommentsByUser = _context2.sent;\n                        console.log(\"c deleteUser delCommentsByUser: \".concat(JSON.stringify(delCommentsByUser)));\n\n                      case 11:\n                        return _context2.abrupt(\"return\", result);\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x3) {\n                return _ref3.apply(this, arguments);\n              };\n            }())[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteUser(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Create Post\n\n\nexports.deleteUser = deleteUser;\n\nvar createPost =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(arg) {\n    var id, title, userId, content, createdDate, post;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            id = arg.id, title = arg.title, userId = arg.userId, content = arg.content, createdDate = arg.createdDate;\n            post = new _models.Post({\n              _id: id,\n              title: title,\n              userId: userId,\n              content: content,\n              createdDate: createdDate\n            });\n            return _context4.abrupt(\"return\", post.save().then(function (result) {\n              console.log(\"c createUser SaveOne: \".concat(JSON.stringify(result)));\n              var newPost = {\n                id: result._id,\n                title: result.title,\n                userId: result.userId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n              console.log(\"c createPost newPost: \".concat(JSON.stringify(newPost)));\n              return newPost;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function createPost(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}(); // Delete Post\n\n\nexports.createPost = createPost;\n\nvar deletePost =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(arg) {\n    var userId, postId;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log(\"c deletePost arg: \".concat(JSON.stringify(arg)));\n            userId = arg.userId, postId = arg.postId;\n            return _context6.abrupt(\"return\", _models.Post.findOneAndDelete({\n              userId: userId,\n              _id: postId\n            }).then(\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(result) {\n                var delCommentByPost;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        console.log(\"c deletePost findOneAndDelete: \".concat(JSON.stringify(result))); // delete all comments by the postId\n\n                        if (!(result !== null)) {\n                          _context5.next = 6;\n                          break;\n                        }\n\n                        _context5.next = 4;\n                        return _models.Comment.deleteMany({\n                          postId: result._id\n                        });\n\n                      case 4:\n                        delCommentByPost = _context5.sent;\n                        console.log(\"c deletePost delCommentByPost: \".concat(JSON.stringify(delCommentByPost)));\n\n                      case 6:\n                        return _context5.abrupt(\"return\", result);\n\n                      case 7:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }())[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function deletePost(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}(); // Create Comment\n\n\nexports.deletePost = deletePost;\n\nvar createComment =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(arg) {\n    var comment;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            console.log(\"c createComment arg: \".concat(JSON.stringify(arg))); // const {\n            //   id, userId, postId, content, createdDate,\n            // } = arg;\n            // const comment = new Comment({\n            //   _id: id, userId, postId, content, createdDate,\n            // });\n\n            comment = new _models.Comment(_objectSpread({\n              _id: arg.id\n            }, arg));\n            console.log(\"c createComment comment: \".concat(JSON.stringify(comment)));\n            return _context7.abrupt(\"return\", comment.save().then(function (result) {\n              console.log(\"c createComment SaveOne: \".concat(JSON.stringify(result)));\n              var newComment = {\n                id: result._id,\n                userId: result.userId,\n                postId: result.postId,\n                content: result.content,\n                createdDate: result.createdDate\n              };\n              console.log(\"c createComment newComment: \".concat(JSON.stringify(newComment)));\n              return newComment;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function createComment(_x7) {\n    return _ref7.apply(this, arguments);\n  };\n}(); // Delete Comment\n\n\nexports.createComment = createComment;\n\nvar deleteComment =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(arg) {\n    var id, userId;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            console.log(\"c deleteComment arg: \".concat(JSON.stringify(arg)));\n            id = arg.id, userId = arg.userId;\n            return _context8.abrupt(\"return\", _models.Comment.findOneAndDelete({\n              userId: userId,\n              _id: id\n            }).then(function (result) {\n              console.log(\"c deleteComment findByIdAndRemove: \".concat(JSON.stringify(result)));\n              return result;\n            })[\"catch\"](function (err) {\n              return console.error('Error db: ', err);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function deleteComment(_x8) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nexports.deleteComment = deleteComment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controllersSet.js"
      ],
      "names": [
        "createUser",
        "arg",
        "console",
        "log",
        "JSON",
        "stringify",
        "id",
        "name",
        "email",
        "password",
        "User",
        "find",
        "nameExist",
        "length",
        "Error",
        "emailExist",
        "bcrypt",
        "hash",
        "hashPassword",
        "user",
        "_id",
        "save",
        "then",
        "result",
        "newUser",
        "err",
        "error",
        "deleteUser",
        "findByIdAndRemove",
        "Post",
        "deleteMany",
        "userId",
        "delPostsByUser",
        "Comment",
        "delCommentsByUser",
        "createPost",
        "title",
        "content",
        "createdDate",
        "post",
        "newPost",
        "deletePost",
        "postId",
        "findOneAndDelete",
        "delCommentByPost",
        "createComment",
        "comment",
        "newComment",
        "deleteComment"
      ],
      "mappings": "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",
      "sourceRoot": "/media/n2_3TB/EDU/GraphQL/crudapp/backend/mongodb",
      "sourcesContent": [
        "import bcrypt from 'bcrypt';\nimport { User, Post, Comment } from './models';\n\n/* eslint no-underscore-dangle: [1, { \"allow\": [\"__id\"] }] */\n// Create User\nconst createUser = async (arg) => {\n  console.log(`c createUser arg: ${JSON.stringify(arg)}`);\n  const {\n    id, name, email, password,\n  } = arg;\n\n  // check if the user exists\n  const nameExist = await User.find({ name });\n  if (nameExist.length !== 0) {\n    throw new Error('Пользователь с таким логином уже существует!');\n  }\n  const emailExist = await User.find({ email });\n  if (emailExist.length !== 0) {\n    throw new Error('Пользователь с таким email уже существует!');\n  }\n\n  const hashPassword = await bcrypt.hash(password, 10);\n  const user = new User({\n    _id: id, name, email, password: hashPassword,\n  });\n  console.log(`c createUser user: ${JSON.stringify(user)}`);\n  return user.save()\n    .then((result) => {\n      console.log(`c createUser SaveOne: ${JSON.stringify(result)}`);\n      const newUser = {\n        id: result._id,\n        name: result.name,\n        email: result.email,\n      };\n      console.log(`c createUser newUser: ${JSON.stringify(newUser)}`);\n      return newUser;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Delete User\nconst deleteUser = async (arg) => {\n  console.log(`c deleteUser arg: ${JSON.stringify(arg)}`);\n  return User.findByIdAndRemove(arg)\n    .then(async (result) => {\n      console.log(`c deleteUser findByIdAndRemove: ${JSON.stringify(result)}`);\n      // delete all posts by the userId\n      if (result !== null) {\n        const { _id } = result;\n        const delPostsByUser = await Post.deleteMany({ userId: _id });\n        console.log(`c deleteUser delPostsByUser: ${JSON.stringify(delPostsByUser)}`);\n\n        // delete all comments by the userId\n        const delCommentsByUser = await Comment.deleteMany({ userId: _id });\n        console.log(`c deleteUser delCommentsByUser: ${JSON.stringify(delCommentsByUser)}`);\n      }\n      return result;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Post\nconst createPost = async (arg) => {\n  const {\n    id, title, userId, content, createdDate,\n  } = arg;\n  const post = new Post({\n    _id: id, title, userId, content, createdDate,\n  });\n  return post.save()\n    .then((result) => {\n      console.log(`c createUser SaveOne: ${JSON.stringify(result)}`);\n      const newPost = {\n        id: result._id,\n        title: result.title,\n        userId: result.userId,\n        content: result.content,\n        createdDate: result.createdDate,\n      };\n      console.log(`c createPost newPost: ${JSON.stringify(newPost)}`);\n      return newPost;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Delete Post\nconst deletePost = async (arg) => {\n  console.log(`c deletePost arg: ${JSON.stringify(arg)}`);\n  const { userId, postId } = arg;\n  return Post.findOneAndDelete({ userId, _id: postId })\n    .then(async (result) => {\n      console.log(`c deletePost findOneAndDelete: ${JSON.stringify(result)}`);\n      // delete all comments by the postId\n      if (result !== null) {\n        const delCommentByPost = await Comment.deleteMany({ postId: result._id });\n        console.log(`c deletePost delCommentByPost: ${JSON.stringify(delCommentByPost)}`);\n      }\n      return result;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Create Comment\nconst createComment = async (arg) => {\n  console.log(`c createComment arg: ${JSON.stringify(arg)}`);\n  // const {\n  //   id, userId, postId, content, createdDate,\n  // } = arg;\n  // const comment = new Comment({\n  //   _id: id, userId, postId, content, createdDate,\n  // });\n  const comment = new Comment({\n    _id: arg.id, ...arg,\n  });\n  console.log(`c createComment comment: ${JSON.stringify(comment)}`);\n  return comment.save()\n    .then((result) => {\n      console.log(`c createComment SaveOne: ${JSON.stringify(result)}`);\n      const newComment = {\n        id: result._id,\n        userId: result.userId,\n        postId: result.postId,\n        content: result.content,\n        createdDate: result.createdDate,\n      };\n      console.log(`c createComment newComment: ${JSON.stringify(newComment)}`);\n      return newComment;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n// Delete Comment\nconst deleteComment = async (arg) => {\n  console.log(`c deleteComment arg: ${JSON.stringify(arg)}`);\n  const { id, userId } = arg;\n  return Comment.findOneAndDelete({ userId, _id: id })\n    .then((result) => {\n      console.log(`c deleteComment findByIdAndRemove: ${JSON.stringify(result)}`);\n      return result;\n    })\n    .catch((err) => console.error('Error db: ', err));\n};\n\n\nexport {\n  createUser, deleteUser, createPost, deletePost, createComment, deleteComment,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572267681236
  }
}