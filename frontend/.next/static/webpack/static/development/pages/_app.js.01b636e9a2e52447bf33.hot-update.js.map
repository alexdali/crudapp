{"version":3,"file":"static/webpack/static/development/pages/_app.js.01b636e9a2e52447bf33.hot-update.js","sources":["webpack:///./components/NavBar.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n//import NProgress from 'nprogress';\nimport Router from 'next/router';\nimport {\n  Input,\n  Menu,\n  Responsive,\n  Image,\n  Dropdown,\n  // Header,\n  Icon,\n} from 'semantic-ui-react';\nimport User, { CURRENT_USER_QUERY } from './User';\nimport SignOut from './SignOut';\nimport Login from './Login';\n\n// const handleRouteChangeStart = () => {\n//   NProgress.start();\n// };\n\n// const handleRouteChangeCompleteAndError = () => {\n//   NProgress.done();\n// };\n\n// Router.events.on('routeChangeStart', handleRouteChangeStart);\n// Router.events.on('routeChangeComplete', handleRouteChangeCompleteAndError);\n// Router.events.on('routeChangeError', handleRouteChangeCompleteAndError);\n\nconst RowDiv = styled.div`\n  .logo {\n    float: left;\n    margin: 0 25px 0;\n    /* font-size: 3em; */\n    img.image {\n      /* width: 160px; */\n      width: 11rem;\n    }\n  }\n  .ui.floated.header {\n    /* margin-top: 5px; */\n    /* margin-top: 0.3em; */\n  }\n\n  .ui.menu {\n    font-family: 'Montserrat Alternates', 'Roboto', 'Open Sans', sans-serif,\n      'Arial';\n  }\n\n  /* .ui.secondary.menu .dropdown.item > .dropdown-sub-menu {\n    margin-top: 0;\n  } */\n  .ui.right.floated.menu {\n    /* margin: 10px 0 0 0.5rem; */\n    margin: 0.8rem 2rem 0 0.5rem;\n  }\n\n  /* .ui.secondary.menu .dropdown.item:hover,\n  .ui.secondary.menu .link.item:hover,\n  .ui.secondary.menu a.item:hover {\n    background: none;\n  } */\n\n  .ui.secondary.menu {\n    /* .right.menu {\n      .item.dropdown > .menu {\n        margin-top: 0;\n      }\n    } */\n\n    .dropdown.item:hover,\n    .link.item:hover,\n    a.item:hover {\n      background: none;\n    }\n    .ui.menu .ui.dropdown .menu > .item:hover {\n      background: none !important;\n    }\n    .dropdown-sub-menu:active {\n      display: none;\n    }\n  }\n  .MenuItem {\n    cursor: pointer;\n    &:after {\n      height: 2px;\n      background: #1ab394;\n      content: '';\n      width: 0;\n      position: absolute;\n      transform: translateX(-50%);\n      transition: width 0.4s;\n      transition-timing-function: cubic-bezier(1, -0.65, 0, 2.31);\n      left: 50%;\n      margin-top: 0.5rem;\n    }\n    &:hover,\n    &:focus {\n      background: none;\n      outline: none;\n      color: #1ab394;\n      font-weight: 600;\n      &:after {\n        width: calc(100% - 10px);\n      }\n      @media (max-width: 700px) {\n        width: calc(100% - 10px);\n      }\n    }\n    a {\n      padding: 0 0.5rem;\n      display: flex;\n      align-items: center;\n      position: relative;\n      /* text-transform: uppercase; */\n      /* font-weight: 900; */\n      /* font-weight: 600; */\n      /* font-size: 1em; */\n      background: none;\n      border: 0;\n      cursor: pointer;\n      /* color: #1ab394; */\n      @media (max-width: 700px) {\n        /* font-size: 10px; */\n        padding: 0 10px;\n      }\n    }\n  }\n`;\nconst MenuDiv = styled.div`\n  .ui.simple.dropdown .menu {\n    opacity: 0;\n  }\n\n  .ui.simple.active.dropdown > .menu,\n  .ui.simple.dropdown:hover > .menu {\n    opacity: 1;\n    top: 95% !important;\n    margin-top: 0;\n  }\n\n  .ui.menu .ui.dropdown .menu > .selected.item:active {\n    /* background: rgba(0, 0, 0, 0.05) !important;*/\n    color: rgba(0, 0, 0, 0.95) !important;\n  }\n`;\n\n// function Authenticator({ apiKey, render }) {\n//   return (\n//     <Mutation mutation={AUTH_MUTATION} variables={{ apiKey }}>\n//       {(login, { data, error }) => {\n//         const token = (data && data.login.token) || undefined;\n//         return (\n//           <CallLogin login={login}>\n//             {render({ error, token })}\n//           </CallLogin>\n//         )\n//       }}\n//     </Mutation>\n//   );\n// }\n\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: '',\n      login: false,\n    };\n  }\n\n  handleRes=(res) => {\n    console.log('NavBar handleRes res: ', res);\n    if (res) {\n      this.setState({\n        login: false,\n      });\n    }\n  };\n\n  handleItemClick = (e, data) => {\n    // console.log('NavBar handleItemClick: e', e);\n    console.log('NavBar handleItemClick data: ', data);\n    const { name } = data;\n    if (name === 'login') {\n      this.setState({\n        login: true,\n      });\n    }\n    if (name === 'logout') {\n      // this.setState({\n      //   login: e,\n      // });\n    }\n    if (name === 'taxservice') {\n      // Router.push({\n      //   pathname: '/categorytplist',\n      // });\n    }\n  };\n\n\n  render() {\n    // console.log('NavBar render this.state: ', this.state);\n    // console.log('Header render  this.props: ', this.props.isMobile);\n    const { activeItem, login } = this.state;\n    return (\n      <Query query={CURRENT_USER_QUERY}>\n        {({ data, loading }) => {\n\n          /* if (data!==undefined) {\n            console.log('NavBar render Query data: ', data);\n            console.log('NavBar render Query data loading: ', loading);\n            const {me} = data;\n            }\n          else {\n            console.log('NavBar render Query me loading: ', loading);\n            const me = false;\n            console.log('NavBar render Query me', me);\n            } */\n\n\n          //loading ? const me = false : const me = false;\n          return (\n            <>\n            <MenuDiv>\n              <Menu secondary borderless floated=\"right\">\n                <Menu.Menu position=\"right\" as=\"ul\">\n                  <Menu.Item\n                    name=\"home\"\n                    as=\"li\"\n                    onClick={this.handleItemClick}\n                  >\n                    <div className=\"MenuItem\">\n                      <Link href=\"/\">\n                        <a>Главная</a>\n                      </Link>\n                    </div>\n                  </Menu.Item>\n\n                  <Menu.Item\n                    name=\"tariffs\"\n                    as=\"li\"\n\n                    onClick={this.handleItemClick}\n                  >\n                    <div className=\"MenuItem\">\n                      <Link href=\"/tariffs\">\n                        <a>Профиль</a>\n                      </Link>\n                    </div>\n                  </Menu.Item>\n                  <Menu.Item\n                    name=\"tools\"\n                    as=\"li\"\n\n                    onClick={this.handleItemClick}\n                  >\n                    <div className=\"MenuItem\">\n                      <Link href=\"/tools\">\n                        <a>Сервисы</a>\n                      </Link>\n                    </div>\n                  </Menu.Item>\n                  { loading\n                    ?\n                    <i className=\"spinner icon\"></i> :\n                    <>\n                  {data.me  &&\n                    (\n                    <Menu.Item\n                      name=\"logout\"\n                      as=\"li\"\n                      onClick={this.handleItemClick}\n                    >\n                      <div className=\"MenuItem\">\n                        <Link href=\"#\">\n                          <a>\n                            <SignOut />\n                          </a>\n                        </Link>\n                      </div>\n                    </Menu.Item>\n                  )}\n                  {!data.me &&\n                  (\n                    <Menu.Item\n                      name=\"login\"\n                      as=\"li\"\n                      onClick={this.handleItemClick}\n                    >\n                      <div className=\"MenuItem\">\n                        <Link href=\"#\">\n                        <a>Войти</a>\n                        </Link>\n                      </div>\n                    </Menu.Item>\n                  )}\n                    </>\n                    //<a>{loading ? <i className=\"spinner icon\"></i> : <span>Войти</span>}</a>\n                  }\n                </Menu.Menu>\n              </Menu>\n            </MenuDiv>\n            {login &&\n            <Login handleRes={this.handleRes}/>}\n            </>\n          );\n          }}\n      </Query>\n    );\n  }\n}\n\nexport default NavBar;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAoGA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAhBA;AAkBA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAnCA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAgCA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;AAYA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlEA;AA8EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;;;;AArJA;AACA;AAuJA;;;;A","sourceRoot":""}