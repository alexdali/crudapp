{"version":3,"file":"static/webpack/static/development/pages/index.js.2b7e8991436530e9477a.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\n//import Pagination from './Pagination';\n//import { perPage } from '../config';\n\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    users {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  /* display: grid; */\n  display: block;\n  /* grid-template-columns: 1fr 1fr;\n  grid-gap: 60px; */\n  max-width: ${props => props.theme.maxWidth};\n  margin: 2.5rem 3rem;\n  padding: 0 4em;\n  @media (max-width: 700px) {\n    margin: 2.5rem 1rem;\n  }\n`;\n\nclass Items extends Component {\n  render() {\n    // console.log('Items component this.props', this.props);\n    return (\n      <Center>\n        {/* <Pagination page={this.props.page} /> */}\n        <Query\n          query={ALL_USERS_QUERY}\n        >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Загрузка...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <ItemsList>\n                {data.users.map(user => (\n                  <Item item={user} key={user.id} />\n                ))}\n              </ItemsList>\n            );\n          }}\n        </Query>\n        {/* <Pagination page={this.props.page} /> */}\n      </Center>\n    );\n  }\n}\n\nexport default Items;\nexport { ALL_USERS_QUERY };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAOA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAKA;;;;AAxBA;AACA;AA0BA;;;;;A","sourceRoot":""}