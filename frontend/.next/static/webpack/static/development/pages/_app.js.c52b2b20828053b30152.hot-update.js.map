{"version":3,"file":"static/webpack/static/development/pages/_app.js.c52b2b20828053b30152.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from 'next-with-apollo';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { onError } from 'apollo-link-error';\r\nimport { ApolloLink } from 'apollo-link';\r\nimport { endpoint, prodEndpoint } from '../config';\r\n//import { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION } from '../components/Cart';\r\n\r\n//const createClient = new ApolloClient({\r\nfunction createClient() {\r\n    return new ApolloClient({\r\n  link: ApolloLink.from([\r\n    onError(({ graphQLErrors, networkError }) => {\r\n      if (graphQLErrors)\r\n        graphQLErrors.forEach(({ message, locations, path }) =>\r\n          console.log(\r\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\r\n          ),\r\n        );\r\n      if (networkError) console.log(`[Network error]: ${networkError}`);\r\n    }),\r\n    new HttpLink({\r\n      uri: endpoint,\r\n      credentials: 'include'\r\n    })\r\n  ]),\r\n  cache: new InMemoryCache()\r\n});\r\n}\r\nexport default withApollo(createClient);\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AAhBA;AAkBA;AACA;AAAA;;;;A","sourceRoot":""}