{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { Card, Header, Icon } from 'semantic-ui-react'; // import ItemStyles from './styles/ItemStyles';\n//import BlockStyles from './styles/BlockStyles';\n// const Block = styled.div`\n//   background: white;\n//   border: 1px solid rgba(0, 0, 0, 0.1)};\n//   /* ${props => props.theme.offWhite}; */\n//   border-radius: 5px;\n//   box-shadow: ${props => props.theme.bs};\n//   position: relative;\n//   /* display: flex;\n//   flex-direction: column; */\n//   display: block;\n//   margin: 1.8rem auto;\n//   padding: 5px 0 10px;\n//   img {\n//     width: 100%;\n//     height: 400px;\n//     object-fit: scale-down;\n//     /* object-fit: cover; */\n//   }\n//   p {\n//     /* text-align: left;\n//     font-size: 12px;\n//     line-height: 2;\n//     font-weight: 300;\n//     /* flex-grow: 1; */\n//     /* padding: 0 3rem; */\n//     /* font-size: 1.5rem; */\n//   }\n//   .buttonList {\n//     display: grid;\n//     width: 100%;\n//     border-top: 1px solid ${props => props.theme.lightgrey};\n//     grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n//     grid-gap: 1px;\n//     background: ${props => props.theme.lightgrey};\n//     & > * {\n//       background: white;\n//       border: 0;\n//       font-size: 1rem;\n//       padding: 1rem;\n//     }\n//   }\n// `;\n// const Title = styled.h3`\n//   margin: 2px 1rem;\n//   text-align: left;\n//   /* margin-top: -0.5rem; */\n//   /* transform: skew(-5deg) rotate(-1deg); */\n//   text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n//   a {\n//     background: ${props => props.theme.green};\n//     display: inline;\n//     line-height: 1.3;\n//     font-size: 1.1rem;\n//     text-align: center;\n//     /* color: white; */\n//     padding: 0 1rem;\n//   }\n// `;\n// const Description = styled.p`\n//   text-align: justify;\n//   /* font-size: 12px; */\n//   line-height: 2;\n//   font-weight: 300;\n//   padding: 0 2rem;\n//   font-size: 0.85rem;\n// `;\n\nvar PostCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCard, _Component);\n\n  function PostCard() {\n    _classCallCheck(this, PostCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostCard).apply(this, arguments));\n  }\n\n  _createClass(PostCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          userId = _this$props.userId,\n          title = _this$props.title,\n          content = _this$props.content,\n          createdDate = _this$props.createdDate; // console.log('item component this.props', this.props);\n\n      return __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __jsx(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, __jsx(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, title), __jsx(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, userId), __jsx(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, createdDate), __jsx(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, content)), __jsx(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, __jsx(Icon, {\n        name: \"comment alternate outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), \"10 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0435\\u0432\")))\n      /* <Block>\n         <Title>\n           <Link\n             href={{\n               pathname: '/user',\n               query: { id: item.id },\n             }}\n           >\n             <a>{item.title}</a>\n           </Link>\n         </Title>\n         <Description>{item.userId}</Description>\n         <Description>{item.createdDate}</Description>\n         <div>{item.content}</div>\n       </Block> */\n      ;\n    }\n  }]);\n\n  return PostCard;\n}(Component);\n\n_defineProperty(PostCard, \"propTypes\", {\n  postcard: PropTypes.shape({\n    id: PropTypes.string,\n    userId: PropTypes.string,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    createdDate: PropTypes.string\n  }).isRequired\n});\n\nexport default PostCard;","map":{"version":3,"sources":["/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostCard.js"],"names":["React","Component","PropTypes","Link","styled","Card","Header","Icon","PostCard","props","id","userId","title","content","createdDate","postcard","shape","string","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAoC,mBAApC,C,CACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,Q;;;;;;;;;;;;;6BAWK;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACCC,EADD,eACCA,EADD;AAAA,UACKC,MADL,eACKA,MADL;AAAA,UACaC,KADb,eACaA,KADb;AAAA,UACoBC,OADpB,eACoBA,OADpB;AAAA,UAC6BC,WAD7B,eAC6BA,WAD7B,EAEP;;AACA,aACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcF,KAAd,CADF,EAEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYD,MAAZ,CAFF,EAGE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYG,WAAZ,CAHF,EAIE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,OAAnB,CAJF,CADE,EAOF,MAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gFADF,CAPE;AAcD;;;;;;;;;;;;;;;AAfD;AA+BD;;;;EA7CoBZ,S;;gBAAjBO,Q,eACe;AACjBO,EAAAA,QAAQ,EAAEb,SAAS,CAACc,KAAV,CAAgB;AACxBN,IAAAA,EAAE,EAAER,SAAS,CAACe,MADU;AAExBN,IAAAA,MAAM,EAAET,SAAS,CAACe,MAFM;AAGxBL,IAAAA,KAAK,EAAEV,SAAS,CAACe,MAHO;AAIxBJ,IAAAA,OAAO,EAAEX,SAAS,CAACe,MAJK;AAKxBH,IAAAA,WAAW,EAAEZ,SAAS,CAACe;AALC,GAAhB,EAMPC;AAPc,C;;AA8CrB,eAAeV,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { Card, Header, Icon, } from 'semantic-ui-react';\n// import ItemStyles from './styles/ItemStyles';\n//import BlockStyles from './styles/BlockStyles';\n\n\n// const Block = styled.div`\n//   background: white;\n//   border: 1px solid rgba(0, 0, 0, 0.1)};\n//   /* ${props => props.theme.offWhite}; */\n//   border-radius: 5px;\n//   box-shadow: ${props => props.theme.bs};\n//   position: relative;\n//   /* display: flex;\n//   flex-direction: column; */\n//   display: block;\n//   margin: 1.8rem auto;\n//   padding: 5px 0 10px;\n\n//   img {\n//     width: 100%;\n//     height: 400px;\n//     object-fit: scale-down;\n//     /* object-fit: cover; */\n//   }\n//   p {\n//     /* text-align: left;\n//     font-size: 12px;\n//     line-height: 2;\n//     font-weight: 300;\n//     /* flex-grow: 1; */\n//     /* padding: 0 3rem; */\n//     /* font-size: 1.5rem; */\n//   }\n//   .buttonList {\n//     display: grid;\n//     width: 100%;\n//     border-top: 1px solid ${props => props.theme.lightgrey};\n//     grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n//     grid-gap: 1px;\n//     background: ${props => props.theme.lightgrey};\n//     & > * {\n//       background: white;\n//       border: 0;\n//       font-size: 1rem;\n//       padding: 1rem;\n//     }\n//   }\n// `;\n\n// const Title = styled.h3`\n//   margin: 2px 1rem;\n//   text-align: left;\n//   /* margin-top: -0.5rem; */\n//   /* transform: skew(-5deg) rotate(-1deg); */\n//   text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n//   a {\n//     background: ${props => props.theme.green};\n//     display: inline;\n//     line-height: 1.3;\n//     font-size: 1.1rem;\n//     text-align: center;\n//     /* color: white; */\n//     padding: 0 1rem;\n//   }\n// `;\n\n// const Description = styled.p`\n//   text-align: justify;\n//   /* font-size: 12px; */\n//   line-height: 2;\n//   font-weight: 300;\n//   padding: 0 2rem;\n//   font-size: 0.85rem;\n// `;\n\nclass PostCard extends Component {\n  static propTypes = {\n    postcard: PropTypes.shape({\n      id: PropTypes.string,\n      userId: PropTypes.string,\n      title: PropTypes.string,\n      content: PropTypes.string,\n      createdDate: PropTypes.string,\n    }).isRequired,\n  };\n\n  render() {\n    const { id, userId, title, content, createdDate } = this.props;\n    // console.log('item component this.props', this.props);\n    return (\n      <Card>\n    <Card.Content>\n      <Card.Header>{title}</Card.Header>\n      <Card.Meta>{userId}</Card.Meta>\n      <Card.Meta>{createdDate}</Card.Meta>\n      <Card.Description>{content}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <a>\n        <Icon name='comment alternate outline' />\n        10 комментариев\n      </a>\n    </Card.Content>\n  </Card>\n     /* <Block>\n        <Title>\n          <Link\n            href={{\n              pathname: '/user',\n              query: { id: item.id },\n            }}\n          >\n            <a>{item.title}</a>\n          </Link>\n        </Title>\n        <Description>{item.userId}</Description>\n        <Description>{item.createdDate}</Description>\n        <div>{item.content}</div>\n      </Block> */\n    );\n  }\n}\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}