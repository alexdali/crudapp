{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/Login.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signIn(email: $email, password: $password) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag'; //import { adopt } from 'react-adopt';\n//import CartStyles from './styles/CartStyles';\n//import CloseButton from './styles/CloseButton';\n\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Button, Loader, Icon } from 'semantic-ui-react'; //import NProgress from 'nprogress';\n\nimport styled from 'styled-components';\nimport Form from './styles/Form'; //import Spinner from './styles/Spinner';\n//import Error from './ErrorMessage';\n\nimport User, { CURRENT_USER_QUERY } from './User'; // const LOCAL_STATE_QUERY = gql`\n//   query {\n//     cartOpen @client\n//   }\n// `;\n// const TOGGLE_CART_MUTATION = gql`\n//   mutation {\n//     toggleCart @client\n//   }\n// `;\n\nvar SIGNIN_MUTATION = gql(_templateObject());\nvar SignupPromt = styled.div.withConfig({\n  displayName: \"Login__SignupPromt\",\n  componentId: \"sc-1lb86wh-0\"\n})([\"\"]);\nvar RowDiv = styled.div.withConfig({\n  displayName: \"Login__RowDiv\",\n  componentId: \"sc-1lb86wh-1\"\n})([\"position:fixed;display:block;overflow:hidden;margin-left:70%;margin-top:45px;background:white;padding:20px;width:300px;z-index:100;}\"]);\nvar FormDiv = styled.div.withConfig({\n  displayName: \"Login__FormDiv\",\n  componentId: \"sc-1lb86wh-2\"\n})([\"box-sizing:border-box;margin:0;padding:0;color:rgba(0,0,0,0.65);font-size:14px;font-variant:tabular-nums;line-height:1.5;list-style:none;font-feature-settings:'tnum';form{max-height:300px;box-shadow:0 0 5px 3px rgba(0,0,0,0.05);background:rgba(0,0,0,0.02);border:5px solid white;font-size:1.5rem;line-height:1.5;font-weight:600;fieldset::before{height:1px;margin-bottom:25px;margin-top:10px;}}.formItem{position:relative;height:auto;display:block;box-sizing:border-box;margin:0;padding:0;color:rgba(0,0,0,0.65);font-size:14px;font-variant:tabular-nums;line-height:1.5;list-style:none;font-feature-settings:'tnum';margin-bottom:24px;.formItem-control{position:relative;line-height:40px;.input-wrapper{box-sizing:border-box;margin:0;padding:0;color:rgba(0,0,0,0.65);font-size:14px;font-variant:tabular-nums;line-height:1.5;list-style:none;font-feature-settings:'tnum';position:relative;display:inline-block;width:100%;text-align:start;input:not(:first-child){padding-left:30px;}input{position:relative;min-height:100%;}.input-prefix{position:absolute;margin-left:10px;top:50%;z-index:2;display:flex;-webkit-box-align:center;align-items:center;color:rgba(0,0,0,0.65);line-height:0;transform:translateY(-50%);}}input{box-sizing:border-box;margin:0;font-variant:tabular-nums;list-style:none;font-feature-settings:'tnum';display:inline-block;width:100%;height:32px;padding:4px 11px;color:rgba(0,0,0,0.65);font-size:14px;line-height:1.5;background-color:#fff;background-image:none;border:1px solid #d9d9d9;border-radius:4px;transition:all 0.3s;}}}.form-item-children{position:relative;}label{font-size:14px;}.checkbox-wrapper{box-sizing:border-box;margin:0;padding:0;color:rgba(0,0,0,0.65);font-variant:tabular-nums;list-style:none;font-feature-settings:'tnum';display:inline-block;line-height:unset;cursor:pointer;}span.checkbox{box-sizing:border-box;margin:0;padding:0;color:rgba(0,0,0,0.65);font-size:13px;font-variant:tabular-nums;list-style:none;font-feature-settings:'tnum';position:relative;top:-0.09em;display:inline-block;line-height:1;white-space:nowrap;vertical-align:middle;outline:none;cursor:pointer;+ span{padding-right:8px;padding-left:8px;}}input[type='checkbox']{line-height:normal;width:14px;height:14px;box-sizing:border-box;padding:0;}.checkbox-inner{position:relative;top:0;left:0;display:block;width:16px;height:16px;border:1px solid #d9d9d9;border-radius:2px;border-collapse:separate;transition:all 0.3s;}.login-form-forgot{float:right;font-size:13px;}a{color:rgba(0,0,0,0.65);font-size:13px;text-decoration:none;background-color:transparent;outline:none;cursor:pointer;transition:color 0.3s;font-style:normal;font-weight:400;&:hover{color:#1ab394;font-weight:600;}}.login-form-button{width:100%;}\"]);\n/* eslint-disable */\n// const Composed = adopt({\n//   user: ({render}) => <User>{render}</User>,\n//   toggleCart: ({render}) => <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>,\n//   localState: ({render}) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>,\n// });\n\n/* eslint-enable */\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      //name: '',\n      password: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log('Signin this.props: ', this.props);\n      // console.log('Signin this.state: ', this.state);\n      return __jsx(Mutation, {\n        mutation: SIGNIN_MUTATION,\n        variables: {\n          email: this.state.email,\n          password: this.state.password\n        },\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, function (signIn, _ref) {\n        var error = _ref.error,\n            loading = _ref.loading;\n        return __jsx(RowDiv, {\n          className: \"login-background\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"blur\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, __jsx(FormDiv, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, __jsx(Form, {\n          method: \"post\",\n          onSubmit:\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(e) {\n              var res;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log('Signin onSubmit-> e ', e);\n                      e.preventDefault(); // if (loading) {\n                      //   this.setState({ loading });\n                      // }\n\n                      console.log('Signin this.state: ', _this2.state);\n                      _context.next = 5;\n                      return signIn();\n\n                    case 5:\n                      res = _context.sent;\n                      console.log('signIn -> render -> res', res);\n                      console.log('Signin this.props: ', _this2.props);\n\n                      _this2.props.handleRes(res);\n\n                      _this2.setState({\n                        email: '',\n                        name: '',\n                        password: ''\n                      }, function () {// console.log('TCL: signin -> setState clear');\n                        // Router.push({\n                        //   pathname: '/',\n                        // });\n                      });\n\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, __jsx(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"formItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"formItem-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"input-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"input-prefix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, __jsx(Icon, {\n          name: \"mail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        })), __jsx(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"email\",\n          value: _this2.state.email,\n          onChange: _this2.saveToState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }))))), __jsx(\"div\", {\n          className: \"formItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"formItem-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"input-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"input-prefix\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, __jsx(Icon, {\n          name: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        })), __jsx(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"\\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: _this2.state.password,\n          onChange: _this2.saveToState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }))))), __jsx(\"div\", {\n          className: \"formItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"formItem-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"form-item-children\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          type: \"submit\",\n          className: \"ant-btn ant-btn-primary login-form-button \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"))))))))));\n      });\n    }\n  }]);\n\n  return Login;\n}(Component); //const Login = () => (\n// <Composed>\n//   {({ user, toggleCart, localState }) => {\n//     const { me } = user.data;\n//     if (!me) return null;\n//     return (\n//       <CartStyles open={localState.data.cartOpen}>\n//         <header>\n//           <CloseButton onClick={toggleCart} title=\"close\">\n//             ❌\n//           </CloseButton>\n//           <Supreme>{me.name}'s Cart</Supreme>\n//           <p>\n//             You Have {me.cart.length} Item\n//             {me.cart.length === 1 ? '' : 's'} in your cart\n//           </p>\n//         </header>\n//         <ul>\n//           {me.cart.map(cartItem => (\n//             <CartItem key={cartItem.id} cartItem={cartItem} />\n//           ))}\n//         </ul>\n//         <footer>\n//           <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n//           {me.cart.length && (\n//             <TakeMyMoney>\n//               <SickButton>Checkout</SickButton>\n//             </TakeMyMoney>\n//           )}\n//         </footer>\n//       </CartStyles>\n//     );\n//   }}\n// </Composed>\n//);\n\n\nexport default Login; //export { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","map":{"version":3,"sources":["/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/Login.js"],"names":["React","Component","Mutation","Query","gql","Link","Router","Button","Loader","Icon","styled","Form","User","CURRENT_USER_QUERY","SIGNIN_MUTATION","SignupPromt","div","RowDiv","FormDiv","Login","email","password","loading","e","setState","target","name","value","state","query","signIn","error","console","log","preventDefault","res","props","handleRes","saveToState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n//import { adopt } from 'react-adopt';\n//import CartStyles from './styles/CartStyles';\n//import CloseButton from './styles/CloseButton';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Button, Loader, Icon } from 'semantic-ui-react';\n//import NProgress from 'nprogress';\nimport styled from 'styled-components';\nimport Form from './styles/Form';\n//import Spinner from './styles/Spinner';\n//import Error from './ErrorMessage';\nimport User,{ CURRENT_USER_QUERY } from './User';\n\n\n// const LOCAL_STATE_QUERY = gql`\n//   query {\n//     cartOpen @client\n//   }\n// `;\n\n// const TOGGLE_CART_MUTATION = gql`\n//   mutation {\n//     toggleCart @client\n//   }\n// `;\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signIn(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst SignupPromt = styled.div`\n  /* text-align: center;\n  font-size: 1rem;\n  margin: 1rem 0;\n  p {\n    margin: 0;\n  }\n  a {\n    background: lightgrey;\n    text-transform: uppercase;\n    font-weight: 800;\n    font-size: 1em;\n    cursor: pointer;\n    color: ${props => props.theme.black};\n  } */\n`;\n\nconst RowDiv = styled.div`\nposition: fixed;\ndisplay: block;\noverflow: hidden;\n    margin-left: 70%;\n    margin-top: 45px;\n    background: white;\n    padding: 20px;\n    width: 300px;\n    z-index: 100;\n    /* color: #fff;\n    text-align: center;\n    text-shadow: 0 0 5px rgba(0,0,0,.5); */\n    /* .login-background {\n    transition: .6s filter;\n    }\n    .login-background.de-emphasized {\n    filter: blur(5px);\n    } */\n    /* .blur {\n    z-index: 99;\n    background-image: url(image.png);\n    background-size: cover;\n    background-repeat: no-repeat; */\n}\n`;\n\nconst FormDiv = styled.div`\n  /* max-width: 300px; */\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  color: rgba(0, 0, 0, 0.65);\n  font-size: 14px;\n  font-variant: tabular-nums;\n  line-height: 1.5;\n  list-style: none;\n  font-feature-settings: 'tnum';\n  form {\n    max-height: 300px;\n    box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n    background: rgba(0, 0, 0, 0.02);\n    border: 5px solid white;\n    /* padding: 5px; */\n    font-size: 1.5rem;\n    line-height: 1.5;\n    font-weight: 600;\n    fieldset::before {\n      height: 1px;\n      margin-bottom: 25px;\n      margin-top: 10px;\n    }\n  }\n  .formItem {\n    position: relative;\n    height: auto;\n    display: block;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    color: rgba(0, 0, 0, 0.65);\n    font-size: 14px;\n    font-variant: tabular-nums;\n    line-height: 1.5;\n    list-style: none;\n    font-feature-settings: 'tnum';\n    margin-bottom: 24px;\n    .formItem-control {\n      position: relative;\n      line-height: 40px;\n      .input-wrapper {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n        color: rgba(0, 0, 0, 0.65);\n        font-size: 14px;\n        font-variant: tabular-nums;\n        line-height: 1.5;\n        list-style: none;\n        font-feature-settings: 'tnum';\n        position: relative;\n        display: inline-block;\n        width: 100%;\n        text-align: start;\n        input:not(:first-child) {\n          padding-left: 30px;\n        }\n        input {\n          position: relative;\n          min-height: 100%;\n        }\n        .input-prefix {\n          position: absolute;\n          margin-left: 10px;\n          top: 50%;\n          z-index: 2;\n          display: flex;\n          -webkit-box-align: center;\n          align-items: center;\n          color: rgba(0, 0, 0, 0.65);\n          line-height: 0;\n          transform: translateY(-50%);\n        }\n      }\n      input {\n        box-sizing: border-box;\n        margin: 0;\n        font-variant: tabular-nums;\n        list-style: none;\n        font-feature-settings: 'tnum';\n        display: inline-block;\n        width: 100%;\n        height: 32px;\n        padding: 4px 11px;\n        color: rgba(0, 0, 0, 0.65);\n        font-size: 14px;\n        line-height: 1.5;\n        background-color: #fff;\n        background-image: none;\n        border: 1px solid #d9d9d9;\n        border-radius: 4px;\n        transition: all 0.3s;\n      }\n    }\n  }\n  .form-item-children {\n    position: relative;\n  }\n  label {\n    font-size: 14px;\n  }\n  .checkbox-wrapper {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    color: rgba(0, 0, 0, 0.65);\n    font-variant: tabular-nums;\n    list-style: none;\n    font-feature-settings: 'tnum';\n    display: inline-block;\n    line-height: unset;\n    cursor: pointer;\n  }\n  span.checkbox {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    color: rgba(0, 0, 0, 0.65);\n    font-size: 13px;\n    font-variant: tabular-nums;\n    list-style: none;\n    font-feature-settings: 'tnum';\n    position: relative;\n    top: -0.09em;\n    display: inline-block;\n    line-height: 1;\n    white-space: nowrap;\n    vertical-align: middle;\n    outline: none;\n    cursor: pointer;\n    + span {\n      padding-right: 8px;\n      padding-left: 8px;\n    }\n  }\n  input[type='checkbox'] {\n    line-height: normal;\n    width: 14px;\n    height: 14px;\n    box-sizing: border-box;\n    padding: 0;\n  }\n  .checkbox-inner {\n    position: relative;\n    top: 0;\n    left: 0;\n    display: block;\n    width: 16px;\n    height: 16px;\n    border: 1px solid #d9d9d9;\n    border-radius: 2px;\n    border-collapse: separate;\n    transition: all 0.3s;\n  }\n  .login-form-forgot {\n    float: right;\n    font-size: 13px;\n  }\n  a {\n    color: rgba(0, 0, 0, 0.65);\n    font-size: 13px;\n    text-decoration: none;\n    background-color: transparent;\n    outline: none;\n    cursor: pointer;\n    transition: color 0.3s;\n    font-style: normal;\n    font-weight: 400;\n    &:hover {\n      color: #1ab394;\n      font-weight: 600;\n    }\n  }\n  .login-form-button {\n    width: 100%;\n  }\n`;\n\n/* eslint-disable */\n// const Composed = adopt({\n//   user: ({render}) => <User>{render}</User>,\n//   toggleCart: ({render}) => <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>,\n//   localState: ({render}) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>,\n// });\n/* eslint-enable */\n\nclass Login extends Component {\n  state = {\n    email: '',\n    //name: '',\n    password: '',\n    loading: false,\n  };\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    // console.log('Signin this.props: ', this.props);\n    // console.log('Signin this.state: ', this.state);\n    return (\n      <Mutation\n        mutation={SIGNIN_MUTATION}\n        variables={{email: this.state.email, password: this.state.password,}}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signIn, { error, loading }) => (\n          <RowDiv className=\"login-background\">\n          <div className=\"blur\">\n            <FormDiv>\n              <Form\n                method=\"post\"\n                onSubmit={async e => {\n                  console.log('Signin onSubmit-> e ', e);\n                  e.preventDefault();\n                  // if (loading) {\n                  //   this.setState({ loading });\n                  // }\n                  console.log('Signin this.state: ', this.state);\n                  const res = await signIn();\n                  console.log('signIn -> render -> res', res);\n                  console.log('Signin this.props: ', this.props);\n                  this.props.handleRes(res);\n                  this.setState({ email: '', name: '', password: '' }, () => {\n                    // console.log('TCL: signin -> setState clear');\n                    // Router.push({\n                    //   pathname: '/',\n                    // });\n                  });\n                }}\n              >\n                <fieldset disabled={loading} aria-busy={loading}>\n                  {/* <Error error={error} /> */}\n                  <div className=\"formItem\">\n                    <label htmlFor=\"email\">\n                      <div className=\"formItem-control\">\n                        <span className=\"input-wrapper\">\n                          <span className=\"input-prefix\">\n                            <Icon name=\"mail\" />\n                          </span>\n                          <input\n                            type=\"text\"\n                            name=\"email\"\n                            placeholder=\"email\"\n                            value={this.state.email}\n                            onChange={this.saveToState}\n                          />\n                        </span>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"formItem\">\n                    <label htmlFor=\"password\">\n                      <div className=\"formItem-control\">\n                        <span className=\"input-wrapper\">\n                          <span className=\"input-prefix\">\n                            <Icon name=\"lock\" />\n                          </span>\n                          <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"пароль\"\n                            value={this.state.password}\n                            onChange={this.saveToState}\n                          />\n                        </span>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"formItem\">\n                    <div className=\"formItem-control\">\n                      <span className=\"form-item-children\">\n                        <button\n                          type=\"submit\"\n                          className=\"ant-btn ant-btn-primary login-form-button \"\n                        >\n                          <span>Войти</span>\n                        </button>\n                      </span>\n                    </div>\n                  </div>\n                </fieldset>\n              </Form>\n            </FormDiv>\n            </div>\n          </RowDiv>\n        )}\n      </Mutation>\n    );\n  }\n}\n\n\n//const Login = () => (\n  // <Composed>\n  //   {({ user, toggleCart, localState }) => {\n  //     const { me } = user.data;\n  //     if (!me) return null;\n  //     return (\n  //       <CartStyles open={localState.data.cartOpen}>\n  //         <header>\n  //           <CloseButton onClick={toggleCart} title=\"close\">\n  //             ❌\n  //           </CloseButton>\n  //           <Supreme>{me.name}'s Cart</Supreme>\n  //           <p>\n  //             You Have {me.cart.length} Item\n  //             {me.cart.length === 1 ? '' : 's'} in your cart\n  //           </p>\n  //         </header>\n  //         <ul>\n  //           {me.cart.map(cartItem => (\n  //             <CartItem key={cartItem.id} cartItem={cartItem} />\n  //           ))}\n  //         </ul>\n  //         <footer>\n  //           <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n  //           {me.cart.length && (\n  //             <TakeMyMoney>\n  //               <SickButton>Checkout</SickButton>\n  //             </TakeMyMoney>\n  //           )}\n  //         </footer>\n  //       </CartStyles>\n  //     );\n  //   }}\n  // </Composed>\n//);\n\n\nexport default Login;\n//export { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };\n"]},"metadata":{},"sourceType":"module"}