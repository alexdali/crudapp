{"ast":null,"code":"var _jsxFileName = \"/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/Items.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item'; //import Pagination from './Pagination';\n//import { perPage } from '../config';\n\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    users {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\nconst ALL_POSTS_QUERY = gql`\n  query ALL_POSTS_QUERY {\n    posts {\n      id\n      title\n      userId\n      content\n      createdDate\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Items__Center\",\n  componentId: \"ssjke4-0\"\n})([\"text-align:center;\"]);\nconst ItemsList = styled.div.withConfig({\n  displayName: \"Items__ItemsList\",\n  componentId: \"ssjke4-1\"\n})([\"display:block;max-width:\", \";margin:2.5rem 3rem;padding:0 4em;@media (max-width:700px){margin:2.5rem 1rem;}\"], props => props.theme.maxWidth); // const DynamicComponentWithNoSSR = dynamic(\n//   () => import('../components/Item'),\n//   { ssr: false }\n// )\n\nclass Items extends Component {\n  render() {\n    // console.log('Items component this.props', this.props);\n    return __jsx(Center, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(Query, {\n      query: ALL_POSTS_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n      if (error) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Error: \", error.message);\n      return __jsx(ItemsList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, data.posts.map(post => __jsx(Item, {\n        item: post,\n        key: post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }));\n  }\n\n}\n\nexport default Items;\nexport { ALL_USERS_QUERY };","map":{"version":3,"sources":["/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/Items.js"],"names":["React","Component","dynamic","Query","gql","styled","Item","ALL_USERS_QUERY","ALL_POSTS_QUERY","Center","div","ItemsList","props","theme","maxWidth","Items","render","data","error","loading","message","posts","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AACA;;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;CAA5B;AAUA,MAAMI,eAAe,GAAGJ,GAAI;;;;;;;;;;CAA5B;AAYA,MAAMK,MAAM,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIA,MAAMC,SAAS,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,oHAKAE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QALrB,CAAf,C,CAaA;AACA;AACA;AACA;;AAEA,MAAMC,KAAN,SAAoBd,SAApB,CAA8B;AAC5Be,EAAAA,MAAM,GAAG;AACP;AACA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAER,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,CAAC;AAAES,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,KAA8B;AAC7B,UAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAAP;AACb,UAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,aACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAClB,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD,KAbH,CAFF,CADF;AAqBD;;AAxB2B;;AA2B9B,eAAeT,KAAf;AACA,SAASR,eAAT","sourcesContent":["import React, { Component } from 'react';\nimport dynamic from 'next/dynamic'\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\n//import Pagination from './Pagination';\n//import { perPage } from '../config';\n\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    users {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\n\nconst ALL_POSTS_QUERY = gql`\n  query ALL_POSTS_QUERY {\n    posts {\n      id\n      title\n      userId\n      content\n      createdDate\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  /* display: grid; */\n  display: block;\n  /* grid-template-columns: 1fr 1fr;\n  grid-gap: 60px; */\n  max-width: ${props => props.theme.maxWidth};\n  margin: 2.5rem 3rem;\n  padding: 0 4em;\n  @media (max-width: 700px) {\n    margin: 2.5rem 1rem;\n  }\n`;\n\n// const DynamicComponentWithNoSSR = dynamic(\n//   () => import('../components/Item'),\n//   { ssr: false }\n// )\n\nclass Items extends Component {\n  render() {\n    // console.log('Items component this.props', this.props);\n    return (\n      <Center>\n        {/* <Pagination page={this.props.page} /> */}\n        <Query\n          query={ALL_POSTS_QUERY}\n        >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Загрузка...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <ItemsList>\n                {data.posts.map(post => (\n                  <Item item={post} key={post.id} />\n                ))}\n              </ItemsList>\n            );\n          }}\n        </Query>\n        {/* <Pagination page={this.props.page} /> */}\n      </Center>\n    );\n  }\n}\n\nexport default Items;\nexport { ALL_USERS_QUERY };\n"]},"metadata":{},"sourceType":"module"}