{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { Card, Header, Icon, Item } from 'semantic-ui-react'; // import ItemStyles from './styles/ItemStyles';\n//import BlockStyles from './styles/BlockStyles';\n// const Block = styled.div`\n//   background: white;\n//   border: 1px solid rgba(0, 0, 0, 0.1)};\n//   /* ${props => props.theme.offWhite}; */\n//   border-radius: 5px;\n//   box-shadow: ${props => props.theme.bs};\n//   position: relative;\n//   /* display: flex;\n//   flex-direction: column; */\n//   display: block;\n//   margin: 1.8rem auto;\n//   padding: 5px 0 10px;\n//   img {\n//     width: 100%;\n//     height: 400px;\n//     object-fit: scale-down;\n//     /* object-fit: cover; */\n//   }\n//   p {\n//     /* text-align: left;\n//     font-size: 12px;\n//     line-height: 2;\n//     font-weight: 300;\n//     /* flex-grow: 1; */\n//     /* padding: 0 3rem; */\n//     /* font-size: 1.5rem; */\n//   }\n//   .buttonList {\n//     display: grid;\n//     width: 100%;\n//     border-top: 1px solid ${props => props.theme.lightgrey};\n//     grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n//     grid-gap: 1px;\n//     background: ${props => props.theme.lightgrey};\n//     & > * {\n//       background: white;\n//       border: 0;\n//       font-size: 1rem;\n//       padding: 1rem;\n//     }\n//   }\n// `;\n// const Title = styled.h3`\n//   margin: 2px 1rem;\n//   text-align: left;\n//   /* margin-top: -0.5rem; */\n//   /* transform: skew(-5deg) rotate(-1deg); */\n//   text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n//   a {\n//     background: ${props => props.theme.green};\n//     display: inline;\n//     line-height: 1.3;\n//     font-size: 1.1rem;\n//     text-align: center;\n//     /* color: white; */\n//     padding: 0 1rem;\n//   }\n// `;\n// const Description = styled.p`\n//   text-align: justify;\n//   /* font-size: 12px; */\n//   line-height: 2;\n//   font-weight: 300;\n//   padding: 0 2rem;\n//   font-size: 0.85rem;\n// `;\n\nvar PostCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCard, _Component);\n\n  function PostCard() {\n    _classCallCheck(this, PostCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostCard).apply(this, arguments));\n  }\n\n  _createClass(PostCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$postcard = this.props.postcard,\n          id = _this$props$postcard.id,\n          userId = _this$props$postcard.userId,\n          title = _this$props$postcard.title,\n          content = _this$props$postcard.content,\n          createdDate = _this$props$postcard.createdDate;\n      console.log('PostCard this.props', this.props);\n      return __jsx(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __jsx(Item.Image, {\n        size: \"tiny\",\n        src: \"https://react.semantic-ui.com/images/wireframe/image.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), __jsx(Item.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, __jsx(Item.Header, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, title), __jsx(Item.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, userId), __jsx(Item.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"  \", content, \"    \"), __jsx(Item.Extra, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, createdDate)))\n      /*  <Card fluid raised>\n      <Card.Content>\n       <Card.Header>{title}</Card.Header>\n       <Card.Meta>{userId}</Card.Meta>\n       <Card.Meta>{createdDate}</Card.Meta>\n       <Card.Description>{content}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n       <a>\n         <Icon name='comment alternate outline' />\n         10 комментариев\n       </a>\n      </Card.Content>\n      </Card>\n      <Block>\n         <Title>\n           <Link\n             href={{\n               pathname: '/user',\n               query: { id: item.id },\n             }}\n           >\n             <a>{item.title}</a>\n           </Link>\n         </Title>\n         <Description>{item.userId}</Description>\n         <Description>{item.createdDate}</Description>\n         <div>{item.content}</div>\n       </Block> */\n      ;\n    }\n  }]);\n\n  return PostCard;\n}(Component);\n\n_defineProperty(PostCard, \"propTypes\", {\n  postcard: PropTypes.shape({\n    id: PropTypes.string,\n    userId: PropTypes.string,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    createdDate: PropTypes.string\n  }).isRequired\n});\n\nexport default PostCard;","map":{"version":3,"sources":["/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostCard.js"],"names":["React","Component","PropTypes","Link","styled","Card","Header","Icon","Item","PostCard","props","postcard","id","userId","title","content","createdDate","console","log","shape","string","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,mBAAzC,C,CACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,Q;;;;;;;;;;;;;6BAWK;AAAA,iCAC6C,KAAKC,KAAL,CAAWC,QADxD;AAAA,UACCC,EADD,wBACCA,EADD;AAAA,UACKC,MADL,wBACKA,MADL;AAAA,UACaC,KADb,wBACaA,KADb;AAAA,UACoBC,OADpB,wBACoBA,OADpB;AAAA,UAC6BC,WAD7B,wBAC6BA,WAD7B;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKR,KAAxC;AACA,aACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,GAAG,EAAC,0DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGA,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBI,KAArB,CADF,EAEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYD,MAAZ,CAFF,EAGE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqBE,OAArB,SAHF,EAIE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaC,WAAb,CAJF,CAHA;AAUD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXD;AAyCD;;;;EAvDoBf,S;;gBAAjBQ,Q,eACe;AACjBE,EAAAA,QAAQ,EAAET,SAAS,CAACiB,KAAV,CAAgB;AACxBP,IAAAA,EAAE,EAAEV,SAAS,CAACkB,MADU;AAExBP,IAAAA,MAAM,EAAEX,SAAS,CAACkB,MAFM;AAGxBN,IAAAA,KAAK,EAAEZ,SAAS,CAACkB,MAHO;AAIxBL,IAAAA,OAAO,EAAEb,SAAS,CAACkB,MAJK;AAKxBJ,IAAAA,WAAW,EAAEd,SAAS,CAACkB;AALC,GAAhB,EAMPC;AAPc,C;;AAwDrB,eAAeZ,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { Card, Header, Icon, Item } from 'semantic-ui-react';\n// import ItemStyles from './styles/ItemStyles';\n//import BlockStyles from './styles/BlockStyles';\n\n\n// const Block = styled.div`\n//   background: white;\n//   border: 1px solid rgba(0, 0, 0, 0.1)};\n//   /* ${props => props.theme.offWhite}; */\n//   border-radius: 5px;\n//   box-shadow: ${props => props.theme.bs};\n//   position: relative;\n//   /* display: flex;\n//   flex-direction: column; */\n//   display: block;\n//   margin: 1.8rem auto;\n//   padding: 5px 0 10px;\n\n//   img {\n//     width: 100%;\n//     height: 400px;\n//     object-fit: scale-down;\n//     /* object-fit: cover; */\n//   }\n//   p {\n//     /* text-align: left;\n//     font-size: 12px;\n//     line-height: 2;\n//     font-weight: 300;\n//     /* flex-grow: 1; */\n//     /* padding: 0 3rem; */\n//     /* font-size: 1.5rem; */\n//   }\n//   .buttonList {\n//     display: grid;\n//     width: 100%;\n//     border-top: 1px solid ${props => props.theme.lightgrey};\n//     grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n//     grid-gap: 1px;\n//     background: ${props => props.theme.lightgrey};\n//     & > * {\n//       background: white;\n//       border: 0;\n//       font-size: 1rem;\n//       padding: 1rem;\n//     }\n//   }\n// `;\n\n// const Title = styled.h3`\n//   margin: 2px 1rem;\n//   text-align: left;\n//   /* margin-top: -0.5rem; */\n//   /* transform: skew(-5deg) rotate(-1deg); */\n//   text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n//   a {\n//     background: ${props => props.theme.green};\n//     display: inline;\n//     line-height: 1.3;\n//     font-size: 1.1rem;\n//     text-align: center;\n//     /* color: white; */\n//     padding: 0 1rem;\n//   }\n// `;\n\n// const Description = styled.p`\n//   text-align: justify;\n//   /* font-size: 12px; */\n//   line-height: 2;\n//   font-weight: 300;\n//   padding: 0 2rem;\n//   font-size: 0.85rem;\n// `;\n\nclass PostCard extends Component {\n  static propTypes = {\n    postcard: PropTypes.shape({\n      id: PropTypes.string,\n      userId: PropTypes.string,\n      title: PropTypes.string,\n      content: PropTypes.string,\n      createdDate: PropTypes.string,\n    }).isRequired,\n  };\n\n  render() {\n    const { id, userId, title, content, createdDate } = this.props.postcard;\n    console.log('PostCard this.props', this.props);\n    return (\n      <Item>\n      <Item.Image size='tiny' src='https://react.semantic-ui.com/images/wireframe/image.png' />\n\n      <Item.Content>\n        <Item.Header as='a'>{title}</Item.Header>\n        <Item.Meta>{userId}</Item.Meta>\n        <Item.Description>  {content}    </Item.Description>\n        <Item.Extra>{createdDate}</Item.Extra>\n      </Item.Content>\n    </Item>\n     /*  <Card fluid raised>\n    <Card.Content>\n      <Card.Header>{title}</Card.Header>\n      <Card.Meta>{userId}</Card.Meta>\n      <Card.Meta>{createdDate}</Card.Meta>\n      <Card.Description>{content}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <a>\n        <Icon name='comment alternate outline' />\n        10 комментариев\n      </a>\n    </Card.Content>\n  </Card>\n     <Block>\n        <Title>\n          <Link\n            href={{\n              pathname: '/user',\n              query: { id: item.id },\n            }}\n          >\n            <a>{item.title}</a>\n          </Link>\n        </Title>\n        <Description>{item.userId}</Description>\n        <Description>{item.createdDate}</Description>\n        <div>{item.content}</div>\n      </Block> */\n    );\n  }\n}\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}