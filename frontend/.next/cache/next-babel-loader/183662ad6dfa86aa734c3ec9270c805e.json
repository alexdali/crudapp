{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { Card, Header, Icon, Item, Divider, Label } from 'semantic-ui-react'; // import ItemStyles from './styles/ItemStyles';\n//import BlockStyles from './styles/BlockStyles';\n// const Block = styled.div`\n//   background: white;\n//   border: 1px solid rgba(0, 0, 0, 0.1)};\n//   /* ${props => props.theme.offWhite}; */\n//   border-radius: 5px;\n//   box-shadow: ${props => props.theme.bs};\n//   position: relative;\n//   /* display: flex;\n//   flex-direction: column; */\n//   display: block;\n//   margin: 1.8rem auto;\n//   padding: 5px 0 10px;\n//   img {\n//     width: 100%;\n//     height: 400px;\n//     object-fit: scale-down;\n//     /* object-fit: cover; */\n//   }\n//   p {\n//     /* text-align: left;\n//     font-size: 12px;\n//     line-height: 2;\n//     font-weight: 300;\n//     /* flex-grow: 1; */\n//     /* padding: 0 3rem; */\n//     /* font-size: 1.5rem; */\n//   }\n//   .buttonList {\n//     display: grid;\n//     width: 100%;\n//     border-top: 1px solid ${props => props.theme.lightgrey};\n//     grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n//     grid-gap: 1px;\n//     background: ${props => props.theme.lightgrey};\n//     & > * {\n//       background: white;\n//       border: 0;\n//       font-size: 1rem;\n//       padding: 1rem;\n//     }\n//   }\n// `;\n// const Title = styled.h3`\n//   margin: 2px 1rem;\n//   text-align: left;\n//   /* margin-top: -0.5rem; */\n//   /* transform: skew(-5deg) rotate(-1deg); */\n//   text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n//   a {\n//     background: ${props => props.theme.green};\n//     display: inline;\n//     line-height: 1.3;\n//     font-size: 1.1rem;\n//     text-align: center;\n//     /* color: white; */\n//     padding: 0 1rem;\n//   }\n// `;\n// const Description = styled.p`\n//   text-align: justify;\n//   /* font-size: 12px; */\n//   line-height: 2;\n//   font-weight: 300;\n//   padding: 0 2rem;\n//   font-size: 0.85rem;\n// `;\n\nclass PostCard extends Component {\n  render() {\n    const {\n      id,\n      userId,\n      title,\n      content,\n      createdDate\n    } = this.props.postcard;\n    console.log('PostCard this.props', this.props);\n    return __jsx(Link, {\n      href: {\n        pathname: './post',\n        query: {\n          id\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(Item.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(Item.Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, title), __jsx(Divider, {\n      clearing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), __jsx(Label, {\n      as: \"span\",\n      color: \"orange\",\n      ribbon: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, createdDate), __jsx(Item.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, userId), __jsx(Item.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, content)), __jsx(Divider, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), __jsx(Item.Extra, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(Label, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(Icon, {\n      name: \"comment alternate outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \" 12\"))))))\n    /*  <Card fluid raised>\n    <Card.Content>\n     <Card.Header>{title}</Card.Header>\n     <Card.Meta>{userId}</Card.Meta>\n     <Card.Meta>{createdDate}</Card.Meta>\n     <Card.Description>{content}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n     <a>\n       <Icon name='comment alternate outline' />\n       10 комментариев\n     </a>\n    </Card.Content>\n    </Card>\n    <Block>\n       <Title>\n         <Link\n           href={{\n             pathname: '/user',\n             query: { id: item.id },\n           }}\n         >\n           <a>{item.title}</a>\n         </Link>\n       </Title>\n       <Description>{item.userId}</Description>\n       <Description>{item.createdDate}</Description>\n       <div>{item.content}</div>\n     </Block> */\n    ;\n  }\n\n}\n\n_defineProperty(PostCard, \"propTypes\", {\n  postcard: PropTypes.shape({\n    id: PropTypes.string,\n    userId: PropTypes.string,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    createdDate: PropTypes.string\n  }).isRequired\n});\n\nexport default PostCard;","map":{"version":3,"sources":["/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostCard.js"],"names":["React","Component","PropTypes","Link","styled","Card","Header","Icon","Item","Divider","Label","PostCard","render","id","userId","title","content","createdDate","props","postcard","console","log","pathname","query","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { Card, Header, Icon, Item, Divider, Label } from 'semantic-ui-react';\n// import ItemStyles from './styles/ItemStyles';\n//import BlockStyles from './styles/BlockStyles';\n\n\n// const Block = styled.div`\n//   background: white;\n//   border: 1px solid rgba(0, 0, 0, 0.1)};\n//   /* ${props => props.theme.offWhite}; */\n//   border-radius: 5px;\n//   box-shadow: ${props => props.theme.bs};\n//   position: relative;\n//   /* display: flex;\n//   flex-direction: column; */\n//   display: block;\n//   margin: 1.8rem auto;\n//   padding: 5px 0 10px;\n\n//   img {\n//     width: 100%;\n//     height: 400px;\n//     object-fit: scale-down;\n//     /* object-fit: cover; */\n//   }\n//   p {\n//     /* text-align: left;\n//     font-size: 12px;\n//     line-height: 2;\n//     font-weight: 300;\n//     /* flex-grow: 1; */\n//     /* padding: 0 3rem; */\n//     /* font-size: 1.5rem; */\n//   }\n//   .buttonList {\n//     display: grid;\n//     width: 100%;\n//     border-top: 1px solid ${props => props.theme.lightgrey};\n//     grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n//     grid-gap: 1px;\n//     background: ${props => props.theme.lightgrey};\n//     & > * {\n//       background: white;\n//       border: 0;\n//       font-size: 1rem;\n//       padding: 1rem;\n//     }\n//   }\n// `;\n\n// const Title = styled.h3`\n//   margin: 2px 1rem;\n//   text-align: left;\n//   /* margin-top: -0.5rem; */\n//   /* transform: skew(-5deg) rotate(-1deg); */\n//   text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n//   a {\n//     background: ${props => props.theme.green};\n//     display: inline;\n//     line-height: 1.3;\n//     font-size: 1.1rem;\n//     text-align: center;\n//     /* color: white; */\n//     padding: 0 1rem;\n//   }\n// `;\n\n// const Description = styled.p`\n//   text-align: justify;\n//   /* font-size: 12px; */\n//   line-height: 2;\n//   font-weight: 300;\n//   padding: 0 2rem;\n//   font-size: 0.85rem;\n// `;\n\nclass PostCard extends Component {\n  static propTypes = {\n    postcard: PropTypes.shape({\n      id: PropTypes.string,\n      userId: PropTypes.string,\n      title: PropTypes.string,\n      content: PropTypes.string,\n      createdDate: PropTypes.string,\n    }).isRequired,\n  };\n\n  render() {\n    const { id, userId, title, content, createdDate } = this.props.postcard;\n    console.log('PostCard this.props', this.props);\n    return (\n      <Link\n          href={{\n              pathname: './post',\n              query: { id },\n            }}\n          >\n            <a>\n      <Item>\n      {/* <Item.Image size='tiny' src='https://react.semantic-ui.com/images/wireframe/image.png' /> */}\n      <Item.Content>\n        <Item.Header as='h3'>{title}</Item.Header>\n        <Divider clearing />\n        <Label as='span' color='orange' ribbon='right'>\n        {createdDate}\n        </Label>\n        <Item.Meta>{userId}</Item.Meta>\n        <Item.Description><p>{content}</p></Item.Description>\n        {/* <Item.Extra>{createdDate}</Item.Extra> */}\n        <Divider horizontal></Divider>\n        <Item.Extra>\n        {/* <Icon name='comment alternate outline' /> Комментарии\n      <Label size='medium' color='teal' floating>\n        22\n      </Label> */}\n        <Label  size=\"medium\" >\n          <Icon name='comment alternate outline'/> 12\n        </Label>\n\n        {/* <Icon name='comment alternate outline'  corner='top right' />\n        10 комментариев */}\n\n        </Item.Extra>\n      </Item.Content>\n    </Item>\n    </a>\n          </Link>\n     /*  <Card fluid raised>\n    <Card.Content>\n      <Card.Header>{title}</Card.Header>\n      <Card.Meta>{userId}</Card.Meta>\n      <Card.Meta>{createdDate}</Card.Meta>\n      <Card.Description>{content}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <a>\n        <Icon name='comment alternate outline' />\n        10 комментариев\n      </a>\n    </Card.Content>\n  </Card>\n     <Block>\n        <Title>\n          <Link\n            href={{\n              pathname: '/user',\n              query: { id: item.id },\n            }}\n          >\n            <a>{item.title}</a>\n          </Link>\n        </Title>\n        <Description>{item.userId}</Description>\n        <Description>{item.createdDate}</Description>\n        <div>{item.content}</div>\n      </Block> */\n    );\n  }\n}\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}