{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint, prodEndpoint } from '../config'; //import { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION } from '../components/Cart';\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    // uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\n    uri: endpoint,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers: headers\n      });\n    },\n    // local state\n    clientState: {\n      resolvers: {// Mutation: {\n        //   toggleCart(_, variables, { cache }) {\n        //     // read the cartOpen value from the cache\n        //     const { cartOpen } = cache.readQuery({\n        //       query: LOCAL_STATE_QUERY,\n        //     });\n        //     // console.log('cache - ', cache);\n        //     // console.log('cartOpen - ', cartOpen);\n        //     // console.log('cache.data - ', cache.data);\n        //     // write the cart state to the opposite\n        //     const data = {\n        //       data: { cartOpen: !cartOpen },\n        //     };\n        //     // write the data variable onto the cache\n        //     cache.writeData(data);\n        //     // console.log('withData data - ', data);\n        //     return data;\n        //   },\n        // },\n      },\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/media/n2_3TB/EDU/GraphQL/crudapp/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","prodEndpoint","createClient","headers","uri","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","defaults","cartOpen"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,WAAvC,C,CACA;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIJ,YAAJ,CAAiB;AACtB;AACAK,IAAAA,GAAG,EAAEJ,QAFiB;AAGtBK,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBN,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KAVqB;AAWtB;AACAO,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE,CACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBS,OADA;AAsBXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF;AAtBC;AAZS,GAAjB,CAAP;AAuCD;;AAED,eAAef,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { endpoint, prodEndpoint } from '../config';\r\n//import { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION } from '../components/Cart';\r\n\r\nfunction createClient({ headers }) {\r\n  return new ApolloClient({\r\n    // uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\r\n    uri: endpoint,\r\n    request: operation => {\r\n      operation.setContext({\r\n        fetchOptions: {\r\n          credentials: 'include',\r\n        },\r\n        headers,\r\n      });\r\n    },\r\n    // local state\r\n    clientState: {\r\n      resolvers: {\r\n        // Mutation: {\r\n        //   toggleCart(_, variables, { cache }) {\r\n        //     // read the cartOpen value from the cache\r\n        //     const { cartOpen } = cache.readQuery({\r\n        //       query: LOCAL_STATE_QUERY,\r\n        //     });\r\n        //     // console.log('cache - ', cache);\r\n        //     // console.log('cartOpen - ', cartOpen);\r\n        //     // console.log('cache.data - ', cache.data);\r\n        //     // write the cart state to the opposite\r\n        //     const data = {\r\n        //       data: { cartOpen: !cartOpen },\r\n        //     };\r\n        //     // write the data variable onto the cache\r\n        //     cache.writeData(data);\r\n        //     // console.log('withData data - ', data);\r\n        //     return data;\r\n        //   },\r\n        // },\r\n      },\r\n      defaults: {\r\n        cartOpen: false,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport default withApollo(createClient);\r\n"]},"metadata":{},"sourceType":"module"}