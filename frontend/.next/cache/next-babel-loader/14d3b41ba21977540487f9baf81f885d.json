{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostList.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_POSTS_QUERY {\\n    posts {\\n      id\\n      title\\n      userId\\n      content\\n      createdDate\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation, Query, ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport { Item, Header, Segment, Button, Icon, Form } from 'semantic-ui-react';\nimport styled from 'styled-components'; //import NProgress from 'nprogress';\n//import CreateFormCategoryTP from './CreateFormCategoryTP';\n\nimport PostCard from './PostCard'; // import Error from './ErrorMessage';\n\nvar RowDiv = styled.div.withConfig({\n  displayName: \"PostList__RowDiv\",\n  componentId: \"j2ms20-0\"\n})([\"margin:52px 0px;padding:30px 10px;box-shadow:0 1px 2px 0 rgba(34,36,38,0.15);.menu-account-info{font-family:'Montserrat Alternates','Roboto','Open Sans',sans-serif,'Arial';}.segment.segment-bottom{display:flex;justify-content:space-between;}\"]); // const FormTab = styled.div`\n//   form {\n//     > div.inline.fields.radio-buttons {\n//       /* margin: 0 0 1em; */\n//       border: 1px solid rgba(34, 36, 38, 0.15);\n//       padding: 1em 1em;\n//     }\n//     /* div.radio-buttons {\n//       padding: 10px 0;\n//     } */\n//     div.fields.form-group-submit {\n//       /* display: none; */\n//       display: ${props => props.submitShow};\n//     }\n//     div.fields.form-group-edit {\n//       /* display: flex; */\n//       display: ${props => props.editShow};\n//     }\n//   }\n// `;\n\nvar ItemsList = styled.div.withConfig({\n  displayName: \"PostList__ItemsList\",\n  componentId: \"j2ms20-1\"\n})([\"display:block;max-width:\", \";margin:2.5rem 3rem;padding:0 4em;@media (max-width:700px){margin:2.5rem 1rem;}\"], function (props) {\n  return props.theme.maxWidth;\n}); // const perScreen = 5;\n\nvar ALL_POSTS_QUERY = gql(_templateObject()); // const UPDATE_POST_MUTATION = gql`\n//   mutation UPDATE_POST_MUTATION(\n//     $userId: String!\n//     $postId: String!\n//     $title: String!\n//     $content: String!\n//   ) {\n//     updatePost(\n//       userId: $userId\n//       postId: $postId\n//       title: $title\n//       content: $content)\n//       {\n//         id\n//         title\n//         userId\n//         content\n//         createdDate\n//     }\n//   }\n// `;\n\nvar PostList = function PostList(props) {\n  return __jsx(Query, {\n    query: ALL_POSTS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loadingQuery = _ref.loading;\n    return loadingQuery ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\", __jsx(\"i\", {\n      className: \"spinner icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))) : //console.log('query PostList posts: ', posts);\n\n    /* (!posts) {\n      return <p>Постов нет</p>; }*/\n    // console.log('const PostList: props:', props);\n    __jsx(RowDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(Segment.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(Item.Group, {\n      divided: true,\n      relaxed: \"very\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, data.posts.map(function (post) {\n      return __jsx(PostCard, {\n        postcard: post,\n        key: post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    })))));\n  });\n};\n\nexport default PostList;","map":{"version":3,"sources":["/media/n2_3TB/EDU/GraphQL/crudapp/frontend/components/PostList.js"],"names":["React","Component","Mutation","Query","ApolloConsumer","gql","PropTypes","Item","Header","Segment","Button","Icon","Form","styled","PostCard","RowDiv","div","ItemsList","props","theme","maxWidth","ALL_POSTS_QUERY","PostList","data","loadingQuery","loading","posts","map","post","id"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,cAA1B,QAAgD,cAAhD;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,IAA9C,QAA0D,mBAA1D;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,IAAMC,MAAM,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,yPAAZ,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAGJ,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,oHAKA,UAAAE,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,CALL,CAAf,C,CAaA;;AAEA,IAAMC,eAAe,GAAGhB,GAAH,mBAArB,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMiB,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,KAAK;AAAA,SACpB,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEG,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAAqC;AAAA,QAAlCE,IAAkC,QAAlCA,IAAkC;AAAA,QAAnBC,YAAmB,QAA5BC,OAA4B;AAEpC,WACAD,YAAY,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAEA;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF,CADQ,GAYR;;AACJ;;AAEA;AACE,UAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,MAAnB;AAAoB,MAAA,OAAO,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,aAClB,MAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,IAApB;AAA0B,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkB;AAAA,KAAnB,CADH,CAFF,CADF,CADF,CAjBF;AAiCD,GApCH,CADoB;AAAA,CAAtB;;AAyCA,eAAeP,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query, ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport { Item, Header, Segment, Button, Icon, Form } from 'semantic-ui-react';\nimport styled from 'styled-components';\n//import NProgress from 'nprogress';\n//import CreateFormCategoryTP from './CreateFormCategoryTP';\nimport PostCard from './PostCard';\n// import Error from './ErrorMessage';\n\nconst RowDiv = styled.div`\n  margin: 52px 0px;\n  padding: 30px 10px;\n  /* border: 1px solid rgba(34, 36, 38, 0.15);\n  border-radius: 0.28571429rem; */\n  box-shadow: 0 1px 2px 0 rgba(34, 36, 38, 0.15);\n  .menu-account-info {\n    font-family: 'Montserrat Alternates', 'Roboto', 'Open Sans', sans-serif,\n      'Arial';\n  }\n  .segment.segment-bottom {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\n// const FormTab = styled.div`\n//   form {\n//     > div.inline.fields.radio-buttons {\n//       /* margin: 0 0 1em; */\n//       border: 1px solid rgba(34, 36, 38, 0.15);\n//       padding: 1em 1em;\n//     }\n//     /* div.radio-buttons {\n//       padding: 10px 0;\n//     } */\n//     div.fields.form-group-submit {\n//       /* display: none; */\n//       display: ${props => props.submitShow};\n//     }\n//     div.fields.form-group-edit {\n//       /* display: flex; */\n//       display: ${props => props.editShow};\n//     }\n//   }\n// `;\n\nconst ItemsList = styled.div`\n  /* display: grid; */\n  display: block;\n  /* grid-template-columns: 1fr 1fr;\n  grid-gap: 60px; */\n  max-width: ${props => props.theme.maxWidth};\n  margin: 2.5rem 3rem;\n  padding: 0 4em;\n  @media (max-width: 700px) {\n    margin: 2.5rem 1rem;\n  }\n`;\n\n// const perScreen = 5;\n\nconst ALL_POSTS_QUERY = gql`\n  query ALL_POSTS_QUERY {\n    posts {\n      id\n      title\n      userId\n      content\n      createdDate\n    }\n  }\n`;\n\n// const UPDATE_POST_MUTATION = gql`\n//   mutation UPDATE_POST_MUTATION(\n//     $userId: String!\n//     $postId: String!\n//     $title: String!\n//     $content: String!\n//   ) {\n//     updatePost(\n//       userId: $userId\n//       postId: $postId\n//       title: $title\n//       content: $content)\n//       {\n//         id\n//         title\n//         userId\n//         content\n//         createdDate\n//     }\n//   }\n// `;\n\nconst PostList = props => (\n  <Query query={ALL_POSTS_QUERY}>\n    {({ data, loading: loadingQuery }) => {\n\n      return (\n      loadingQuery ? (\n          <div>\n            <p>\n            Загрузка...\n            <i className=\"spinner icon\"></i>\n            {/* <Icon loading name=\"spinner\" /> */}\n            </p>\n\n          </div>\n        )\n        :\n        (\n          //console.log('query PostList posts: ', posts);\n      /* (!posts) {\n        return <p>Постов нет</p>; }*/\n      // console.log('const PostList: props:', props);\n        <RowDiv>\n          <div>\n            <Segment.Group>\n              {/* <Segment> */}\n              <Item.Group divided relaxed='very'>\n                {data.posts.map(post => (\n                  <PostCard postcard={post} key={post.id} />\n                ))}\n                </Item.Group>\n                {/* <CreateFormCategoryTP />\n              </Segment>*/}\n            </Segment.Group>\n          </div>\n        </RowDiv>\n      )\n      );\n    }}\n  </Query>\n);\n\nexport default PostList"]},"metadata":{},"sourceType":"module"}